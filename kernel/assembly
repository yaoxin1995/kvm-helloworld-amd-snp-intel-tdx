
kernel.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000010024 <_start>:
   10024:	57                   	push   %rdi
   10025:	56                   	push   %rsi
   10026:	48 8d 05 5e 35 00 00 	lea    0x355e(%rip),%rax        # 1358b <init_kernel_page_tables>
   1002d:	ff d0                	call   *%rax
   1002f:	48 8b 05 4a b3 03 00 	mov    0x3b34a(%rip),%rax        # 4b380 <pml4>
   10036:	0f 22 d8             	mov    %rax,%cr3
   10039:	48 8d 05 b9 01 00 00 	lea    0x1b9(%rip),%rax        # 101f9 <kernel_main_tdx>
   10040:	ff d0                	call   *%rax

0000000000010042 <hlt>:
   10042:	f4                   	hlt    
   10043:	ff 25 f9 ff ff ff    	jmp    *-0x7(%rip)        # 10042 <hlt>

0000000000010049 <register_syscall>:
   10049:	f3 0f 1e fa          	endbr64 
   1004d:	48 31 c0             	xor    %rax,%rax
   10050:	48 c7 c2 08 00 20 00 	mov    $0x200008,%rdx
   10057:	b9 81 00 00 c0       	mov    $0xc0000081,%ecx
   1005c:	0f 30                	wrmsr  
   1005e:	b8 d5 7f 3f 00       	mov    $0x3f7fd5,%eax
   10063:	48 31 d2             	xor    %rdx,%rdx
   10066:	b9 84 00 00 c0       	mov    $0xc0000084,%ecx
   1006b:	0f 30                	wrmsr  
   1006d:	48 8d 05 77 03 00 00 	lea    0x377(%rip),%rax        # 103eb <syscall_entry>
   10074:	48 c7 c2 80 00 00 00 	mov    $0x80,%rdx
   1007b:	b9 82 00 00 c0       	mov    $0xc0000082,%ecx
   10080:	0f 30                	wrmsr  
   10082:	31 c0                	xor    %eax,%eax
   10084:	c3                   	ret    

0000000000010085 <switch_user>:
   10085:	f3 0f 1e fa          	endbr64 
   10089:	41 57                	push   %r15
   1008b:	0f 57 c0             	xorps  %xmm0,%xmm0
   1008e:	41 56                	push   %r14
   10090:	4c 8d 34 fd 00 00 00 	lea    0x0(,%rdi,8),%r14
   10097:	00 
   10098:	41 55                	push   %r13
   1009a:	49 89 fd             	mov    %rdi,%r13
   1009d:	41 54                	push   %r12
   1009f:	55                   	push   %rbp
   100a0:	53                   	push   %rbx
   100a1:	48 89 f3             	mov    %rsi,%rbx
   100a4:	48 83 ec 28          	sub    $0x28,%rsp
   100a8:	4e 8b 64 36 f8       	mov    -0x8(%rsi,%r14,1),%r12
   100ad:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   100b2:	4c 89 e7             	mov    %r12,%rdi
   100b5:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   100bc:	00 
   100bd:	e8 f4 4a 00 00       	call   14bb6 <strlen>
   100c2:	48 8d 3d 23 53 00 00 	lea    0x5323(%rip),%rdi        # 153ec <vmcall_panic+0x3e>
   100c9:	48 89 c5             	mov    %rax,%rbp
   100cc:	e8 8c 4a 00 00       	call   14b5d <write_in_console>
   100d1:	4d 8d 64 2c 01       	lea    0x1(%r12,%rbp,1),%r12
   100d6:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   100db:	49 29 dc             	sub    %rbx,%r12
   100de:	48 89 ee             	mov    %rbp,%rsi
   100e1:	4d 63 e4             	movslq %r12d,%r12
   100e4:	4c 89 e7             	mov    %r12,%rdi
   100e7:	e8 69 4b 00 00       	call   14c55 <uint64_to_string>
   100ec:	48 89 ef             	mov    %rbp,%rdi
   100ef:	e8 69 4a 00 00       	call   14b5d <write_in_console>
   100f4:	48 8d 3d 85 57 00 00 	lea    0x5785(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   100fb:	e8 5d 4a 00 00       	call   14b5d <write_in_console>
   10100:	be 00 10 00 00       	mov    $0x1000,%esi
   10105:	4c 89 e7             	mov    %r12,%rdi
   10108:	e8 fa 39 00 00       	call   13b07 <kmalloc>
   1010d:	48 89 c7             	mov    %rax,%rdi
   10110:	49 89 c7             	mov    %rax,%r15
   10113:	e8 e3 42 00 00       	call   143fb <physical>
   10118:	ba 03 00 00 00       	mov    $0x3,%edx
   1011d:	48 89 c6             	mov    %rax,%rsi
   10120:	48 89 c7             	mov    %rax,%rdi
   10123:	48 89 c5             	mov    %rax,%rbp
   10126:	e8 f7 42 00 00       	call   14422 <add_trans_user>
   1012b:	31 d2                	xor    %edx,%edx
   1012d:	49 39 d5             	cmp    %rdx,%r13
   10130:	74 13                	je     10145 <switch_user+0xc0>
   10132:	48 8b 0c d3          	mov    (%rbx,%rdx,8),%rcx
   10136:	48 29 d9             	sub    %rbx,%rcx
   10139:	48 01 e9             	add    %rbp,%rcx
   1013c:	48 89 0c d3          	mov    %rcx,(%rbx,%rdx,8)
   10140:	48 ff c2             	inc    %rdx
   10143:	eb e8                	jmp    1012d <switch_user+0xa8>
   10145:	4a c7 04 eb 00 00 00 	movq   $0x0,(%rbx,%r13,8)
   1014c:	00 
   1014d:	4c 89 e2             	mov    %r12,%rdx
   10150:	48 89 de             	mov    %rbx,%rsi
   10153:	4c 89 ff             	mov    %r15,%rdi
   10156:	e8 83 4a 00 00       	call   14bde <memcpy>
   1015b:	48 8b 3b             	mov    (%rbx),%rdi
   1015e:	49 8d 14 2e          	lea    (%r14,%rbp,1),%rdx
   10162:	48 89 ee             	mov    %rbp,%rsi
   10165:	e8 d4 03 00 00       	call   1053e <sys_execve>
   1016a:	48 83 c4 28          	add    $0x28,%rsp
   1016e:	5b                   	pop    %rbx
   1016f:	5d                   	pop    %rbp
   10170:	41 5c                	pop    %r12
   10172:	41 5d                	pop    %r13
   10174:	41 5e                	pop    %r14
   10176:	41 5f                	pop    %r15
   10178:	c3                   	ret    

0000000000010179 <kernel_main>:
   10179:	f3 0f 1e fa          	endbr64 
   1017d:	41 55                	push   %r13
   1017f:	48 0f ba ef 27       	bts    $0x27,%rdi
   10184:	49 89 cd             	mov    %rcx,%r13
   10187:	55                   	push   %rbp
   10188:	48 89 d5             	mov    %rdx,%rbp
   1018b:	48 83 ec 18          	sub    $0x18,%rsp
   1018f:	e8 b4 38 00 00       	call   13a48 <init_allocator>
   10194:	31 c0                	xor    %eax,%eax
   10196:	e8 ae fe ff ff       	call   10049 <register_syscall>
   1019b:	85 c0                	test   %eax,%eax
   1019d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   101a1:	75 11                	jne    101b4 <kernel_main+0x3b>
   101a3:	4c 89 ee             	mov    %r13,%rsi
   101a6:	48 89 ef             	mov    %rbp,%rdi
   101a9:	e8 d7 fe ff ff       	call   10085 <switch_user>
   101ae:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   101b2:	eb 05                	jmp    101b9 <kernel_main+0x40>
   101b4:	b8 01 00 00 00       	mov    $0x1,%eax
   101b9:	48 83 c4 18          	add    $0x18,%rsp
   101bd:	5d                   	pop    %rbp
   101be:	41 5d                	pop    %r13
   101c0:	c3                   	ret    

00000000000101c1 <enable_apic_interrupt>:
   101c1:	f3 0f 1e fa          	endbr64 
   101c5:	50                   	push   %rax
   101c6:	bf 0f 08 00 00       	mov    $0x80f,%edi
   101cb:	e8 e3 4e 00 00       	call   150b3 <tdvmcall_rdmsr>
   101d0:	bf 0f 08 00 00       	mov    $0x80f,%edi
   101d5:	5a                   	pop    %rdx
   101d6:	80 cc 01             	or     $0x1,%ah
   101d9:	48 89 c6             	mov    %rax,%rsi
   101dc:	e9 6f 4f 00 00       	jmp    15150 <tdvmcall_wrmsr>

00000000000101e1 <kernel_test>:
   101e1:	f3 0f 1e fa          	endbr64 
   101e5:	50                   	push   %rax
   101e6:	be 73 00 00 00       	mov    $0x73,%esi
   101eb:	bf f8 03 00 00       	mov    $0x3f8,%edi
   101f0:	e8 a4 4d 00 00       	call   14f99 <tdvmcall_io_write_8>
   101f5:	31 c0                	xor    %eax,%eax
   101f7:	5a                   	pop    %rdx
   101f8:	c3                   	ret    

00000000000101f9 <kernel_main_tdx>:
   101f9:	f3 0f 1e fa          	endbr64 
   101fd:	41 55                	push   %r13
   101ff:	48 8d 3d 00 52 00 00 	lea    0x5200(%rip),%rdi        # 15406 <vmcall_panic+0x58>
   10206:	41 54                	push   %r12
   10208:	49 bc 00 00 00 00 80 	movabs $0x8000000000,%r12
   1020f:	00 00 00 
   10212:	55                   	push   %rbp
   10213:	48 83 ec 40          	sub    $0x40,%rsp
   10217:	e8 41 49 00 00       	call   14b5d <write_in_console>
   1021c:	48 8d 3d 04 52 00 00 	lea    0x5204(%rip),%rdi        # 15427 <vmcall_panic+0x79>
   10223:	e8 35 49 00 00       	call   14b5d <write_in_console>
   10228:	bf 00 00 40 1f       	mov    $0x1f400000,%edi
   1022d:	e8 fe 32 00 00       	call   13530 <get_usable>
   10232:	be 00 00 40 1f       	mov    $0x1f400000,%esi
   10237:	4c 09 e0             	or     %r12,%rax
   1023a:	48 89 c7             	mov    %rax,%rdi
   1023d:	e8 06 38 00 00       	call   13a48 <init_allocator>
   10242:	48 8d 3d f6 51 00 00 	lea    0x51f6(%rip),%rdi        # 1543f <vmcall_panic+0x91>
   10249:	e8 0f 49 00 00       	call   14b5d <write_in_console>
   1024e:	bf 00 00 10 00       	mov    $0x100000,%edi
   10253:	e8 d8 32 00 00       	call   13530 <get_usable>
   10258:	be 00 00 10 00       	mov    $0x100000,%esi
   1025d:	49 89 c5             	mov    %rax,%r13
   10260:	48 89 c5             	mov    %rax,%rbp
   10263:	4d 09 e5             	or     %r12,%r13
   10266:	4c 89 ef             	mov    %r13,%rdi
   10269:	e8 dd 44 00 00       	call   1474b <set_shared_bit>
   1026e:	ba 00 00 10 00       	mov    $0x100000,%edx
   10273:	48 89 ee             	mov    %rbp,%rsi
   10276:	bf 01 00 00 00       	mov    $0x1,%edi
   1027b:	e8 8d 4f 00 00       	call   1520d <tdvmcall_mapgpa>
   10280:	be 00 00 10 00       	mov    $0x100000,%esi
   10285:	4c 89 ef             	mov    %r13,%rdi
   10288:	e8 de 3b 00 00       	call   13e6b <init_allocator_shared>
   1028d:	31 f6                	xor    %esi,%esi
   1028f:	ba 00 00 10 00       	mov    $0x100000,%edx
   10294:	4c 89 ef             	mov    %r13,%rdi
   10297:	e8 2a 49 00 00       	call   14bc6 <memset>
   1029c:	48 8d 3d b3 51 00 00 	lea    0x51b3(%rip),%rdi        # 15456 <vmcall_panic+0xa8>
   102a3:	e8 b5 48 00 00       	call   14b5d <write_in_console>
   102a8:	bf 00 10 00 00       	mov    $0x1000,%edi
   102ad:	e8 7e 32 00 00       	call   13530 <get_usable>
   102b2:	bf 00 10 00 00       	mov    $0x1000,%edi
   102b7:	4c 09 e0             	or     %r12,%rax
   102ba:	48 89 05 6f b0 03 00 	mov    %rax,0x3b06f(%rip)        # 4b330 <gdt>
   102c1:	e8 6a 32 00 00       	call   13530 <get_usable>
   102c6:	48 8b 3d 63 b0 03 00 	mov    0x3b063(%rip),%rdi        # 4b330 <gdt>
   102cd:	31 f6                	xor    %esi,%esi
   102cf:	ba 00 10 00 00       	mov    $0x1000,%edx
   102d4:	4c 09 e0             	or     %r12,%rax
   102d7:	48 89 05 4a b0 03 00 	mov    %rax,0x3b04a(%rip)        # 4b328 <tss>
   102de:	e8 e3 48 00 00       	call   14bc6 <memset>
   102e3:	48 8b 3d 3e b0 03 00 	mov    0x3b03e(%rip),%rdi        # 4b328 <tss>
   102ea:	ba 00 10 00 00       	mov    $0x1000,%edx
   102ef:	31 f6                	xor    %esi,%esi
   102f1:	e8 d0 48 00 00       	call   14bc6 <memset>
   102f6:	48 8b 35 2b b0 03 00 	mov    0x3b02b(%rip),%rsi        # 4b328 <tss>
   102fd:	48 8b 3d 2c b0 03 00 	mov    0x3b02c(%rip),%rdi        # 4b330 <gdt>
   10304:	e8 85 10 00 00       	call   1138e <init_gdt>
   10309:	48 8d 3d 5a 51 00 00 	lea    0x515a(%rip),%rdi        # 1546a <vmcall_panic+0xbc>
   10310:	e8 48 48 00 00       	call   14b5d <write_in_console>
   10315:	bf 00 10 00 00       	mov    $0x1000,%edi
   1031a:	e8 11 32 00 00       	call   13530 <get_usable>
   1031f:	ba 00 10 00 00       	mov    $0x1000,%edx
   10324:	31 f6                	xor    %esi,%esi
   10326:	4c 09 e0             	or     %r12,%rax
   10329:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1032f:	48 89 c7             	mov    %rax,%rdi
   10332:	48 89 05 e7 af 03 00 	mov    %rax,0x3afe7(%rip)        # 4b320 <idt>
   10339:	e8 88 48 00 00       	call   14bc6 <memset>
   1033e:	48 8b 3d db af 03 00 	mov    0x3afdb(%rip),%rdi        # 4b320 <idt>
   10345:	e8 94 2e 00 00       	call   131de <idt_init>
   1034a:	48 8d 3d 2d 51 00 00 	lea    0x512d(%rip),%rdi        # 1547e <vmcall_panic+0xd0>
   10351:	e8 07 48 00 00       	call   14b5d <write_in_console>
   10356:	31 c0                	xor    %eax,%eax
   10358:	e8 64 fe ff ff       	call   101c1 <enable_apic_interrupt>
   1035d:	31 c0                	xor    %eax,%eax
   1035f:	e8 e5 fc ff ff       	call   10049 <register_syscall>
   10364:	85 c0                	test   %eax,%eax
   10366:	75 66                	jne    103ce <kernel_main_tdx+0x1d5>
   10368:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   1036d:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   10372:	31 f6                	xor    %esi,%esi
   10374:	41 89 c4             	mov    %eax,%r12d
   10377:	ba 38 00 00 00       	mov    $0x38,%edx
   1037c:	48 89 ef             	mov    %rbp,%rdi
   1037f:	e8 42 48 00 00       	call   14bc6 <memset>
   10384:	48 8d 35 dd 5c 00 00 	lea    0x5cdd(%rip),%rsi        # 16068 <vmcall_panic+0xcba>
   1038b:	ba 1a 00 00 00       	mov    $0x1a,%edx
   10390:	4c 89 ef             	mov    %r13,%rdi
   10393:	e8 46 48 00 00       	call   14bde <memcpy>
   10398:	4c 89 ef             	mov    %r13,%rdi
   1039b:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   103a0:	e8 11 48 00 00       	call   14bb6 <strlen>
   103a5:	ff c0                	inc    %eax
   103a7:	48 98                	cltq   
   103a9:	48 8d 7c 05 18       	lea    0x18(%rbp,%rax,1),%rdi
   103ae:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   103b3:	e8 fe 47 00 00       	call   14bb6 <strlen>
   103b8:	48 89 ee             	mov    %rbp,%rsi
   103bb:	bf 02 00 00 00       	mov    $0x2,%edi
   103c0:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   103c7:	00 00 
   103c9:	e8 b7 fc ff ff       	call   10085 <switch_user>
   103ce:	48 83 c4 40          	add    $0x40,%rsp
   103d2:	44 89 e0             	mov    %r12d,%eax
   103d5:	5d                   	pop    %rbp
   103d6:	41 5c                	pop    %r12
   103d8:	41 5d                	pop    %r13
   103da:	c3                   	ret    

00000000000103db <kernel_stack>:
	...

00000000000103e3 <user_stack>:
	...

00000000000103eb <syscall_entry>:
   103eb:	48 89 25 f1 ff ff ff 	mov    %rsp,-0xf(%rip)        # 103e3 <user_stack>
   103f2:	48 8b 25 e2 ff ff ff 	mov    -0x1e(%rip),%rsp        # 103db <kernel_stack>
   103f9:	57                   	push   %rdi
   103fa:	56                   	push   %rsi
   103fb:	52                   	push   %rdx
   103fc:	51                   	push   %rcx
   103fd:	41 50                	push   %r8
   103ff:	41 51                	push   %r9
   10401:	41 52                	push   %r10
   10403:	41 53                	push   %r11
   10405:	4c 89 d1             	mov    %r10,%rcx
   10408:	e8 17 00 00 00       	call   10424 <syscall_handler>
   1040d:	41 5b                	pop    %r11
   1040f:	41 5a                	pop    %r10
   10411:	41 59                	pop    %r9
   10413:	41 58                	pop    %r8
   10415:	59                   	pop    %rcx
   10416:	5a                   	pop    %rdx
   10417:	5e                   	pop    %rsi
   10418:	5f                   	pop    %rdi
   10419:	48 8b 25 c3 ff ff ff 	mov    -0x3d(%rip),%rsp        # 103e3 <user_stack>
   10420:	48                   	rex.W
   10421:	48 0f 07             	sysretq 

0000000000010424 <syscall_handler>:
   10424:	f3 0f 1e fa          	endbr64 
   10428:	41 55                	push   %r13
   1042a:	49 89 d5             	mov    %rdx,%r13
   1042d:	55                   	push   %rbp
   1042e:	48 89 fd             	mov    %rdi,%rbp
   10431:	48 8d 3d 66 50 00 00 	lea    0x5066(%rip),%rdi        # 1549e <vmcall_panic+0xf0>
   10438:	48 83 ec 28          	sub    $0x28,%rsp
   1043c:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   10441:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   10446:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1044b:	4c 89 0c 24          	mov    %r9,(%rsp)
   1044f:	e8 09 47 00 00       	call   14b5d <write_in_console>
   10454:	89 c0                	mov    %eax,%eax
   10456:	83 f8 3c             	cmp    $0x3c,%eax
   10459:	77 39                	ja     10494 <syscall_handler+0x70>
   1045b:	89 c0                	mov    %eax,%eax
   1045d:	48 8d 15 bc ac 03 00 	lea    0x3acbc(%rip),%rdx        # 4b120 <syscall_table>
   10464:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
   10468:	48 85 c0             	test   %rax,%rax
   1046b:	74 27                	je     10494 <syscall_handler+0x70>
   1046d:	4c 8b 0c 24          	mov    (%rsp),%r9
   10471:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   10476:	4c 89 ea             	mov    %r13,%rdx
   10479:	48 89 ef             	mov    %rbp,%rdi
   1047c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   10481:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   10486:	48 83 c4 28          	add    $0x28,%rsp
   1048a:	48 0f ba e8 27       	bts    $0x27,%rax
   1048f:	5d                   	pop    %rbp
   10490:	41 5d                	pop    %r13
   10492:	ff e0                	jmp    *%rax
   10494:	48 83 c4 28          	add    $0x28,%rsp
   10498:	48 c7 c0 da ff ff ff 	mov    $0xffffffffffffffda,%rax
   1049f:	5d                   	pop    %rbp
   104a0:	41 5d                	pop    %r13
   104a2:	c3                   	ret    

00000000000104a3 <check_and_get_count>:
   104a3:	41 54                	push   %r12
   104a5:	55                   	push   %rbp
   104a6:	53                   	push   %rbx
   104a7:	48 89 fb             	mov    %rdi,%rbx
   104aa:	48 8d 3d 01 50 00 00 	lea    0x5001(%rip),%rdi        # 154b2 <vmcall_panic+0x104>
   104b1:	e8 a7 46 00 00       	call   14b5d <write_in_console>
   104b6:	31 ff                	xor    %edi,%edi
   104b8:	ba 08 00 00 00       	mov    $0x8,%edx
   104bd:	48 89 de             	mov    %rbx,%rsi
   104c0:	e8 33 44 00 00       	call   148f8 <access_ok>
   104c5:	85 c0                	test   %eax,%eax
   104c7:	75 08                	jne    104d1 <check_and_get_count+0x2e>
   104c9:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
   104cf:	eb 53                	jmp    10524 <check_and_get_count+0x81>
   104d1:	48 8d 3d f9 4f 00 00 	lea    0x4ff9(%rip),%rdi        # 154d1 <vmcall_panic+0x123>
   104d8:	45 31 e4             	xor    %r12d,%r12d
   104db:	48 8d 2d 9e 53 00 00 	lea    0x539e(%rip),%rbp        # 15880 <vmcall_panic+0x4d2>
   104e2:	e8 76 46 00 00       	call   14b5d <write_in_console>
   104e7:	48 8b 3b             	mov    (%rbx),%rdi
   104ea:	48 85 ff             	test   %rdi,%rdi
   104ed:	74 35                	je     10524 <check_and_get_count+0x81>
   104ef:	e8 69 46 00 00       	call   14b5d <write_in_console>
   104f4:	48 89 ef             	mov    %rbp,%rdi
   104f7:	e8 61 46 00 00       	call   14b5d <write_in_console>
   104fc:	48 8b 3b             	mov    (%rbx),%rdi
   104ff:	e8 a2 44 00 00       	call   149a6 <access_string_ok>
   10504:	85 c0                	test   %eax,%eax
   10506:	74 c1                	je     104c9 <check_and_get_count+0x26>
   10508:	48 83 c3 08          	add    $0x8,%rbx
   1050c:	31 ff                	xor    %edi,%edi
   1050e:	ba 08 00 00 00       	mov    $0x8,%edx
   10513:	41 ff c4             	inc    %r12d
   10516:	48 89 de             	mov    %rbx,%rsi
   10519:	e8 da 43 00 00       	call   148f8 <access_ok>
   1051e:	85 c0                	test   %eax,%eax
   10520:	75 c5                	jne    104e7 <check_and_get_count+0x44>
   10522:	eb a5                	jmp    104c9 <check_and_get_count+0x26>
   10524:	44 89 e0             	mov    %r12d,%eax
   10527:	5b                   	pop    %rbx
   10528:	5d                   	pop    %rbp
   10529:	41 5c                	pop    %r12
   1052b:	c3                   	ret    

000000000001052c <read_msr>:
   1052c:	f3 0f 1e fa          	endbr64 
   10530:	89 f9                	mov    %edi,%ecx
   10532:	0f 32                	rdmsr  
   10534:	48 c1 e2 20          	shl    $0x20,%rdx
   10538:	89 c0                	mov    %eax,%eax
   1053a:	48 09 d0             	or     %rdx,%rax
   1053d:	c3                   	ret    

000000000001053e <sys_execve>:
   1053e:	f3 0f 1e fa          	endbr64 
   10542:	41 57                	push   %r15
   10544:	41 56                	push   %r14
   10546:	41 55                	push   %r13
   10548:	41 54                	push   %r12
   1054a:	55                   	push   %rbp
   1054b:	53                   	push   %rbx
   1054c:	48 83 ec 68          	sub    $0x68,%rsp
   10550:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   10555:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1055a:	e8 e7 08 00 00       	call   10e46 <sys_open>
   1055f:	41 89 c6             	mov    %eax,%r14d
   10562:	85 c0                	test   %eax,%eax
   10564:	0f 88 0a 06 00 00    	js     10b74 <sys_execve+0x636>
   1056a:	31 f6                	xor    %esi,%esi
   1056c:	bf 00 10 00 00       	mov    $0x1000,%edi
   10571:	e8 37 3a 00 00       	call   13fad <smalloc>
   10576:	48 89 c7             	mov    %rax,%rdi
   10579:	48 89 c3             	mov    %rax,%rbx
   1057c:	e8 7a 3e 00 00       	call   143fb <physical>
   10581:	ba 00 10 00 00       	mov    $0x1000,%edx
   10586:	44 89 f7             	mov    %r14d,%edi
   10589:	48 89 c6             	mov    %rax,%rsi
   1058c:	e8 3b 0b 00 00       	call   110cc <hp_read>
   10591:	ba 10 00 00 00       	mov    $0x10,%edx
   10596:	48 8d 35 e6 5a 00 00 	lea    0x5ae6(%rip),%rsi        # 16083 <vmcall_panic+0xcd5>
   1059d:	48 89 df             	mov    %rbx,%rdi
   105a0:	e8 46 46 00 00       	call   14beb <memcmp>
   105a5:	89 c5                	mov    %eax,%ebp
   105a7:	85 c0                	test   %eax,%eax
   105a9:	0f 85 aa 05 00 00    	jne    10b59 <sys_execve+0x61b>
   105af:	48 8b 43 18          	mov    0x18(%rbx),%rax
   105b3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   105b8:	8b 43 10             	mov    0x10(%rbx),%eax
   105bb:	8d 50 fe             	lea    -0x2(%rax),%edx
   105be:	66 83 fa 01          	cmp    $0x1,%dx
   105c2:	0f 87 91 05 00 00    	ja     10b59 <sys_execve+0x61b>
   105c8:	48 ba 00 40 55 55 55 	movabs $0x555555554000,%rdx
   105cf:	55 00 00 
   105d2:	66 83 f8 03          	cmp    $0x3,%ax
   105d6:	b8 00 00 00 00       	mov    $0x0,%eax
   105db:	48 0f 44 c2          	cmove  %rdx,%rax
   105df:	48 83 7b 20 40       	cmpq   $0x40,0x20(%rbx)
   105e4:	48 89 04 24          	mov    %rax,(%rsp)
   105e8:	0f 85 73 05 00 00    	jne    10b61 <sys_execve+0x623>
   105ee:	66 83 7b 36 38       	cmpw   $0x38,0x36(%rbx)
   105f3:	0f 85 68 05 00 00    	jne    10b61 <sys_execve+0x623>
   105f9:	0f b7 43 38          	movzwl 0x38(%rbx),%eax
   105fd:	4c 8d 7b 40          	lea    0x40(%rbx),%r15
   10601:	48 6b c0 38          	imul   $0x38,%rax,%rax
   10605:	48 83 c0 40          	add    $0x40,%rax
   10609:	48 3d 00 10 00 00    	cmp    $0x1000,%rax
   1060f:	0f 87 4c 05 00 00    	ja     10b61 <sys_execve+0x623>
   10615:	0f b7 43 38          	movzwl 0x38(%rbx),%eax
   10619:	39 c5                	cmp    %eax,%ebp
   1061b:	0f 8d 85 01 00 00    	jge    107a6 <sys_execve+0x268>
   10621:	41 83 3f 01          	cmpl   $0x1,(%r15)
   10625:	74 08                	je     1062f <sys_execve+0xf1>
   10627:	ff c5                	inc    %ebp
   10629:	49 83 c7 38          	add    $0x38,%r15
   1062d:	eb e6                	jmp    10615 <sys_execve+0xd7>
   1062f:	4d 8b 6f 10          	mov    0x10(%r15),%r13
   10633:	4d 8b 67 20          	mov    0x20(%r15),%r12
   10637:	4c 89 e8             	mov    %r13,%rax
   1063a:	4d 01 e5             	add    %r12,%r13
   1063d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   10643:	48 03 04 24          	add    (%rsp),%rax
   10647:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1064c:	41 f7 c5 ff 0f 00 00 	test   $0xfff,%r13d
   10653:	74 0e                	je     10663 <sys_execve+0x125>
   10655:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
   1065c:	49 81 c5 00 10 00 00 	add    $0x1000,%r13
   10663:	41 8b 7f 04          	mov    0x4(%r15),%edi
   10667:	e8 c0 40 00 00       	call   1472c <pf_to_prot>
   1066c:	4d 8b 4f 08          	mov    0x8(%r15),%r9
   10670:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   10675:	45 89 f0             	mov    %r14d,%r8d
   10678:	89 c2                	mov    %eax,%edx
   1067a:	b9 10 00 00 00       	mov    $0x10,%ecx
   1067f:	89 44 24 28          	mov    %eax,0x28(%rsp)
   10683:	4c 89 ce             	mov    %r9,%rsi
   10686:	49 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%r9
   1068d:	81 e6 ff 0f 00 00    	and    $0xfff,%esi
   10693:	4c 01 e6             	add    %r12,%rsi
   10696:	e8 fb 04 00 00       	call   10b96 <sys_mmap>
   1069b:	48 39 44 24 18       	cmp    %rax,0x18(%rsp)
   106a0:	8b 54 24 28          	mov    0x28(%rsp),%edx
   106a4:	0f 84 a4 00 00 00    	je     1074e <sys_execve+0x210>
   106aa:	85 c0                	test   %eax,%eax
   106ac:	0f 88 b7 04 00 00    	js     10b69 <sys_execve+0x62b>
   106b2:	44 89 f7             	mov    %r14d,%edi
   106b5:	48 8d 6c 24 4c       	lea    0x4c(%rsp),%rbp
   106ba:	4c 8d 25 bf 51 00 00 	lea    0x51bf(%rip),%r12        # 15880 <vmcall_panic+0x4d2>
   106c1:	e8 77 09 00 00       	call   1103d <hp_close>
   106c6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   106cb:	0f 57 c0             	xorps  %xmm0,%xmm0
   106ce:	48 89 ee             	mov    %rbp,%rsi
   106d1:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   106d6:	0f 11 44 24 4c       	movups %xmm0,0x4c(%rsp)
   106db:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   106e0:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   106e7:	00 
   106e8:	e8 68 45 00 00       	call   14c55 <uint64_to_string>
   106ed:	48 8d 3d fb 4d 00 00 	lea    0x4dfb(%rip),%rdi        # 154ef <vmcall_panic+0x141>
   106f4:	e8 64 44 00 00       	call   14b5d <write_in_console>
   106f9:	48 89 ef             	mov    %rbp,%rdi
   106fc:	e8 5c 44 00 00       	call   14b5d <write_in_console>
   10701:	4c 89 e7             	mov    %r12,%rdi
   10704:	e8 54 44 00 00       	call   14b5d <write_in_console>
   10709:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1070e:	e8 90 fd ff ff       	call   104a3 <check_and_get_count>
   10713:	48 89 ee             	mov    %rbp,%rsi
   10716:	4c 63 f8             	movslq %eax,%r15
   10719:	4c 89 ff             	mov    %r15,%rdi
   1071c:	4c 89 fb             	mov    %r15,%rbx
   1071f:	e8 31 45 00 00       	call   14c55 <uint64_to_string>
   10724:	48 8d 3d d4 4d 00 00 	lea    0x4dd4(%rip),%rdi        # 154ff <vmcall_panic+0x151>
   1072b:	e8 2d 44 00 00       	call   14b5d <write_in_console>
   10730:	48 89 ef             	mov    %rbp,%rdi
   10733:	e8 25 44 00 00       	call   14b5d <write_in_console>
   10738:	4c 89 e7             	mov    %r12,%rdi
   1073b:	e8 1d 44 00 00       	call   14b5d <write_in_console>
   10740:	45 85 ff             	test   %r15d,%r15d
   10743:	0f 89 84 00 00 00    	jns    107cd <sys_execve+0x28f>
   10749:	e9 20 04 00 00       	jmp    10b6e <sys_execve+0x630>
   1074e:	49 8b 77 28          	mov    0x28(%r15),%rsi
   10752:	49 39 f4             	cmp    %rsi,%r12
   10755:	0f 83 cc fe ff ff    	jae    10627 <sys_execve+0xe9>
   1075b:	49 03 77 10          	add    0x10(%r15),%rsi
   1075f:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
   10765:	74 0e                	je     10775 <sys_execve+0x237>
   10767:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   1076e:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
   10775:	49 39 f5             	cmp    %rsi,%r13
   10778:	0f 84 a9 fe ff ff    	je     10627 <sys_execve+0xe9>
   1077e:	48 8b 04 24          	mov    (%rsp),%rax
   10782:	4c 29 ee             	sub    %r13,%rsi
   10785:	4d 8d 64 05 00       	lea    0x0(%r13,%rax,1),%r12
   1078a:	4c 89 e7             	mov    %r12,%rdi
   1078d:	e8 b7 34 00 00       	call   13c49 <mmap>
   10792:	49 39 c4             	cmp    %rax,%r12
   10795:	0f 84 8c fe ff ff    	je     10627 <sys_execve+0xe9>
   1079b:	41 be f4 ff ff ff    	mov    $0xfffffff4,%r14d
   107a1:	e9 ce 03 00 00       	jmp    10b74 <sys_execve+0x636>
   107a6:	48 bb 00 f0 fb ff ff 	movabs $0x7ffffffbf000,%rbx
   107ad:	7f 00 00 
   107b0:	ba 03 00 00 00       	mov    $0x3,%edx
   107b5:	be 00 00 04 00       	mov    $0x40000,%esi
   107ba:	48 89 df             	mov    %rbx,%rdi
   107bd:	e8 87 34 00 00       	call   13c49 <mmap>
   107c2:	48 39 d8             	cmp    %rbx,%rax
   107c5:	0f 84 e7 fe ff ff    	je     106b2 <sys_execve+0x174>
   107cb:	eb ce                	jmp    1079b <sys_execve+0x25d>
   107cd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   107d2:	e8 cc fc ff ff       	call   104a3 <check_and_get_count>
   107d7:	48 89 ee             	mov    %rbp,%rsi
   107da:	48 63 f8             	movslq %eax,%rdi
   107dd:	49 89 fe             	mov    %rdi,%r14
   107e0:	e8 70 44 00 00       	call   14c55 <uint64_to_string>
   107e5:	48 8d 3d 1c 4d 00 00 	lea    0x4d1c(%rip),%rdi        # 15508 <vmcall_panic+0x15a>
   107ec:	e8 6c 43 00 00       	call   14b5d <write_in_console>
   107f1:	48 89 ef             	mov    %rbp,%rdi
   107f4:	e8 64 43 00 00       	call   14b5d <write_in_console>
   107f9:	4c 89 e7             	mov    %r12,%rdi
   107fc:	e8 5c 43 00 00       	call   14b5d <write_in_console>
   10801:	45 85 f6             	test   %r14d,%r14d
   10804:	0f 88 64 03 00 00    	js     10b6e <sys_execve+0x630>
   1080a:	49 bd 00 e0 ff ff ff 	movabs $0x7fffffffe000,%r13
   10811:	7f 00 00 
   10814:	43 8d 04 37          	lea    (%r15,%r14,1),%eax
   10818:	31 f6                	xor    %esi,%esi
   1081a:	8d 78 02             	lea    0x2(%rax),%edi
   1081d:	89 44 24 18          	mov    %eax,0x18(%rsp)
   10821:	48 63 ff             	movslq %edi,%rdi
   10824:	48 c1 e7 03          	shl    $0x3,%rdi
   10828:	e8 da 32 00 00       	call   13b07 <kmalloc>
   1082d:	45 8d 46 ff          	lea    -0x1(%r14),%r8d
   10831:	49 89 c1             	mov    %rax,%r9
   10834:	4e 8d 14 f8          	lea    (%rax,%r15,8),%r10
   10838:	41 8d 47 01          	lea    0x1(%r15),%eax
   1083c:	4d 63 c0             	movslq %r8d,%r8
   1083f:	89 44 24 20          	mov    %eax,0x20(%rsp)
   10843:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
   10847:	74 4b                	je     10894 <sys_execve+0x356>
   10849:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1084e:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   10853:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
   10858:	4a 8b 3c c0          	mov    (%rax,%r8,8),%rdi
   1085c:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   10861:	e8 50 43 00 00       	call   14bb6 <strlen>
   10866:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   1086b:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   10870:	48 8d 48 01          	lea    0x1(%rax),%rcx
   10874:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   10879:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   1087e:	49 29 cd             	sub    %rcx,%r13
   10881:	4f 89 6c c2 08       	mov    %r13,0x8(%r10,%r8,8)
   10886:	4c 89 ef             	mov    %r13,%rdi
   10889:	4a 8b 34 c0          	mov    (%rax,%r8,8),%rsi
   1088d:	49 ff c8             	dec    %r8
   10890:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   10892:	eb af                	jmp    10843 <sys_execve+0x305>
   10894:	ff cb                	dec    %ebx
   10896:	48 63 db             	movslq %ebx,%rbx
   10899:	83 fb ff             	cmp    $0xffffffff,%ebx
   1089c:	74 3d                	je     108db <sys_execve+0x39d>
   1089e:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   108a3:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
   108a8:	48 8d 34 d8          	lea    (%rax,%rbx,8),%rsi
   108ac:	48 8b 3e             	mov    (%rsi),%rdi
   108af:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   108b4:	e8 fd 42 00 00       	call   14bb6 <strlen>
   108b9:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
   108be:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   108c3:	48 8d 48 01          	lea    0x1(%rax),%rcx
   108c7:	49 29 cd             	sub    %rcx,%r13
   108ca:	4d 89 2c d9          	mov    %r13,(%r9,%rbx,8)
   108ce:	4c 89 ef             	mov    %r13,%rdi
   108d1:	48 8b 36             	mov    (%rsi),%rsi
   108d4:	48 ff cb             	dec    %rbx
   108d7:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   108d9:	eb be                	jmp    10899 <sys_execve+0x35b>
   108db:	4c 89 eb             	mov    %r13,%rbx
   108de:	44 03 74 24 20       	add    0x20(%rsp),%r14d
   108e3:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   108e7:	41 80 e6 01          	and    $0x1,%r14b
   108eb:	74 04                	je     108f1 <sys_execve+0x3b3>
   108ed:	48 83 eb 08          	sub    $0x8,%rbx
   108f1:	44 8b 6c 24 18       	mov    0x18(%rsp),%r13d
   108f6:	48 89 da             	mov    %rbx,%rdx
   108f9:	41 ff c5             	inc    %r13d
   108fc:	49 63 c5             	movslq %r13d,%rax
   108ff:	49 8b 0c c1          	mov    (%r9,%rax,8),%rcx
   10903:	48 ff c8             	dec    %rax
   10906:	48 83 ea 08          	sub    $0x8,%rdx
   1090a:	41 89 c6             	mov    %eax,%r14d
   1090d:	48 89 0a             	mov    %rcx,(%rdx)
   10910:	83 f8 ff             	cmp    $0xffffffff,%eax
   10913:	75 ea                	jne    108ff <sys_execve+0x3c1>
   10915:	45 89 ed             	mov    %r13d,%r13d
   10918:	4c 89 cf             	mov    %r9,%rdi
   1091b:	e8 7a 31 00 00       	call   13a9a <kfree>
   10920:	4d 6b ed f8          	imul   $0xfffffffffffffff8,%r13,%r13
   10924:	0f 57 c0             	xorps  %xmm0,%xmm0
   10927:	48 8d 3d e3 4b 00 00 	lea    0x4be3(%rip),%rdi        # 15511 <vmcall_panic+0x163>
   1092e:	0f 11 44 24 4c       	movups %xmm0,0x4c(%rsp)
   10933:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   1093a:	00 
   1093b:	4a 8d 5c 2b f0       	lea    -0x10(%rbx,%r13,1),%rbx
   10940:	4c 89 3b             	mov    %r15,(%rbx)
   10943:	e8 15 42 00 00       	call   14b5d <write_in_console>
   10948:	48 8d 3d e4 4b 00 00 	lea    0x4be4(%rip),%rdi        # 15533 <vmcall_panic+0x185>
   1094f:	e8 09 42 00 00       	call   14b5d <write_in_console>
   10954:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10959:	48 89 ee             	mov    %rbp,%rsi
   1095c:	e8 f4 42 00 00       	call   14c55 <uint64_to_string>
   10961:	48 89 ef             	mov    %rbp,%rdi
   10964:	e8 f4 41 00 00       	call   14b5d <write_in_console>
   10969:	4c 89 e7             	mov    %r12,%rdi
   1096c:	e8 ec 41 00 00       	call   14b5d <write_in_console>
   10971:	48 8d 3d cc 4b 00 00 	lea    0x4bcc(%rip),%rdi        # 15544 <vmcall_panic+0x196>
   10978:	e8 e0 41 00 00       	call   14b5d <write_in_console>
   1097d:	48 8b 3c 24          	mov    (%rsp),%rdi
   10981:	48 89 ee             	mov    %rbp,%rsi
   10984:	e8 cc 42 00 00       	call   14c55 <uint64_to_string>
   10989:	48 89 ef             	mov    %rbp,%rdi
   1098c:	e8 cc 41 00 00       	call   14b5d <write_in_console>
   10991:	4c 89 e7             	mov    %r12,%rdi
   10994:	e8 c4 41 00 00       	call   14b5d <write_in_console>
   10999:	48 8d 3d b9 4b 00 00 	lea    0x4bb9(%rip),%rdi        # 15559 <vmcall_panic+0x1ab>
   109a0:	e8 b8 41 00 00       	call   14b5d <write_in_console>
   109a5:	48 89 ee             	mov    %rbp,%rsi
   109a8:	48 89 df             	mov    %rbx,%rdi
   109ab:	e8 a5 42 00 00       	call   14c55 <uint64_to_string>
   109b0:	48 89 ef             	mov    %rbp,%rdi
   109b3:	e8 a5 41 00 00       	call   14b5d <write_in_console>
   109b8:	4c 89 e7             	mov    %r12,%rdi
   109bb:	e8 9d 41 00 00       	call   14b5d <write_in_console>
   109c0:	48 8d 3d a1 4b 00 00 	lea    0x4ba1(%rip),%rdi        # 15568 <vmcall_panic+0x1ba>
   109c7:	e8 91 41 00 00       	call   14b5d <write_in_console>
   109cc:	48 89 ee             	mov    %rbp,%rsi
   109cf:	48 bf 00 f0 ff ff ff 	movabs $0x7ffffffff000,%rdi
   109d6:	7f 00 00 
   109d9:	e8 77 42 00 00       	call   14c55 <uint64_to_string>
   109de:	48 89 ef             	mov    %rbp,%rdi
   109e1:	e8 77 41 00 00       	call   14b5d <write_in_console>
   109e6:	4c 89 e7             	mov    %r12,%rdi
   109e9:	e8 6f 41 00 00       	call   14b5d <write_in_console>
   109ee:	48 8d 3d 89 4b 00 00 	lea    0x4b89(%rip),%rdi        # 1557e <vmcall_panic+0x1d0>
   109f5:	e8 63 41 00 00       	call   14b5d <write_in_console>
   109fa:	48 89 ee             	mov    %rbp,%rsi
   109fd:	bf 00 00 04 00       	mov    $0x40000,%edi
   10a02:	e8 4e 42 00 00       	call   14c55 <uint64_to_string>
   10a07:	48 89 ef             	mov    %rbp,%rdi
   10a0a:	e8 4e 41 00 00       	call   14b5d <write_in_console>
   10a0f:	4c 89 e7             	mov    %r12,%rdi
   10a12:	e8 46 41 00 00       	call   14b5d <write_in_console>
   10a17:	4c 89 e7             	mov    %r12,%rdi
   10a1a:	e8 3e 41 00 00       	call   14b5d <write_in_console>
   10a1f:	48 8b 0c 24          	mov    (%rsp),%rcx
   10a23:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10a28:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   10a2d:	4c 03 2c 24          	add    (%rsp),%r13
   10a31:	48 8d 84 08 20 03 00 	lea    0x320(%rax,%rcx,1),%rax
   10a38:	00 
   10a39:	4d 89 ef             	mov    %r13,%r15
   10a3c:	48 89 04 24          	mov    %rax,(%rsp)
   10a40:	49 8b 3f             	mov    (%r15),%rdi
   10a43:	48 89 ee             	mov    %rbp,%rsi
   10a46:	49 83 c7 08          	add    $0x8,%r15
   10a4a:	e8 06 42 00 00       	call   14c55 <uint64_to_string>
   10a4f:	48 89 ef             	mov    %rbp,%rdi
   10a52:	e8 06 41 00 00       	call   14b5d <write_in_console>
   10a57:	4c 89 e7             	mov    %r12,%rdi
   10a5a:	e8 fe 40 00 00       	call   14b5d <write_in_console>
   10a5f:	4c 39 3c 24          	cmp    %r15,(%rsp)
   10a63:	75 db                	jne    10a40 <sys_execve+0x502>
   10a65:	4c 89 e7             	mov    %r12,%rdi
   10a68:	e8 f0 40 00 00       	call   14b5d <write_in_console>
   10a6d:	bf 80 00 00 c0       	mov    $0xc0000080,%edi
   10a72:	e8 3c 46 00 00       	call   150b3 <tdvmcall_rdmsr>
   10a77:	48 8d 3d 16 4b 00 00 	lea    0x4b16(%rip),%rdi        # 15594 <vmcall_panic+0x1e6>
   10a7e:	49 89 c7             	mov    %rax,%r15
   10a81:	e8 d7 40 00 00       	call   14b5d <write_in_console>
   10a86:	48 89 ee             	mov    %rbp,%rsi
   10a89:	4c 89 ff             	mov    %r15,%rdi
   10a8c:	e8 c4 41 00 00       	call   14c55 <uint64_to_string>
   10a91:	48 89 ef             	mov    %rbp,%rdi
   10a94:	e8 c4 40 00 00       	call   14b5d <write_in_console>
   10a99:	4c 89 e7             	mov    %r12,%rdi
   10a9c:	e8 bc 40 00 00       	call   14b5d <write_in_console>
   10aa1:	b9 82 00 00 c0       	mov    $0xc0000082,%ecx
   10aa6:	0f 32                	rdmsr  
   10aa8:	89 c0                	mov    %eax,%eax
   10aaa:	48 c1 e2 20          	shl    $0x20,%rdx
   10aae:	48 8d 3d eb 4a 00 00 	lea    0x4aeb(%rip),%rdi        # 155a0 <vmcall_panic+0x1f2>
   10ab5:	48 09 c2             	or     %rax,%rdx
   10ab8:	49 89 d7             	mov    %rdx,%r15
   10abb:	e8 9d 40 00 00       	call   14b5d <write_in_console>
   10ac0:	48 89 ee             	mov    %rbp,%rsi
   10ac3:	4c 89 ff             	mov    %r15,%rdi
   10ac6:	e8 8a 41 00 00       	call   14c55 <uint64_to_string>
   10acb:	48 89 ef             	mov    %rbp,%rdi
   10ace:	e8 8a 40 00 00       	call   14b5d <write_in_console>
   10ad3:	4c 89 e7             	mov    %r12,%rdi
   10ad6:	e8 82 40 00 00       	call   14b5d <write_in_console>
   10adb:	b9 81 00 00 c0       	mov    $0xc0000081,%ecx
   10ae0:	0f 32                	rdmsr  
   10ae2:	89 c0                	mov    %eax,%eax
   10ae4:	48 c1 e2 20          	shl    $0x20,%rdx
   10ae8:	48 8d 3d be 4a 00 00 	lea    0x4abe(%rip),%rdi        # 155ad <vmcall_panic+0x1ff>
   10aef:	48 09 c2             	or     %rax,%rdx
   10af2:	49 89 d7             	mov    %rdx,%r15
   10af5:	e8 63 40 00 00       	call   14b5d <write_in_console>
   10afa:	48 89 ee             	mov    %rbp,%rsi
   10afd:	4c 89 ff             	mov    %r15,%rdi
   10b00:	e8 50 41 00 00       	call   14c55 <uint64_to_string>
   10b05:	48 89 ef             	mov    %rbp,%rdi
   10b08:	e8 50 40 00 00       	call   14b5d <write_in_console>
   10b0d:	4c 89 e7             	mov    %r12,%rdi
   10b10:	e8 48 40 00 00       	call   14b5d <write_in_console>
   10b15:	48 89 25 bf f8 ff ff 	mov    %rsp,-0x741(%rip)        # 103db <kernel_stack>
   10b1c:	4c 89 e9             	mov    %r13,%rcx
   10b1f:	49 c7 c3 02 00 00 00 	mov    $0x2,%r11
   10b26:	48 89 dc             	mov    %rbx,%rsp
   10b29:	48 31 c0             	xor    %rax,%rax
   10b2c:	48 31 db             	xor    %rbx,%rbx
   10b2f:	48 31 d2             	xor    %rdx,%rdx
   10b32:	48 31 ff             	xor    %rdi,%rdi
   10b35:	48 31 f6             	xor    %rsi,%rsi
   10b38:	48 31 ed             	xor    %rbp,%rbp
   10b3b:	4d 31 c0             	xor    %r8,%r8
   10b3e:	4d 31 c9             	xor    %r9,%r9
   10b41:	4d 31 d2             	xor    %r10,%r10
   10b44:	4d 31 e4             	xor    %r12,%r12
   10b47:	4d 31 ed             	xor    %r13,%r13
   10b4a:	4d 31 f6             	xor    %r14,%r14
   10b4d:	4d 31 ff             	xor    %r15,%r15
   10b50:	48 31 ed             	xor    %rbp,%rbp
   10b53:	48                   	rex.W
   10b54:	48 0f 07             	sysretq 
   10b57:	eb 1b                	jmp    10b74 <sys_execve+0x636>
   10b59:	41 be f8 ff ff ff    	mov    $0xfffffff8,%r14d
   10b5f:	eb 13                	jmp    10b74 <sys_execve+0x636>
   10b61:	41 be ea ff ff ff    	mov    $0xffffffea,%r14d
   10b67:	eb 0b                	jmp    10b74 <sys_execve+0x636>
   10b69:	41 89 c6             	mov    %eax,%r14d
   10b6c:	eb 06                	jmp    10b74 <sys_execve+0x636>
   10b6e:	41 be f2 ff ff ff    	mov    $0xfffffff2,%r14d
   10b74:	48 83 c4 68          	add    $0x68,%rsp
   10b78:	44 89 f0             	mov    %r14d,%eax
   10b7b:	5b                   	pop    %rbx
   10b7c:	5d                   	pop    %rbp
   10b7d:	41 5c                	pop    %r12
   10b7f:	41 5d                	pop    %r13
   10b81:	41 5e                	pop    %r14
   10b83:	41 5f                	pop    %r15
   10b85:	c3                   	ret    

0000000000010b86 <sys_exit>:
   10b86:	f3 0f 1e fa          	endbr64 
   10b8a:	89 fe                	mov    %edi,%esi
   10b8c:	bf 05 80 00 00       	mov    $0x8005,%edi
   10b91:	e9 0e 06 00 00       	jmp    111a4 <hypercall>

0000000000010b96 <sys_mmap>:
   10b96:	f3 0f 1e fa          	endbr64 
   10b9a:	41 57                	push   %r15
   10b9c:	0f 57 c0             	xorps  %xmm0,%xmm0
   10b9f:	41 56                	push   %r14
   10ba1:	41 89 ce             	mov    %ecx,%r14d
   10ba4:	41 55                	push   %r13
   10ba6:	45 89 c5             	mov    %r8d,%r13d
   10ba9:	41 54                	push   %r12
   10bab:	4c 8d 25 ce 4c 00 00 	lea    0x4cce(%rip),%r12        # 15880 <vmcall_panic+0x4d2>
   10bb2:	55                   	push   %rbp
   10bb3:	48 89 f5             	mov    %rsi,%rbp
   10bb6:	53                   	push   %rbx
   10bb7:	48 83 ec 48          	sub    $0x48,%rsp
   10bbb:	48 8d 5c 24 2c       	lea    0x2c(%rsp),%rbx
   10bc0:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   10bc4:	48 89 de             	mov    %rbx,%rsi
   10bc7:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   10bcc:	0f 11 44 24 2c       	movups %xmm0,0x2c(%rsp)
   10bd1:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   10bd6:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
   10bdd:	00 
   10bde:	e8 72 40 00 00       	call   14c55 <uint64_to_string>
   10be3:	48 8d 3d cf 49 00 00 	lea    0x49cf(%rip),%rdi        # 155b9 <vmcall_panic+0x20b>
   10bea:	e8 6e 3f 00 00       	call   14b5d <write_in_console>
   10bef:	48 89 df             	mov    %rbx,%rdi
   10bf2:	e8 66 3f 00 00       	call   14b5d <write_in_console>
   10bf7:	4c 89 e7             	mov    %r12,%rdi
   10bfa:	e8 5e 3f 00 00       	call   14b5d <write_in_console>
   10bff:	48 89 de             	mov    %rbx,%rsi
   10c02:	48 89 ef             	mov    %rbp,%rdi
   10c05:	e8 4b 40 00 00       	call   14c55 <uint64_to_string>
   10c0a:	48 8d 3d 6e 51 00 00 	lea    0x516e(%rip),%rdi        # 15d7f <vmcall_panic+0x9d1>
   10c11:	e8 47 3f 00 00       	call   14b5d <write_in_console>
   10c16:	48 89 df             	mov    %rbx,%rdi
   10c19:	e8 3f 3f 00 00       	call   14b5d <write_in_console>
   10c1e:	4c 89 e7             	mov    %r12,%rdi
   10c21:	e8 37 3f 00 00       	call   14b5d <write_in_console>
   10c26:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
   10c2b:	48 89 de             	mov    %rbx,%rsi
   10c2e:	e8 22 40 00 00       	call   14c55 <uint64_to_string>
   10c33:	48 8d 3d 88 49 00 00 	lea    0x4988(%rip),%rdi        # 155c2 <vmcall_panic+0x214>
   10c3a:	e8 1e 3f 00 00       	call   14b5d <write_in_console>
   10c3f:	48 89 df             	mov    %rbx,%rdi
   10c42:	e8 16 3f 00 00       	call   14b5d <write_in_console>
   10c47:	4c 89 e7             	mov    %r12,%rdi
   10c4a:	e8 0e 3f 00 00       	call   14b5d <write_in_console>
   10c4f:	48 89 de             	mov    %rbx,%rsi
   10c52:	49 63 fe             	movslq %r14d,%rdi
   10c55:	e8 fb 3f 00 00       	call   14c55 <uint64_to_string>
   10c5a:	48 8d 3d 6a 49 00 00 	lea    0x496a(%rip),%rdi        # 155cb <vmcall_panic+0x21d>
   10c61:	e8 f7 3e 00 00       	call   14b5d <write_in_console>
   10c66:	48 89 df             	mov    %rbx,%rdi
   10c69:	e8 ef 3e 00 00       	call   14b5d <write_in_console>
   10c6e:	4c 89 e7             	mov    %r12,%rdi
   10c71:	e8 e7 3e 00 00       	call   14b5d <write_in_console>
   10c76:	48 89 de             	mov    %rbx,%rsi
   10c79:	49 63 fd             	movslq %r13d,%rdi
   10c7c:	e8 d4 3f 00 00       	call   14c55 <uint64_to_string>
   10c81:	48 8d 3d 4d 49 00 00 	lea    0x494d(%rip),%rdi        # 155d5 <vmcall_panic+0x227>
   10c88:	e8 d0 3e 00 00       	call   14b5d <write_in_console>
   10c8d:	48 89 df             	mov    %rbx,%rdi
   10c90:	e8 c8 3e 00 00       	call   14b5d <write_in_console>
   10c95:	4c 89 e7             	mov    %r12,%rdi
   10c98:	e8 c0 3e 00 00       	call   14b5d <write_in_console>
   10c9d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   10ca2:	48 89 de             	mov    %rbx,%rsi
   10ca5:	e8 ab 3f 00 00       	call   14c55 <uint64_to_string>
   10caa:	48 8d 3d 2b 49 00 00 	lea    0x492b(%rip),%rdi        # 155dc <vmcall_panic+0x22e>
   10cb1:	e8 a7 3e 00 00       	call   14b5d <write_in_console>
   10cb6:	48 89 df             	mov    %rbx,%rdi
   10cb9:	e8 9f 3e 00 00       	call   14b5d <write_in_console>
   10cbe:	4c 89 e7             	mov    %r12,%rdi
   10cc1:	e8 97 3e 00 00       	call   14b5d <write_in_console>
   10cc6:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   10ccb:	41 f7 c2 ff 0f 00 00 	test   $0xfff,%r10d
   10cd2:	0f 85 4c 01 00 00    	jne    10e24 <sys_mmap+0x28e>
   10cd8:	48 85 ed             	test   %rbp,%rbp
   10cdb:	0f 84 43 01 00 00    	je     10e24 <sys_mmap+0x28e>
   10ce1:	41 80 e6 10          	and    $0x10,%r14b
   10ce5:	74 2a                	je     10d11 <sys_mmap+0x17b>
   10ce7:	4d 85 d2             	test   %r10,%r10
   10cea:	74 25                	je     10d11 <sys_mmap+0x17b>
   10cec:	4c 89 d0             	mov    %r10,%rax
   10cef:	49 c7 c7 ea ff ff ff 	mov    $0xffffffffffffffea,%r15
   10cf6:	48 c1 e8 30          	shr    $0x30,%rax
   10cfa:	0f 85 34 01 00 00    	jne    10e34 <sys_mmap+0x29e>
   10d00:	4c 89 d0             	mov    %r10,%rax
   10d03:	48 c1 e8 27          	shr    $0x27,%rax
   10d07:	48 ff c8             	dec    %rax
   10d0a:	75 08                	jne    10d14 <sys_mmap+0x17e>
   10d0c:	e9 23 01 00 00       	jmp    10e34 <sys_mmap+0x29e>
   10d11:	45 31 d2             	xor    %r10d,%r10d
   10d14:	49 89 ee             	mov    %rbp,%r14
   10d17:	f7 c5 ff 0f 00 00    	test   $0xfff,%ebp
   10d1d:	74 0e                	je     10d2d <sys_mmap+0x197>
   10d1f:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
   10d26:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
   10d2d:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   10d31:	4c 89 f6             	mov    %r14,%rsi
   10d34:	4c 89 d7             	mov    %r10,%rdi
   10d37:	83 ca 03             	or     $0x3,%edx
   10d3a:	e8 ae 2f 00 00       	call   13ced <mmap_shared>
   10d3f:	49 89 c7             	mov    %rax,%r15
   10d42:	48 85 c0             	test   %rax,%rax
   10d45:	0f 84 e2 00 00 00    	je     10e2d <sys_mmap+0x297>
   10d4b:	45 85 ed             	test   %r13d,%r13d
   10d4e:	79 14                	jns    10d64 <sys_mmap+0x1ce>
   10d50:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   10d54:	4c 89 f6             	mov    %r14,%rsi
   10d57:	4c 89 ff             	mov    %r15,%rdi
   10d5a:	e8 45 30 00 00       	call   13da4 <mprotect>
   10d5f:	e9 d0 00 00 00       	jmp    10e34 <sys_mmap+0x29e>
   10d64:	8b 74 24 10          	mov    0x10(%rsp),%esi
   10d68:	31 d2                	xor    %edx,%edx
   10d6a:	44 89 ef             	mov    %r13d,%edi
   10d6d:	e8 db 02 00 00       	call   1104d <hp_lseek>
   10d72:	85 c0                	test   %eax,%eax
   10d74:	79 08                	jns    10d7e <sys_mmap+0x1e8>
   10d76:	4c 63 f8             	movslq %eax,%r15
   10d79:	e9 b6 00 00 00       	jmp    10e34 <sys_mmap+0x29e>
   10d7e:	ba 01 00 00 00       	mov    $0x1,%edx
   10d83:	be 01 00 00 00       	mov    $0x1,%esi
   10d88:	4c 89 ff             	mov    %r15,%rdi
   10d8b:	e8 2f 38 00 00       	call   145bf <translate>
   10d90:	48 89 de             	mov    %rbx,%rsi
   10d93:	48 89 c7             	mov    %rax,%rdi
   10d96:	e8 ba 3e 00 00       	call   14c55 <uint64_to_string>
   10d9b:	48 8d 3d 45 48 00 00 	lea    0x4845(%rip),%rdi        # 155e7 <vmcall_panic+0x239>
   10da2:	e8 b6 3d 00 00       	call   14b5d <write_in_console>
   10da7:	48 89 df             	mov    %rbx,%rdi
   10daa:	e8 ae 3d 00 00       	call   14b5d <write_in_console>
   10daf:	4c 89 e7             	mov    %r12,%rdi
   10db2:	e8 a6 3d 00 00       	call   14b5d <write_in_console>
   10db7:	ba 01 00 00 00       	mov    $0x1,%edx
   10dbc:	be 01 00 00 00       	mov    $0x1,%esi
   10dc1:	4c 89 ff             	mov    %r15,%rdi
   10dc4:	e8 f6 37 00 00       	call   145bf <translate>
   10dc9:	48 89 ea             	mov    %rbp,%rdx
   10dcc:	44 89 ef             	mov    %r13d,%edi
   10dcf:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
   10dd3:	48 89 c6             	mov    %rax,%rsi
   10dd6:	4d 89 fd             	mov    %r15,%r13
   10dd9:	e8 ee 02 00 00       	call   110cc <hp_read>
   10dde:	4a 8d 44 3d 00       	lea    0x0(%rbp,%r15,1),%rax
   10de3:	48 8d 2d 1d 48 00 00 	lea    0x481d(%rip),%rbp        # 15607 <vmcall_panic+0x259>
   10dea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10def:	4c 3b 6c 24 10       	cmp    0x10(%rsp),%r13
   10df4:	0f 84 56 ff ff ff    	je     10d50 <sys_mmap+0x1ba>
   10dfa:	48 89 ef             	mov    %rbp,%rdi
   10dfd:	49 83 c5 08          	add    $0x8,%r13
   10e01:	e8 57 3d 00 00       	call   14b5d <write_in_console>
   10e06:	49 8b 7d f8          	mov    -0x8(%r13),%rdi
   10e0a:	48 89 de             	mov    %rbx,%rsi
   10e0d:	e8 43 3e 00 00       	call   14c55 <uint64_to_string>
   10e12:	48 89 df             	mov    %rbx,%rdi
   10e15:	e8 43 3d 00 00       	call   14b5d <write_in_console>
   10e1a:	4c 89 e7             	mov    %r12,%rdi
   10e1d:	e8 3b 3d 00 00       	call   14b5d <write_in_console>
   10e22:	eb cb                	jmp    10def <sys_mmap+0x259>
   10e24:	49 c7 c7 ea ff ff ff 	mov    $0xffffffffffffffea,%r15
   10e2b:	eb 07                	jmp    10e34 <sys_mmap+0x29e>
   10e2d:	49 c7 c7 f4 ff ff ff 	mov    $0xfffffffffffffff4,%r15
   10e34:	48 83 c4 48          	add    $0x48,%rsp
   10e38:	4c 89 f8             	mov    %r15,%rax
   10e3b:	5b                   	pop    %rbx
   10e3c:	5d                   	pop    %rbp
   10e3d:	41 5c                	pop    %r12
   10e3f:	41 5d                	pop    %r13
   10e41:	41 5e                	pop    %r14
   10e43:	41 5f                	pop    %r15
   10e45:	c3                   	ret    

0000000000010e46 <sys_open>:
   10e46:	f3 0f 1e fa          	endbr64 
   10e4a:	41 56                	push   %r14
   10e4c:	41 55                	push   %r13
   10e4e:	4c 8d 2d 2b 4a 00 00 	lea    0x4a2b(%rip),%r13        # 15880 <vmcall_panic+0x4d2>
   10e55:	41 54                	push   %r12
   10e57:	41 bc f2 ff ff ff    	mov    $0xfffffff2,%r12d
   10e5d:	55                   	push   %rbp
   10e5e:	48 89 fd             	mov    %rdi,%rbp
   10e61:	48 8d 3d a9 47 00 00 	lea    0x47a9(%rip),%rdi        # 15611 <vmcall_panic+0x263>
   10e68:	48 83 ec 28          	sub    $0x28,%rsp
   10e6c:	e8 ec 3c 00 00       	call   14b5d <write_in_console>
   10e71:	48 89 ef             	mov    %rbp,%rdi
   10e74:	e8 e4 3c 00 00       	call   14b5d <write_in_console>
   10e79:	4c 89 ef             	mov    %r13,%rdi
   10e7c:	e8 dc 3c 00 00       	call   14b5d <write_in_console>
   10e81:	48 89 ef             	mov    %rbp,%rdi
   10e84:	e8 1d 3b 00 00       	call   149a6 <access_string_ok>
   10e89:	85 c0                	test   %eax,%eax
   10e8b:	0f 84 85 00 00 00    	je     10f16 <sys_open+0xd0>
   10e91:	48 89 ef             	mov    %rbp,%rdi
   10e94:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
   10e9a:	e8 aa 3b 00 00       	call   14a49 <copy_str_from_user_to_shared>
   10e9f:	48 8d 3d 88 47 00 00 	lea    0x4788(%rip),%rdi        # 1562e <vmcall_panic+0x280>
   10ea6:	48 89 c5             	mov    %rax,%rbp
   10ea9:	e8 af 3c 00 00       	call   14b5d <write_in_console>
   10eae:	48 85 ed             	test   %rbp,%rbp
   10eb1:	74 63                	je     10f16 <sys_open+0xd0>
   10eb3:	48 89 ef             	mov    %rbp,%rdi
   10eb6:	4c 8d 74 24 0c       	lea    0xc(%rsp),%r14
   10ebb:	e8 3b 35 00 00       	call   143fb <physical>
   10ec0:	48 89 c7             	mov    %rax,%rdi
   10ec3:	e8 e3 01 00 00       	call   110ab <hp_open>
   10ec8:	0f 57 c0             	xorps  %xmm0,%xmm0
   10ecb:	4c 89 f6             	mov    %r14,%rsi
   10ece:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   10ed5:	00 
   10ed6:	48 63 f8             	movslq %eax,%rdi
   10ed9:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   10ede:	49 89 fc             	mov    %rdi,%r12
   10ee1:	e8 6f 3d 00 00       	call   14c55 <uint64_to_string>
   10ee6:	48 8d 3d 58 47 00 00 	lea    0x4758(%rip),%rdi        # 15645 <vmcall_panic+0x297>
   10eed:	e8 6b 3c 00 00       	call   14b5d <write_in_console>
   10ef2:	4c 89 f7             	mov    %r14,%rdi
   10ef5:	e8 63 3c 00 00       	call   14b5d <write_in_console>
   10efa:	4c 89 ef             	mov    %r13,%rdi
   10efd:	e8 5b 3c 00 00       	call   14b5d <write_in_console>
   10f02:	48 8d 3d 47 47 00 00 	lea    0x4747(%rip),%rdi        # 15650 <vmcall_panic+0x2a2>
   10f09:	e8 4f 3c 00 00       	call   14b5d <write_in_console>
   10f0e:	48 89 ef             	mov    %rbp,%rdi
   10f11:	e8 a7 2f 00 00       	call   13ebd <sfree>
   10f16:	48 83 c4 28          	add    $0x28,%rsp
   10f1a:	44 89 e0             	mov    %r12d,%eax
   10f1d:	5d                   	pop    %rbp
   10f1e:	41 5c                	pop    %r12
   10f20:	41 5d                	pop    %r13
   10f22:	41 5e                	pop    %r14
   10f24:	c3                   	ret    

0000000000010f25 <sys_read>:
   10f25:	f3 0f 1e fa          	endbr64 
   10f29:	41 57                	push   %r15
   10f2b:	41 89 ff             	mov    %edi,%r15d
   10f2e:	48 8d 3d 2d 47 00 00 	lea    0x472d(%rip),%rdi        # 15662 <vmcall_panic+0x2b4>
   10f35:	41 56                	push   %r14
   10f37:	49 c7 c6 f7 ff ff ff 	mov    $0xfffffffffffffff7,%r14
   10f3e:	41 55                	push   %r13
   10f40:	49 89 d5             	mov    %rdx,%r13
   10f43:	41 54                	push   %r12
   10f45:	49 89 f4             	mov    %rsi,%r12
   10f48:	55                   	push   %rbp
   10f49:	e8 0f 3c 00 00       	call   14b5d <write_in_console>
   10f4e:	45 85 ff             	test   %r15d,%r15d
   10f51:	78 64                	js     10fb7 <sys_read+0x92>
   10f53:	4c 89 ea             	mov    %r13,%rdx
   10f56:	4c 89 e6             	mov    %r12,%rsi
   10f59:	bf 01 00 00 00       	mov    $0x1,%edi
   10f5e:	49 c7 c6 f2 ff ff ff 	mov    $0xfffffffffffffff2,%r14
   10f65:	e8 8e 39 00 00       	call   148f8 <access_ok>
   10f6a:	85 c0                	test   %eax,%eax
   10f6c:	74 49                	je     10fb7 <sys_read+0x92>
   10f6e:	31 f6                	xor    %esi,%esi
   10f70:	4c 89 ef             	mov    %r13,%rdi
   10f73:	e8 35 30 00 00       	call   13fad <smalloc>
   10f78:	48 89 c7             	mov    %rax,%rdi
   10f7b:	48 89 c5             	mov    %rax,%rbp
   10f7e:	e8 78 34 00 00       	call   143fb <physical>
   10f83:	4c 89 ea             	mov    %r13,%rdx
   10f86:	44 89 ff             	mov    %r15d,%edi
   10f89:	48 89 c6             	mov    %rax,%rsi
   10f8c:	e8 3b 01 00 00       	call   110cc <hp_read>
   10f91:	4c 63 f0             	movslq %eax,%r14
   10f94:	4d 85 f6             	test   %r14,%r14
   10f97:	78 0a                	js     10fa3 <sys_read+0x7e>
   10f99:	89 c1                	mov    %eax,%ecx
   10f9b:	4c 89 e7             	mov    %r12,%rdi
   10f9e:	48 89 ee             	mov    %rbp,%rsi
   10fa1:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   10fa3:	48 89 ef             	mov    %rbp,%rdi
   10fa6:	e8 12 2f 00 00       	call   13ebd <sfree>
   10fab:	48 8d 3d c0 46 00 00 	lea    0x46c0(%rip),%rdi        # 15672 <vmcall_panic+0x2c4>
   10fb2:	e8 a6 3b 00 00       	call   14b5d <write_in_console>
   10fb7:	5d                   	pop    %rbp
   10fb8:	4c 89 f0             	mov    %r14,%rax
   10fbb:	41 5c                	pop    %r12
   10fbd:	41 5d                	pop    %r13
   10fbf:	41 5e                	pop    %r14
   10fc1:	41 5f                	pop    %r15
   10fc3:	c3                   	ret    

0000000000010fc4 <sys_write>:
   10fc4:	f3 0f 1e fa          	endbr64 
   10fc8:	41 57                	push   %r15
   10fca:	41 56                	push   %r14
   10fcc:	41 55                	push   %r13
   10fce:	49 c7 c5 f7 ff ff ff 	mov    $0xfffffffffffffff7,%r13
   10fd5:	41 54                	push   %r12
   10fd7:	55                   	push   %rbp
   10fd8:	85 ff                	test   %edi,%edi
   10fda:	78 54                	js     11030 <sys_write+0x6c>
   10fdc:	41 89 fe             	mov    %edi,%r14d
   10fdf:	31 ff                	xor    %edi,%edi
   10fe1:	49 89 f7             	mov    %rsi,%r15
   10fe4:	49 89 d4             	mov    %rdx,%r12
   10fe7:	e8 0c 39 00 00       	call   148f8 <access_ok>
   10fec:	49 c7 c5 f2 ff ff ff 	mov    $0xfffffffffffffff2,%r13
   10ff3:	85 c0                	test   %eax,%eax
   10ff5:	74 39                	je     11030 <sys_write+0x6c>
   10ff7:	31 f6                	xor    %esi,%esi
   10ff9:	4c 89 e7             	mov    %r12,%rdi
   10ffc:	e8 ac 2f 00 00       	call   13fad <smalloc>
   11001:	4c 89 fe             	mov    %r15,%rsi
   11004:	4c 89 e1             	mov    %r12,%rcx
   11007:	48 89 c7             	mov    %rax,%rdi
   1100a:	48 89 c5             	mov    %rax,%rbp
   1100d:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   1100f:	48 89 c7             	mov    %rax,%rdi
   11012:	e8 e4 33 00 00       	call   143fb <physical>
   11017:	44 89 f7             	mov    %r14d,%edi
   1101a:	4c 89 e2             	mov    %r12,%rdx
   1101d:	48 89 c6             	mov    %rax,%rsi
   11020:	e8 1f 01 00 00       	call   11144 <hp_write>
   11025:	48 89 ef             	mov    %rbp,%rdi
   11028:	4c 63 e8             	movslq %eax,%r13
   1102b:	e8 8d 2e 00 00       	call   13ebd <sfree>
   11030:	5d                   	pop    %rbp
   11031:	4c 89 e8             	mov    %r13,%rax
   11034:	41 5c                	pop    %r12
   11036:	41 5d                	pop    %r13
   11038:	41 5e                	pop    %r14
   1103a:	41 5f                	pop    %r15
   1103c:	c3                   	ret    

000000000001103d <hp_close>:
   1103d:	f3 0f 1e fa          	endbr64 
   11041:	89 fe                	mov    %edi,%esi
   11043:	bf 03 80 00 00       	mov    $0x8003,%edi
   11048:	e9 57 01 00 00       	jmp    111a4 <hypercall>

000000000001104d <hp_lseek>:
   1104d:	f3 0f 1e fa          	endbr64 
   11051:	41 55                	push   %r13
   11053:	41 89 fd             	mov    %edi,%r13d
   11056:	bf 0c 00 00 00       	mov    $0xc,%edi
   1105b:	41 54                	push   %r12
   1105d:	41 89 d4             	mov    %edx,%r12d
   11060:	55                   	push   %rbp
   11061:	53                   	push   %rbx
   11062:	89 f3                	mov    %esi,%ebx
   11064:	31 f6                	xor    %esi,%esi
   11066:	48 83 ec 18          	sub    $0x18,%rsp
   1106a:	e8 3e 2f 00 00       	call   13fad <smalloc>
   1106f:	44 89 28             	mov    %r13d,(%rax)
   11072:	48 89 c7             	mov    %rax,%rdi
   11075:	48 89 c5             	mov    %rax,%rbp
   11078:	89 58 04             	mov    %ebx,0x4(%rax)
   1107b:	44 89 60 08          	mov    %r12d,0x8(%rax)
   1107f:	e8 77 33 00 00       	call   143fb <physical>
   11084:	bf 04 80 00 00       	mov    $0x8004,%edi
   11089:	89 c6                	mov    %eax,%esi
   1108b:	e8 14 01 00 00       	call   111a4 <hypercall>
   11090:	48 89 ef             	mov    %rbp,%rdi
   11093:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11097:	e8 21 2e 00 00       	call   13ebd <sfree>
   1109c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   110a0:	48 83 c4 18          	add    $0x18,%rsp
   110a4:	5b                   	pop    %rbx
   110a5:	5d                   	pop    %rbp
   110a6:	41 5c                	pop    %r12
   110a8:	41 5d                	pop    %r13
   110aa:	c3                   	ret    

00000000000110ab <hp_open>:
   110ab:	f3 0f 1e fa          	endbr64 
   110af:	53                   	push   %rbx
   110b0:	48 89 fb             	mov    %rdi,%rbx
   110b3:	48 8d 3d cb 45 00 00 	lea    0x45cb(%rip),%rdi        # 15685 <vmcall_panic+0x2d7>
   110ba:	e8 9e 3a 00 00       	call   14b5d <write_in_console>
   110bf:	89 de                	mov    %ebx,%esi
   110c1:	bf 00 80 00 00       	mov    $0x8000,%edi
   110c6:	5b                   	pop    %rbx
   110c7:	e9 d8 00 00 00       	jmp    111a4 <hypercall>

00000000000110cc <hp_read>:
   110cc:	f3 0f 1e fa          	endbr64 
   110d0:	41 55                	push   %r13
   110d2:	49 89 f5             	mov    %rsi,%r13
   110d5:	41 54                	push   %r12
   110d7:	49 89 d4             	mov    %rdx,%r12
   110da:	55                   	push   %rbp
   110db:	53                   	push   %rbx
   110dc:	48 63 df             	movslq %edi,%rbx
   110df:	48 8d 3d b4 45 00 00 	lea    0x45b4(%rip),%rdi        # 1569a <vmcall_panic+0x2ec>
   110e6:	48 83 ec 18          	sub    $0x18,%rsp
   110ea:	e8 6e 3a 00 00       	call   14b5d <write_in_console>
   110ef:	31 f6                	xor    %esi,%esi
   110f1:	bf 18 00 00 00       	mov    $0x18,%edi
   110f6:	e8 b2 2e 00 00       	call   13fad <smalloc>
   110fb:	48 89 18             	mov    %rbx,(%rax)
   110fe:	48 89 c7             	mov    %rax,%rdi
   11101:	48 89 c5             	mov    %rax,%rbp
   11104:	4c 89 68 08          	mov    %r13,0x8(%rax)
   11108:	4c 89 60 10          	mov    %r12,0x10(%rax)
   1110c:	e8 ea 32 00 00       	call   143fb <physical>
   11111:	bf 01 80 00 00       	mov    $0x8001,%edi
   11116:	89 c6                	mov    %eax,%esi
   11118:	e8 87 00 00 00       	call   111a4 <hypercall>
   1111d:	48 89 ef             	mov    %rbp,%rdi
   11120:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11124:	e8 94 2d 00 00       	call   13ebd <sfree>
   11129:	48 8d 3d 79 45 00 00 	lea    0x4579(%rip),%rdi        # 156a9 <vmcall_panic+0x2fb>
   11130:	e8 28 3a 00 00       	call   14b5d <write_in_console>
   11135:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   11139:	48 83 c4 18          	add    $0x18,%rsp
   1113d:	5b                   	pop    %rbx
   1113e:	5d                   	pop    %rbp
   1113f:	41 5c                	pop    %r12
   11141:	41 5d                	pop    %r13
   11143:	c3                   	ret    

0000000000011144 <hp_write>:
   11144:	f3 0f 1e fa          	endbr64 
   11148:	41 55                	push   %r13
   1114a:	49 89 f5             	mov    %rsi,%r13
   1114d:	31 f6                	xor    %esi,%esi
   1114f:	41 54                	push   %r12
   11151:	49 89 d4             	mov    %rdx,%r12
   11154:	55                   	push   %rbp
   11155:	53                   	push   %rbx
   11156:	48 63 df             	movslq %edi,%rbx
   11159:	bf 18 00 00 00       	mov    $0x18,%edi
   1115e:	48 83 ec 18          	sub    $0x18,%rsp
   11162:	e8 46 2e 00 00       	call   13fad <smalloc>
   11167:	48 89 18             	mov    %rbx,(%rax)
   1116a:	48 89 c7             	mov    %rax,%rdi
   1116d:	48 89 c5             	mov    %rax,%rbp
   11170:	4c 89 68 08          	mov    %r13,0x8(%rax)
   11174:	4c 89 60 10          	mov    %r12,0x10(%rax)
   11178:	e8 7e 32 00 00       	call   143fb <physical>
   1117d:	bf 02 80 00 00       	mov    $0x8002,%edi
   11182:	89 c6                	mov    %eax,%esi
   11184:	e8 1b 00 00 00       	call   111a4 <hypercall>
   11189:	48 89 ef             	mov    %rbp,%rdi
   1118c:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   11190:	e8 28 2d 00 00       	call   13ebd <sfree>
   11195:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   11199:	48 83 c4 18          	add    $0x18,%rsp
   1119d:	5b                   	pop    %rbx
   1119e:	5d                   	pop    %rbp
   1119f:	41 5c                	pop    %r12
   111a1:	41 5d                	pop    %r13
   111a3:	c3                   	ret    

00000000000111a4 <hypercall>:
   111a4:	f3 0f 1e fa          	endbr64 
   111a8:	41 54                	push   %r12
   111aa:	41 89 fc             	mov    %edi,%r12d
   111ad:	48 8d 3d 07 45 00 00 	lea    0x4507(%rip),%rdi        # 156bb <vmcall_panic+0x30d>
   111b4:	53                   	push   %rbx
   111b5:	89 f3                	mov    %esi,%ebx
   111b7:	50                   	push   %rax
   111b8:	66 44 89 e2          	mov    %r12w,%dx
   111bc:	89 d8                	mov    %ebx,%eax
   111be:	ef                   	out    %eax,(%dx)
   111bf:	ed                   	in     (%dx),%eax
   111c0:	41 89 c4             	mov    %eax,%r12d
   111c3:	e8 95 39 00 00       	call   14b5d <write_in_console>
   111c8:	48 8d 3d fe 44 00 00 	lea    0x44fe(%rip),%rdi        # 156cd <vmcall_panic+0x31f>
   111cf:	e8 89 39 00 00       	call   14b5d <write_in_console>
   111d4:	44 89 e0             	mov    %r12d,%eax
   111d7:	5a                   	pop    %rdx
   111d8:	5b                   	pop    %rbx
   111d9:	41 5c                	pop    %r12
   111db:	c3                   	ret    

00000000000111dc <gdt_install_user_segment_descriptor>:
   111dc:	f3 0f 1e fa          	endbr64 
   111e0:	48 8b 05 59 a1 03 00 	mov    0x3a159(%rip),%rax        # 4b340 <gdt>
   111e7:	40 0f b6 cf          	movzbl %dil,%ecx
   111eb:	c1 e2 04             	shl    $0x4,%edx
   111ee:	66 ff 05 0b ee 02 00 	incw   0x2ee0b(%rip)        # 40000 <gdt_size>
   111f5:	83 ca 0f             	or     $0xf,%edx
   111f8:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
   111fc:	40 88 70 05          	mov    %sil,0x5(%rax)
   11200:	40 80 e6 60          	and    $0x60,%sil
   11204:	66 c7 00 ff ff       	movw   $0xffff,(%rax)
   11209:	88 50 06             	mov    %dl,0x6(%rax)
   1120c:	74 0c                	je     1121a <gdt_install_user_segment_descriptor+0x3e>
   1120e:	40 0f b6 ff          	movzbl %dil,%edi
   11212:	8d 04 fd 03 00 00 00 	lea    0x3(,%rdi,8),%eax
   11219:	c3                   	ret    
   1121a:	40 0f b6 ff          	movzbl %dil,%edi
   1121e:	8d 04 fd 00 00 00 00 	lea    0x0(,%rdi,8),%eax
   11225:	c3                   	ret    

0000000000011226 <gdt_install_system_segment_descriptor_tss>:
   11226:	f3 0f 1e fa          	endbr64 
   1122a:	48 8b 05 07 a1 03 00 	mov    0x3a107(%rip),%rax        # 4b338 <tss>
   11231:	4c 8b 05 08 a1 03 00 	mov    0x3a108(%rip),%r8        # 4b340 <gdt>
   11238:	40 0f b6 f7          	movzbl %dil,%esi
   1123c:	40 0f b6 ff          	movzbl %dil,%edi
   11240:	48 c1 e6 03          	shl    $0x3,%rsi
   11244:	66 83 05 b4 ed 02 00 	addw   $0x2,0x2edb4(%rip)        # 40000 <gdt_size>
   1124b:	02 
   1124c:	48 89 c1             	mov    %rax,%rcx
   1124f:	49 8d 14 30          	lea    (%r8,%rsi,1),%rdx
   11253:	48 c1 e9 10          	shr    $0x10,%rcx
   11257:	66 89 42 02          	mov    %ax,0x2(%rdx)
   1125b:	88 4a 04             	mov    %cl,0x4(%rdx)
   1125e:	48 89 c1             	mov    %rax,%rcx
   11261:	48 c1 e9 18          	shr    $0x18,%rcx
   11265:	66 c7 02 67 00       	movw   $0x67,(%rdx)
   1126a:	88 4a 07             	mov    %cl,0x7(%rdx)
   1126d:	66 8b 4a 05          	mov    0x5(%rdx),%cx
   11271:	66 81 e1 00 f0       	and    $0xf000,%cx
   11276:	66 81 c9 89 0f       	or     $0xf89,%cx
   1127b:	66 89 4a 05          	mov    %cx,0x5(%rdx)
   1127f:	48 89 c1             	mov    %rax,%rcx
   11282:	49 8d 54 30 08       	lea    0x8(%r8,%rsi,1),%rdx
   11287:	48 c1 e8 30          	shr    $0x30,%rax
   1128b:	48 c1 e9 20          	shr    $0x20,%rcx
   1128f:	66 89 42 02          	mov    %ax,0x2(%rdx)
   11293:	8d 04 fd 00 00 00 00 	lea    0x0(,%rdi,8),%eax
   1129a:	66 89 0a             	mov    %cx,(%rdx)
   1129d:	c3                   	ret    

000000000001129e <load_gdtr>:
   1129e:	f3 0f 1e fa          	endbr64 
   112a2:	55                   	push   %rbp
   112a3:	0f 57 c0             	xorps  %xmm0,%xmm0
   112a6:	48 83 ec 20          	sub    $0x20,%rsp
   112aa:	66 8b 05 4f ed 02 00 	mov    0x2ed4f(%rip),%ax        # 40000 <gdt_size>
   112b1:	48 8b 3d 88 a0 03 00 	mov    0x3a088(%rip),%rdi        # 4b340 <gdt>
   112b8:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   112bd:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   112c2:	8d 04 c5 ff ff ff ff 	lea    -0x1(,%rax,8),%eax
   112c9:	48 89 ee             	mov    %rbp,%rsi
   112cc:	48 89 7c 24 04       	mov    %rdi,0x4(%rsp)
   112d1:	66 89 44 24 02       	mov    %ax,0x2(%rsp)
   112d6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   112dd:	00 
   112de:	e8 72 39 00 00       	call   14c55 <uint64_to_string>
   112e3:	48 8d 3d f3 43 00 00 	lea    0x43f3(%rip),%rdi        # 156dd <vmcall_panic+0x32f>
   112ea:	e8 6e 38 00 00       	call   14b5d <write_in_console>
   112ef:	48 89 ef             	mov    %rbp,%rdi
   112f2:	e8 66 38 00 00       	call   14b5d <write_in_console>
   112f7:	0f b7 7c 24 02       	movzwl 0x2(%rsp),%edi
   112fc:	48 89 ee             	mov    %rbp,%rsi
   112ff:	e8 51 39 00 00       	call   14c55 <uint64_to_string>
   11304:	48 8d 3d e8 43 00 00 	lea    0x43e8(%rip),%rdi        # 156f3 <vmcall_panic+0x345>
   1130b:	e8 4d 38 00 00       	call   14b5d <write_in_console>
   11310:	48 89 ef             	mov    %rbp,%rdi
   11313:	e8 45 38 00 00       	call   14b5d <write_in_console>
   11318:	48 8d 3d 61 45 00 00 	lea    0x4561(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   1131f:	e8 39 38 00 00       	call   14b5d <write_in_console>
   11324:	0f 01 54 24 02       	lgdt   0x2(%rsp)
   11329:	48 83 c4 20          	add    $0x20,%rsp
   1132d:	5d                   	pop    %rbp
   1132e:	c3                   	ret    

000000000001132f <load_cs>:
   1132f:	f3 0f 1e fa          	endbr64 
   11333:	0f b7 ff             	movzwl %di,%edi
   11336:	31 c0                	xor    %eax,%eax
   11338:	57                   	push   %rdi
   11339:	48 8d 05 03 00 00 00 	lea    0x3(%rip),%rax        # 11343 <load_cs+0x14>
   11340:	50                   	push   %rax
   11341:	48 cb                	lretq  
   11343:	c3                   	ret    

0000000000011344 <load_ds>:
   11344:	f3 0f 1e fa          	endbr64 
   11348:	8e df                	mov    %edi,%ds
   1134a:	c3                   	ret    

000000000001134b <load_es>:
   1134b:	f3 0f 1e fa          	endbr64 
   1134f:	8e c7                	mov    %edi,%es
   11351:	c3                   	ret    

0000000000011352 <load_ss>:
   11352:	f3 0f 1e fa          	endbr64 
   11356:	8e d7                	mov    %edi,%ss
   11358:	c3                   	ret    

0000000000011359 <load_fs>:
   11359:	f3 0f 1e fa          	endbr64 
   1135d:	8e e7                	mov    %edi,%fs
   1135f:	c3                   	ret    

0000000000011360 <load_gs>:
   11360:	f3 0f 1e fa          	endbr64 
   11364:	8e ef                	mov    %edi,%gs
   11366:	c3                   	ret    

0000000000011367 <load_tss>:
   11367:	f3 0f 1e fa          	endbr64 
   1136b:	0f 00 df             	ltr    %di
   1136e:	c3                   	ret    

000000000001136f <init_tss>:
   1136f:	f3 0f 1e fa          	endbr64 
   11373:	53                   	push   %rbx
   11374:	0f b6 3d 85 ec 02 00 	movzbl 0x2ec85(%rip),%edi        # 40000 <gdt_size>
   1137b:	e8 a6 fe ff ff       	call   11226 <gdt_install_system_segment_descriptor_tss>
   11380:	89 c3                	mov    %eax,%ebx
   11382:	31 c0                	xor    %eax,%eax
   11384:	e8 15 ff ff ff       	call   1129e <load_gdtr>
   11389:	0f 00 db             	ltr    %bx
   1138c:	5b                   	pop    %rbx
   1138d:	c3                   	ret    

000000000001138e <init_gdt>:
   1138e:	f3 0f 1e fa          	endbr64 
   11392:	41 55                	push   %r13
   11394:	0f 57 c0             	xorps  %xmm0,%xmm0
   11397:	4c 8d 2d e2 44 00 00 	lea    0x44e2(%rip),%r13        # 15880 <vmcall_panic+0x4d2>
   1139e:	41 54                	push   %r12
   113a0:	55                   	push   %rbp
   113a1:	53                   	push   %rbx
   113a2:	48 83 ec 28          	sub    $0x28,%rsp
   113a6:	48 89 35 8b 9f 03 00 	mov    %rsi,0x39f8b(%rip)        # 4b338 <tss>
   113ad:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   113b2:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   113b7:	48 89 ee             	mov    %rbp,%rsi
   113ba:	48 89 3d 7f 9f 03 00 	mov    %rdi,0x39f7f(%rip)        # 4b340 <gdt>
   113c1:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   113c8:	00 
   113c9:	e8 87 38 00 00       	call   14c55 <uint64_to_string>
   113ce:	48 8d 3d 29 43 00 00 	lea    0x4329(%rip),%rdi        # 156fe <vmcall_panic+0x350>
   113d5:	e8 83 37 00 00       	call   14b5d <write_in_console>
   113da:	48 89 ef             	mov    %rbp,%rdi
   113dd:	e8 7b 37 00 00       	call   14b5d <write_in_console>
   113e2:	4c 89 ef             	mov    %r13,%rdi
   113e5:	e8 73 37 00 00       	call   14b5d <write_in_console>
   113ea:	ba 0a 00 00 00       	mov    $0xa,%edx
   113ef:	be 9b 00 00 00       	mov    $0x9b,%esi
   113f4:	0f b6 3d 05 ec 02 00 	movzbl 0x2ec05(%rip),%edi        # 40000 <gdt_size>
   113fb:	e8 dc fd ff ff       	call   111dc <gdt_install_user_segment_descriptor>
   11400:	ba 0c 00 00 00       	mov    $0xc,%edx
   11405:	be 93 00 00 00       	mov    $0x93,%esi
   1140a:	0f b6 3d ef eb 02 00 	movzbl 0x2ebef(%rip),%edi        # 40000 <gdt_size>
   11411:	41 89 c4             	mov    %eax,%r12d
   11414:	e8 c3 fd ff ff       	call   111dc <gdt_install_user_segment_descriptor>
   11419:	89 c3                	mov    %eax,%ebx
   1141b:	31 c0                	xor    %eax,%eax
   1141d:	e8 7c fe ff ff       	call   1129e <load_gdtr>
   11422:	41 0f b7 fc          	movzwl %r12w,%edi
   11426:	e8 04 ff ff ff       	call   1132f <load_cs>
   1142b:	8e db                	mov    %ebx,%ds
   1142d:	8e c3                	mov    %ebx,%es
   1142f:	8e d3                	mov    %ebx,%ss
   11431:	8e e3                	mov    %ebx,%fs
   11433:	8e eb                	mov    %ebx,%gs
   11435:	31 c0                	xor    %eax,%eax
   11437:	e8 33 ff ff ff       	call   1136f <init_tss>
   1143c:	ba 0c 00 00 00       	mov    $0xc,%edx
   11441:	be f3 00 00 00       	mov    $0xf3,%esi
   11446:	0f b6 3d b3 eb 02 00 	movzbl 0x2ebb3(%rip),%edi        # 40000 <gdt_size>
   1144d:	e8 8a fd ff ff       	call   111dc <gdt_install_user_segment_descriptor>
   11452:	ba 0a 00 00 00       	mov    $0xa,%edx
   11457:	be fb 00 00 00       	mov    $0xfb,%esi
   1145c:	0f b6 3d 9d eb 02 00 	movzbl 0x2eb9d(%rip),%edi        # 40000 <gdt_size>
   11463:	e8 74 fd ff ff       	call   111dc <gdt_install_user_segment_descriptor>
   11468:	31 c0                	xor    %eax,%eax
   1146a:	e8 2f fe ff ff       	call   1129e <load_gdtr>
   1146f:	48 89 ee             	mov    %rbp,%rsi
   11472:	0f 01 44 24 02       	sgdt   0x2(%rsp)
   11477:	0f b7 7c 24 02       	movzwl 0x2(%rsp),%edi
   1147c:	e8 d4 37 00 00       	call   14c55 <uint64_to_string>
   11481:	48 8d 3d 86 42 00 00 	lea    0x4286(%rip),%rdi        # 1570e <vmcall_panic+0x360>
   11488:	e8 d0 36 00 00       	call   14b5d <write_in_console>
   1148d:	48 89 ef             	mov    %rbp,%rdi
   11490:	e8 c8 36 00 00       	call   14b5d <write_in_console>
   11495:	4c 89 ef             	mov    %r13,%rdi
   11498:	e8 c0 36 00 00       	call   14b5d <write_in_console>
   1149d:	48 8b 7c 24 04       	mov    0x4(%rsp),%rdi
   114a2:	48 89 ee             	mov    %rbp,%rsi
   114a5:	e8 ab 37 00 00       	call   14c55 <uint64_to_string>
   114aa:	48 8d 3d 6c 42 00 00 	lea    0x426c(%rip),%rdi        # 1571d <vmcall_panic+0x36f>
   114b1:	e8 a7 36 00 00       	call   14b5d <write_in_console>
   114b6:	48 89 ef             	mov    %rbp,%rdi
   114b9:	e8 9f 36 00 00       	call   14b5d <write_in_console>
   114be:	4c 89 ef             	mov    %r13,%rdi
   114c1:	e8 97 36 00 00       	call   14b5d <write_in_console>
   114c6:	48 83 c4 28          	add    $0x28,%rsp
   114ca:	5b                   	pop    %rbx
   114cb:	5d                   	pop    %rbp
   114cc:	41 5c                	pop    %r12
   114ce:	41 5d                	pop    %r13
   114d0:	c3                   	ret    

00000000000114d1 <default_exception>:
   114d1:	f3 0f 1e fa          	endbr64 
   114d5:	50                   	push   %rax
   114d6:	51                   	push   %rcx
   114d7:	52                   	push   %rdx
   114d8:	57                   	push   %rdi
   114d9:	56                   	push   %rsi
   114da:	41 50                	push   %r8
   114dc:	41 51                	push   %r9
   114de:	41 52                	push   %r10
   114e0:	41 53                	push   %r11
   114e2:	53                   	push   %rbx
   114e3:	55                   	push   %rbp
   114e4:	41 54                	push   %r12
   114e6:	41 55                	push   %r13
   114e8:	41 56                	push   %r14
   114ea:	41 57                	push   %r15
   114ec:	48 89 e1             	mov    %rsp,%rcx
   114ef:	48 8d 05 8a 07 00 00 	lea    0x78a(%rip),%rax        # 11c80 <default_exception_inner>
   114f6:	ff d0                	call   *%rax
   114f8:	41 5f                	pop    %r15
   114fa:	41 5e                	pop    %r14
   114fc:	41 5d                	pop    %r13
   114fe:	41 5c                	pop    %r12
   11500:	5d                   	pop    %rbp
   11501:	5b                   	pop    %rbx
   11502:	41 5b                	pop    %r11
   11504:	41 5a                	pop    %r10
   11506:	41 59                	pop    %r9
   11508:	41 58                	pop    %r8
   1150a:	5e                   	pop    %rsi
   1150b:	5f                   	pop    %rdi
   1150c:	5a                   	pop    %rdx
   1150d:	59                   	pop    %rcx
   1150e:	58                   	pop    %rax
   1150f:	48 cf                	iretq  
   11511:	0f 0b                	ud2    

0000000000011513 <default_interrupt>:
   11513:	f3 0f 1e fa          	endbr64 
   11517:	50                   	push   %rax
   11518:	51                   	push   %rcx
   11519:	52                   	push   %rdx
   1151a:	57                   	push   %rdi
   1151b:	56                   	push   %rsi
   1151c:	41 50                	push   %r8
   1151e:	41 51                	push   %r9
   11520:	41 52                	push   %r10
   11522:	41 53                	push   %r11
   11524:	53                   	push   %rbx
   11525:	55                   	push   %rbp
   11526:	41 54                	push   %r12
   11528:	41 55                	push   %r13
   1152a:	41 56                	push   %r14
   1152c:	41 57                	push   %r15
   1152e:	48 89 e1             	mov    %rsp,%rcx
   11531:	48 8d 05 f1 07 00 00 	lea    0x7f1(%rip),%rax        # 11d29 <default_interrupt_inner>
   11538:	ff d0                	call   *%rax
   1153a:	41 5f                	pop    %r15
   1153c:	41 5e                	pop    %r14
   1153e:	41 5d                	pop    %r13
   11540:	41 5c                	pop    %r12
   11542:	5d                   	pop    %rbp
   11543:	5b                   	pop    %rbx
   11544:	41 5b                	pop    %r11
   11546:	41 5a                	pop    %r10
   11548:	41 59                	pop    %r9
   1154a:	41 58                	pop    %r8
   1154c:	5e                   	pop    %rsi
   1154d:	5f                   	pop    %rdi
   1154e:	5a                   	pop    %rdx
   1154f:	59                   	pop    %rcx
   11550:	58                   	pop    %rax
   11551:	48 cf                	iretq  
   11553:	0f 0b                	ud2    

0000000000011555 <divide_by_zero>:
   11555:	f3 0f 1e fa          	endbr64 
   11559:	50                   	push   %rax
   1155a:	51                   	push   %rcx
   1155b:	52                   	push   %rdx
   1155c:	57                   	push   %rdi
   1155d:	56                   	push   %rsi
   1155e:	41 50                	push   %r8
   11560:	41 51                	push   %r9
   11562:	41 52                	push   %r10
   11564:	41 53                	push   %r11
   11566:	53                   	push   %rbx
   11567:	55                   	push   %rbp
   11568:	41 54                	push   %r12
   1156a:	41 55                	push   %r13
   1156c:	41 56                	push   %r14
   1156e:	41 57                	push   %r15
   11570:	48 89 e1             	mov    %rsp,%rcx
   11573:	48 8d 05 58 08 00 00 	lea    0x858(%rip),%rax        # 11dd2 <divide_by_zero_inner>
   1157a:	ff d0                	call   *%rax
   1157c:	41 5f                	pop    %r15
   1157e:	41 5e                	pop    %r14
   11580:	41 5d                	pop    %r13
   11582:	41 5c                	pop    %r12
   11584:	5d                   	pop    %rbp
   11585:	5b                   	pop    %rbx
   11586:	41 5b                	pop    %r11
   11588:	41 5a                	pop    %r10
   1158a:	41 59                	pop    %r9
   1158c:	41 58                	pop    %r8
   1158e:	5e                   	pop    %rsi
   1158f:	5f                   	pop    %rdi
   11590:	5a                   	pop    %rdx
   11591:	59                   	pop    %rcx
   11592:	58                   	pop    %rax
   11593:	48 cf                	iretq  
   11595:	0f 0b                	ud2    

0000000000011597 <debug>:
   11597:	f3 0f 1e fa          	endbr64 
   1159b:	50                   	push   %rax
   1159c:	51                   	push   %rcx
   1159d:	52                   	push   %rdx
   1159e:	57                   	push   %rdi
   1159f:	56                   	push   %rsi
   115a0:	41 50                	push   %r8
   115a2:	41 51                	push   %r9
   115a4:	41 52                	push   %r10
   115a6:	41 53                	push   %r11
   115a8:	53                   	push   %rbx
   115a9:	55                   	push   %rbp
   115aa:	41 54                	push   %r12
   115ac:	41 55                	push   %r13
   115ae:	41 56                	push   %r14
   115b0:	41 57                	push   %r15
   115b2:	48 89 e1             	mov    %rsp,%rcx
   115b5:	48 8d 05 bf 08 00 00 	lea    0x8bf(%rip),%rax        # 11e7b <debug_inner>
   115bc:	ff d0                	call   *%rax
   115be:	41 5f                	pop    %r15
   115c0:	41 5e                	pop    %r14
   115c2:	41 5d                	pop    %r13
   115c4:	41 5c                	pop    %r12
   115c6:	5d                   	pop    %rbp
   115c7:	5b                   	pop    %rbx
   115c8:	41 5b                	pop    %r11
   115ca:	41 5a                	pop    %r10
   115cc:	41 59                	pop    %r9
   115ce:	41 58                	pop    %r8
   115d0:	5e                   	pop    %rsi
   115d1:	5f                   	pop    %rdi
   115d2:	5a                   	pop    %rdx
   115d3:	59                   	pop    %rcx
   115d4:	58                   	pop    %rax
   115d5:	48 cf                	iretq  
   115d7:	0f 0b                	ud2    

00000000000115d9 <non_maskable>:
   115d9:	f3 0f 1e fa          	endbr64 
   115dd:	50                   	push   %rax
   115de:	51                   	push   %rcx
   115df:	52                   	push   %rdx
   115e0:	57                   	push   %rdi
   115e1:	56                   	push   %rsi
   115e2:	41 50                	push   %r8
   115e4:	41 51                	push   %r9
   115e6:	41 52                	push   %r10
   115e8:	41 53                	push   %r11
   115ea:	53                   	push   %rbx
   115eb:	55                   	push   %rbp
   115ec:	41 54                	push   %r12
   115ee:	41 55                	push   %r13
   115f0:	41 56                	push   %r14
   115f2:	41 57                	push   %r15
   115f4:	48 89 e1             	mov    %rsp,%rcx
   115f7:	48 8d 05 26 09 00 00 	lea    0x926(%rip),%rax        # 11f24 <non_maskable_inner>
   115fe:	ff d0                	call   *%rax
   11600:	41 5f                	pop    %r15
   11602:	41 5e                	pop    %r14
   11604:	41 5d                	pop    %r13
   11606:	41 5c                	pop    %r12
   11608:	5d                   	pop    %rbp
   11609:	5b                   	pop    %rbx
   1160a:	41 5b                	pop    %r11
   1160c:	41 5a                	pop    %r10
   1160e:	41 59                	pop    %r9
   11610:	41 58                	pop    %r8
   11612:	5e                   	pop    %rsi
   11613:	5f                   	pop    %rdi
   11614:	5a                   	pop    %rdx
   11615:	59                   	pop    %rcx
   11616:	58                   	pop    %rax
   11617:	48 cf                	iretq  
   11619:	0f 0b                	ud2    

000000000001161b <breakpoint>:
   1161b:	f3 0f 1e fa          	endbr64 
   1161f:	50                   	push   %rax
   11620:	51                   	push   %rcx
   11621:	52                   	push   %rdx
   11622:	57                   	push   %rdi
   11623:	56                   	push   %rsi
   11624:	41 50                	push   %r8
   11626:	41 51                	push   %r9
   11628:	41 52                	push   %r10
   1162a:	41 53                	push   %r11
   1162c:	53                   	push   %rbx
   1162d:	55                   	push   %rbp
   1162e:	41 54                	push   %r12
   11630:	41 55                	push   %r13
   11632:	41 56                	push   %r14
   11634:	41 57                	push   %r15
   11636:	48 89 e1             	mov    %rsp,%rcx
   11639:	48 8d 05 8d 09 00 00 	lea    0x98d(%rip),%rax        # 11fcd <breakpoint_inner>
   11640:	ff d0                	call   *%rax
   11642:	41 5f                	pop    %r15
   11644:	41 5e                	pop    %r14
   11646:	41 5d                	pop    %r13
   11648:	41 5c                	pop    %r12
   1164a:	5d                   	pop    %rbp
   1164b:	5b                   	pop    %rbx
   1164c:	41 5b                	pop    %r11
   1164e:	41 5a                	pop    %r10
   11650:	41 59                	pop    %r9
   11652:	41 58                	pop    %r8
   11654:	5e                   	pop    %rsi
   11655:	5f                   	pop    %rdi
   11656:	5a                   	pop    %rdx
   11657:	59                   	pop    %rcx
   11658:	58                   	pop    %rax
   11659:	48 cf                	iretq  
   1165b:	0f 0b                	ud2    

000000000001165d <overflow>:
   1165d:	f3 0f 1e fa          	endbr64 
   11661:	50                   	push   %rax
   11662:	51                   	push   %rcx
   11663:	52                   	push   %rdx
   11664:	57                   	push   %rdi
   11665:	56                   	push   %rsi
   11666:	41 50                	push   %r8
   11668:	41 51                	push   %r9
   1166a:	41 52                	push   %r10
   1166c:	41 53                	push   %r11
   1166e:	53                   	push   %rbx
   1166f:	55                   	push   %rbp
   11670:	41 54                	push   %r12
   11672:	41 55                	push   %r13
   11674:	41 56                	push   %r14
   11676:	41 57                	push   %r15
   11678:	48 89 e1             	mov    %rsp,%rcx
   1167b:	48 8d 05 f4 09 00 00 	lea    0x9f4(%rip),%rax        # 12076 <overflow_inner>
   11682:	ff d0                	call   *%rax
   11684:	41 5f                	pop    %r15
   11686:	41 5e                	pop    %r14
   11688:	41 5d                	pop    %r13
   1168a:	41 5c                	pop    %r12
   1168c:	5d                   	pop    %rbp
   1168d:	5b                   	pop    %rbx
   1168e:	41 5b                	pop    %r11
   11690:	41 5a                	pop    %r10
   11692:	41 59                	pop    %r9
   11694:	41 58                	pop    %r8
   11696:	5e                   	pop    %rsi
   11697:	5f                   	pop    %rdi
   11698:	5a                   	pop    %rdx
   11699:	59                   	pop    %rcx
   1169a:	58                   	pop    %rax
   1169b:	48 cf                	iretq  
   1169d:	0f 0b                	ud2    

000000000001169f <bound_range>:
   1169f:	f3 0f 1e fa          	endbr64 
   116a3:	50                   	push   %rax
   116a4:	51                   	push   %rcx
   116a5:	52                   	push   %rdx
   116a6:	57                   	push   %rdi
   116a7:	56                   	push   %rsi
   116a8:	41 50                	push   %r8
   116aa:	41 51                	push   %r9
   116ac:	41 52                	push   %r10
   116ae:	41 53                	push   %r11
   116b0:	53                   	push   %rbx
   116b1:	55                   	push   %rbp
   116b2:	41 54                	push   %r12
   116b4:	41 55                	push   %r13
   116b6:	41 56                	push   %r14
   116b8:	41 57                	push   %r15
   116ba:	48 89 e1             	mov    %rsp,%rcx
   116bd:	48 8d 05 5b 0a 00 00 	lea    0xa5b(%rip),%rax        # 1211f <bound_range_inner>
   116c4:	ff d0                	call   *%rax
   116c6:	41 5f                	pop    %r15
   116c8:	41 5e                	pop    %r14
   116ca:	41 5d                	pop    %r13
   116cc:	41 5c                	pop    %r12
   116ce:	5d                   	pop    %rbp
   116cf:	5b                   	pop    %rbx
   116d0:	41 5b                	pop    %r11
   116d2:	41 5a                	pop    %r10
   116d4:	41 59                	pop    %r9
   116d6:	41 58                	pop    %r8
   116d8:	5e                   	pop    %rsi
   116d9:	5f                   	pop    %rdi
   116da:	5a                   	pop    %rdx
   116db:	59                   	pop    %rcx
   116dc:	58                   	pop    %rax
   116dd:	48 cf                	iretq  
   116df:	0f 0b                	ud2    

00000000000116e1 <invalid_opcode>:
   116e1:	f3 0f 1e fa          	endbr64 
   116e5:	50                   	push   %rax
   116e6:	51                   	push   %rcx
   116e7:	52                   	push   %rdx
   116e8:	57                   	push   %rdi
   116e9:	56                   	push   %rsi
   116ea:	41 50                	push   %r8
   116ec:	41 51                	push   %r9
   116ee:	41 52                	push   %r10
   116f0:	41 53                	push   %r11
   116f2:	53                   	push   %rbx
   116f3:	55                   	push   %rbp
   116f4:	41 54                	push   %r12
   116f6:	41 55                	push   %r13
   116f8:	41 56                	push   %r14
   116fa:	41 57                	push   %r15
   116fc:	48 89 e1             	mov    %rsp,%rcx
   116ff:	48 8d 05 c2 0a 00 00 	lea    0xac2(%rip),%rax        # 121c8 <invalid_opcode_inner>
   11706:	ff d0                	call   *%rax
   11708:	41 5f                	pop    %r15
   1170a:	41 5e                	pop    %r14
   1170c:	41 5d                	pop    %r13
   1170e:	41 5c                	pop    %r12
   11710:	5d                   	pop    %rbp
   11711:	5b                   	pop    %rbx
   11712:	41 5b                	pop    %r11
   11714:	41 5a                	pop    %r10
   11716:	41 59                	pop    %r9
   11718:	41 58                	pop    %r8
   1171a:	5e                   	pop    %rsi
   1171b:	5f                   	pop    %rdi
   1171c:	5a                   	pop    %rdx
   1171d:	59                   	pop    %rcx
   1171e:	58                   	pop    %rax
   1171f:	48 cf                	iretq  
   11721:	0f 0b                	ud2    

0000000000011723 <device_not_available>:
   11723:	f3 0f 1e fa          	endbr64 
   11727:	50                   	push   %rax
   11728:	51                   	push   %rcx
   11729:	52                   	push   %rdx
   1172a:	57                   	push   %rdi
   1172b:	56                   	push   %rsi
   1172c:	41 50                	push   %r8
   1172e:	41 51                	push   %r9
   11730:	41 52                	push   %r10
   11732:	41 53                	push   %r11
   11734:	53                   	push   %rbx
   11735:	55                   	push   %rbp
   11736:	41 54                	push   %r12
   11738:	41 55                	push   %r13
   1173a:	41 56                	push   %r14
   1173c:	41 57                	push   %r15
   1173e:	48 89 e1             	mov    %rsp,%rcx
   11741:	48 8d 05 29 0b 00 00 	lea    0xb29(%rip),%rax        # 12271 <device_not_available_inner>
   11748:	ff d0                	call   *%rax
   1174a:	41 5f                	pop    %r15
   1174c:	41 5e                	pop    %r14
   1174e:	41 5d                	pop    %r13
   11750:	41 5c                	pop    %r12
   11752:	5d                   	pop    %rbp
   11753:	5b                   	pop    %rbx
   11754:	41 5b                	pop    %r11
   11756:	41 5a                	pop    %r10
   11758:	41 59                	pop    %r9
   1175a:	41 58                	pop    %r8
   1175c:	5e                   	pop    %rsi
   1175d:	5f                   	pop    %rdi
   1175e:	5a                   	pop    %rdx
   1175f:	59                   	pop    %rcx
   11760:	58                   	pop    %rax
   11761:	48 cf                	iretq  
   11763:	0f 0b                	ud2    

0000000000011765 <double_fault>:
   11765:	f3 0f 1e fa          	endbr64 
   11769:	50                   	push   %rax
   1176a:	51                   	push   %rcx
   1176b:	52                   	push   %rdx
   1176c:	57                   	push   %rdi
   1176d:	56                   	push   %rsi
   1176e:	41 50                	push   %r8
   11770:	41 51                	push   %r9
   11772:	41 52                	push   %r10
   11774:	41 53                	push   %r11
   11776:	53                   	push   %rbx
   11777:	55                   	push   %rbp
   11778:	41 54                	push   %r12
   1177a:	41 55                	push   %r13
   1177c:	41 56                	push   %r14
   1177e:	41 57                	push   %r15
   11780:	48 89 e1             	mov    %rsp,%rcx
   11783:	48 8d 05 47 0d 00 00 	lea    0xd47(%rip),%rax        # 124d1 <double_fault_inner>
   1178a:	ff d0                	call   *%rax
   1178c:	41 5f                	pop    %r15
   1178e:	41 5e                	pop    %r14
   11790:	41 5d                	pop    %r13
   11792:	41 5c                	pop    %r12
   11794:	5d                   	pop    %rbp
   11795:	5b                   	pop    %rbx
   11796:	41 5b                	pop    %r11
   11798:	41 5a                	pop    %r10
   1179a:	41 59                	pop    %r9
   1179c:	41 58                	pop    %r8
   1179e:	5e                   	pop    %rsi
   1179f:	5f                   	pop    %rdi
   117a0:	5a                   	pop    %rdx
   117a1:	59                   	pop    %rcx
   117a2:	58                   	pop    %rax
   117a3:	48 83 c4 08          	add    $0x8,%rsp
   117a7:	48 cf                	iretq  
   117a9:	0f 0b                	ud2    

00000000000117ab <invalid_tss>:
   117ab:	f3 0f 1e fa          	endbr64 
   117af:	50                   	push   %rax
   117b0:	51                   	push   %rcx
   117b1:	52                   	push   %rdx
   117b2:	57                   	push   %rdi
   117b3:	56                   	push   %rsi
   117b4:	41 50                	push   %r8
   117b6:	41 51                	push   %r9
   117b8:	41 52                	push   %r10
   117ba:	41 53                	push   %r11
   117bc:	53                   	push   %rbx
   117bd:	55                   	push   %rbp
   117be:	41 54                	push   %r12
   117c0:	41 55                	push   %r13
   117c2:	41 56                	push   %r14
   117c4:	41 57                	push   %r15
   117c6:	48 89 e1             	mov    %rsp,%rcx
   117c9:	48 8d 05 aa 0d 00 00 	lea    0xdaa(%rip),%rax        # 1257a <invalid_tss_inner>
   117d0:	ff d0                	call   *%rax
   117d2:	41 5f                	pop    %r15
   117d4:	41 5e                	pop    %r14
   117d6:	41 5d                	pop    %r13
   117d8:	41 5c                	pop    %r12
   117da:	5d                   	pop    %rbp
   117db:	5b                   	pop    %rbx
   117dc:	41 5b                	pop    %r11
   117de:	41 5a                	pop    %r10
   117e0:	41 59                	pop    %r9
   117e2:	41 58                	pop    %r8
   117e4:	5e                   	pop    %rsi
   117e5:	5f                   	pop    %rdi
   117e6:	5a                   	pop    %rdx
   117e7:	59                   	pop    %rcx
   117e8:	58                   	pop    %rax
   117e9:	48 83 c4 08          	add    $0x8,%rsp
   117ed:	48 cf                	iretq  
   117ef:	0f 0b                	ud2    

00000000000117f1 <segment_not_present>:
   117f1:	f3 0f 1e fa          	endbr64 
   117f5:	50                   	push   %rax
   117f6:	51                   	push   %rcx
   117f7:	52                   	push   %rdx
   117f8:	57                   	push   %rdi
   117f9:	56                   	push   %rsi
   117fa:	41 50                	push   %r8
   117fc:	41 51                	push   %r9
   117fe:	41 52                	push   %r10
   11800:	41 53                	push   %r11
   11802:	53                   	push   %rbx
   11803:	55                   	push   %rbp
   11804:	41 54                	push   %r12
   11806:	41 55                	push   %r13
   11808:	41 56                	push   %r14
   1180a:	41 57                	push   %r15
   1180c:	48 89 e1             	mov    %rsp,%rcx
   1180f:	48 8d 05 0d 0e 00 00 	lea    0xe0d(%rip),%rax        # 12623 <segment_not_present_inner>
   11816:	ff d0                	call   *%rax
   11818:	41 5f                	pop    %r15
   1181a:	41 5e                	pop    %r14
   1181c:	41 5d                	pop    %r13
   1181e:	41 5c                	pop    %r12
   11820:	5d                   	pop    %rbp
   11821:	5b                   	pop    %rbx
   11822:	41 5b                	pop    %r11
   11824:	41 5a                	pop    %r10
   11826:	41 59                	pop    %r9
   11828:	41 58                	pop    %r8
   1182a:	5e                   	pop    %rsi
   1182b:	5f                   	pop    %rdi
   1182c:	5a                   	pop    %rdx
   1182d:	59                   	pop    %rcx
   1182e:	58                   	pop    %rax
   1182f:	48 83 c4 08          	add    $0x8,%rsp
   11833:	48 cf                	iretq  
   11835:	0f 0b                	ud2    

0000000000011837 <stack_segment>:
   11837:	f3 0f 1e fa          	endbr64 
   1183b:	50                   	push   %rax
   1183c:	51                   	push   %rcx
   1183d:	52                   	push   %rdx
   1183e:	57                   	push   %rdi
   1183f:	56                   	push   %rsi
   11840:	41 50                	push   %r8
   11842:	41 51                	push   %r9
   11844:	41 52                	push   %r10
   11846:	41 53                	push   %r11
   11848:	53                   	push   %rbx
   11849:	55                   	push   %rbp
   1184a:	41 54                	push   %r12
   1184c:	41 55                	push   %r13
   1184e:	41 56                	push   %r14
   11850:	41 57                	push   %r15
   11852:	48 89 e1             	mov    %rsp,%rcx
   11855:	48 8d 05 70 0e 00 00 	lea    0xe70(%rip),%rax        # 126cc <stack_segment_inner>
   1185c:	ff d0                	call   *%rax
   1185e:	41 5f                	pop    %r15
   11860:	41 5e                	pop    %r14
   11862:	41 5d                	pop    %r13
   11864:	41 5c                	pop    %r12
   11866:	5d                   	pop    %rbp
   11867:	5b                   	pop    %rbx
   11868:	41 5b                	pop    %r11
   1186a:	41 5a                	pop    %r10
   1186c:	41 59                	pop    %r9
   1186e:	41 58                	pop    %r8
   11870:	5e                   	pop    %rsi
   11871:	5f                   	pop    %rdi
   11872:	5a                   	pop    %rdx
   11873:	59                   	pop    %rcx
   11874:	58                   	pop    %rax
   11875:	48 83 c4 08          	add    $0x8,%rsp
   11879:	48 cf                	iretq  
   1187b:	0f 0b                	ud2    

000000000001187d <protection>:
   1187d:	f3 0f 1e fa          	endbr64 
   11881:	50                   	push   %rax
   11882:	51                   	push   %rcx
   11883:	52                   	push   %rdx
   11884:	57                   	push   %rdi
   11885:	56                   	push   %rsi
   11886:	41 50                	push   %r8
   11888:	41 51                	push   %r9
   1188a:	41 52                	push   %r10
   1188c:	41 53                	push   %r11
   1188e:	53                   	push   %rbx
   1188f:	55                   	push   %rbp
   11890:	41 54                	push   %r12
   11892:	41 55                	push   %r13
   11894:	41 56                	push   %r14
   11896:	41 57                	push   %r15
   11898:	48 89 e1             	mov    %rsp,%rcx
   1189b:	48 8d 05 d3 0e 00 00 	lea    0xed3(%rip),%rax        # 12775 <protection_inner>
   118a2:	ff d0                	call   *%rax
   118a4:	41 5f                	pop    %r15
   118a6:	41 5e                	pop    %r14
   118a8:	41 5d                	pop    %r13
   118aa:	41 5c                	pop    %r12
   118ac:	5d                   	pop    %rbp
   118ad:	5b                   	pop    %rbx
   118ae:	41 5b                	pop    %r11
   118b0:	41 5a                	pop    %r10
   118b2:	41 59                	pop    %r9
   118b4:	41 58                	pop    %r8
   118b6:	5e                   	pop    %rsi
   118b7:	5f                   	pop    %rdi
   118b8:	5a                   	pop    %rdx
   118b9:	59                   	pop    %rcx
   118ba:	58                   	pop    %rax
   118bb:	48 83 c4 08          	add    $0x8,%rsp
   118bf:	48 cf                	iretq  
   118c1:	0f 0b                	ud2    

00000000000118c3 <page>:
   118c3:	f3 0f 1e fa          	endbr64 
   118c7:	50                   	push   %rax
   118c8:	51                   	push   %rcx
   118c9:	52                   	push   %rdx
   118ca:	57                   	push   %rdi
   118cb:	56                   	push   %rsi
   118cc:	41 50                	push   %r8
   118ce:	41 51                	push   %r9
   118d0:	41 52                	push   %r10
   118d2:	41 53                	push   %r11
   118d4:	53                   	push   %rbx
   118d5:	55                   	push   %rbp
   118d6:	41 54                	push   %r12
   118d8:	41 55                	push   %r13
   118da:	41 56                	push   %r14
   118dc:	41 57                	push   %r15
   118de:	48 89 e1             	mov    %rsp,%rcx
   118e1:	48 8d 05 36 0f 00 00 	lea    0xf36(%rip),%rax        # 1281e <page_inner>
   118e8:	ff d0                	call   *%rax
   118ea:	41 5f                	pop    %r15
   118ec:	41 5e                	pop    %r14
   118ee:	41 5d                	pop    %r13
   118f0:	41 5c                	pop    %r12
   118f2:	5d                   	pop    %rbp
   118f3:	5b                   	pop    %rbx
   118f4:	41 5b                	pop    %r11
   118f6:	41 5a                	pop    %r10
   118f8:	41 59                	pop    %r9
   118fa:	41 58                	pop    %r8
   118fc:	5e                   	pop    %rsi
   118fd:	5f                   	pop    %rdi
   118fe:	5a                   	pop    %rdx
   118ff:	59                   	pop    %rcx
   11900:	58                   	pop    %rax
   11901:	48 83 c4 08          	add    $0x8,%rsp
   11905:	48 cf                	iretq  
   11907:	0f 0b                	ud2    

0000000000011909 <fpu>:
   11909:	f3 0f 1e fa          	endbr64 
   1190d:	50                   	push   %rax
   1190e:	51                   	push   %rcx
   1190f:	52                   	push   %rdx
   11910:	57                   	push   %rdi
   11911:	56                   	push   %rsi
   11912:	41 50                	push   %r8
   11914:	41 51                	push   %r9
   11916:	41 52                	push   %r10
   11918:	41 53                	push   %r11
   1191a:	53                   	push   %rbx
   1191b:	55                   	push   %rbp
   1191c:	41 54                	push   %r12
   1191e:	41 55                	push   %r13
   11920:	41 56                	push   %r14
   11922:	41 57                	push   %r15
   11924:	48 89 e1             	mov    %rsp,%rcx
   11927:	48 8d 05 b4 0f 00 00 	lea    0xfb4(%rip),%rax        # 128e2 <fpu_inner>
   1192e:	ff d0                	call   *%rax
   11930:	41 5f                	pop    %r15
   11932:	41 5e                	pop    %r14
   11934:	41 5d                	pop    %r13
   11936:	41 5c                	pop    %r12
   11938:	5d                   	pop    %rbp
   11939:	5b                   	pop    %rbx
   1193a:	41 5b                	pop    %r11
   1193c:	41 5a                	pop    %r10
   1193e:	41 59                	pop    %r9
   11940:	41 58                	pop    %r8
   11942:	5e                   	pop    %rsi
   11943:	5f                   	pop    %rdi
   11944:	5a                   	pop    %rdx
   11945:	59                   	pop    %rcx
   11946:	58                   	pop    %rax
   11947:	48 83 c4 08          	add    $0x8,%rsp
   1194b:	48 cf                	iretq  
   1194d:	0f 0b                	ud2    

000000000001194f <alignment_check>:
   1194f:	f3 0f 1e fa          	endbr64 
   11953:	50                   	push   %rax
   11954:	51                   	push   %rcx
   11955:	52                   	push   %rdx
   11956:	57                   	push   %rdi
   11957:	56                   	push   %rsi
   11958:	41 50                	push   %r8
   1195a:	41 51                	push   %r9
   1195c:	41 52                	push   %r10
   1195e:	41 53                	push   %r11
   11960:	53                   	push   %rbx
   11961:	55                   	push   %rbp
   11962:	41 54                	push   %r12
   11964:	41 55                	push   %r13
   11966:	41 56                	push   %r14
   11968:	41 57                	push   %r15
   1196a:	48 89 e1             	mov    %rsp,%rcx
   1196d:	48 8d 05 17 10 00 00 	lea    0x1017(%rip),%rax        # 1298b <alignment_check_inner>
   11974:	ff d0                	call   *%rax
   11976:	41 5f                	pop    %r15
   11978:	41 5e                	pop    %r14
   1197a:	41 5d                	pop    %r13
   1197c:	41 5c                	pop    %r12
   1197e:	5d                   	pop    %rbp
   1197f:	5b                   	pop    %rbx
   11980:	41 5b                	pop    %r11
   11982:	41 5a                	pop    %r10
   11984:	41 59                	pop    %r9
   11986:	41 58                	pop    %r8
   11988:	5e                   	pop    %rsi
   11989:	5f                   	pop    %rdi
   1198a:	5a                   	pop    %rdx
   1198b:	59                   	pop    %rcx
   1198c:	58                   	pop    %rax
   1198d:	48 83 c4 08          	add    $0x8,%rsp
   11991:	48 cf                	iretq  
   11993:	0f 0b                	ud2    

0000000000011995 <machine_check>:
   11995:	f3 0f 1e fa          	endbr64 
   11999:	50                   	push   %rax
   1199a:	51                   	push   %rcx
   1199b:	52                   	push   %rdx
   1199c:	57                   	push   %rdi
   1199d:	56                   	push   %rsi
   1199e:	41 50                	push   %r8
   119a0:	41 51                	push   %r9
   119a2:	41 52                	push   %r10
   119a4:	41 53                	push   %r11
   119a6:	53                   	push   %rbx
   119a7:	55                   	push   %rbp
   119a8:	41 54                	push   %r12
   119aa:	41 55                	push   %r13
   119ac:	41 56                	push   %r14
   119ae:	41 57                	push   %r15
   119b0:	48 89 e1             	mov    %rsp,%rcx
   119b3:	48 8d 05 7a 10 00 00 	lea    0x107a(%rip),%rax        # 12a34 <machine_check_inner>
   119ba:	ff d0                	call   *%rax
   119bc:	41 5f                	pop    %r15
   119be:	41 5e                	pop    %r14
   119c0:	41 5d                	pop    %r13
   119c2:	41 5c                	pop    %r12
   119c4:	5d                   	pop    %rbp
   119c5:	5b                   	pop    %rbx
   119c6:	41 5b                	pop    %r11
   119c8:	41 5a                	pop    %r10
   119ca:	41 59                	pop    %r9
   119cc:	41 58                	pop    %r8
   119ce:	5e                   	pop    %rsi
   119cf:	5f                   	pop    %rdi
   119d0:	5a                   	pop    %rdx
   119d1:	59                   	pop    %rcx
   119d2:	58                   	pop    %rax
   119d3:	48 83 c4 08          	add    $0x8,%rsp
   119d7:	48 cf                	iretq  
   119d9:	0f 0b                	ud2    

00000000000119db <simd>:
   119db:	f3 0f 1e fa          	endbr64 
   119df:	50                   	push   %rax
   119e0:	51                   	push   %rcx
   119e1:	52                   	push   %rdx
   119e2:	57                   	push   %rdi
   119e3:	56                   	push   %rsi
   119e4:	41 50                	push   %r8
   119e6:	41 51                	push   %r9
   119e8:	41 52                	push   %r10
   119ea:	41 53                	push   %r11
   119ec:	53                   	push   %rbx
   119ed:	55                   	push   %rbp
   119ee:	41 54                	push   %r12
   119f0:	41 55                	push   %r13
   119f2:	41 56                	push   %r14
   119f4:	41 57                	push   %r15
   119f6:	48 89 e1             	mov    %rsp,%rcx
   119f9:	48 8d 05 dd 10 00 00 	lea    0x10dd(%rip),%rax        # 12add <simd_inner>
   11a00:	ff d0                	call   *%rax
   11a02:	41 5f                	pop    %r15
   11a04:	41 5e                	pop    %r14
   11a06:	41 5d                	pop    %r13
   11a08:	41 5c                	pop    %r12
   11a0a:	5d                   	pop    %rbp
   11a0b:	5b                   	pop    %rbx
   11a0c:	41 5b                	pop    %r11
   11a0e:	41 5a                	pop    %r10
   11a10:	41 59                	pop    %r9
   11a12:	41 58                	pop    %r8
   11a14:	5e                   	pop    %rsi
   11a15:	5f                   	pop    %rdi
   11a16:	5a                   	pop    %rdx
   11a17:	59                   	pop    %rcx
   11a18:	58                   	pop    %rax
   11a19:	48 83 c4 08          	add    $0x8,%rsp
   11a1d:	48 cf                	iretq  
   11a1f:	0f 0b                	ud2    

0000000000011a21 <control_flow>:
   11a21:	f3 0f 1e fa          	endbr64 
   11a25:	50                   	push   %rax
   11a26:	51                   	push   %rcx
   11a27:	52                   	push   %rdx
   11a28:	57                   	push   %rdi
   11a29:	56                   	push   %rsi
   11a2a:	41 50                	push   %r8
   11a2c:	41 51                	push   %r9
   11a2e:	41 52                	push   %r10
   11a30:	41 53                	push   %r11
   11a32:	53                   	push   %rbx
   11a33:	55                   	push   %rbp
   11a34:	41 54                	push   %r12
   11a36:	41 55                	push   %r13
   11a38:	41 56                	push   %r14
   11a3a:	41 57                	push   %r15
   11a3c:	48 89 e1             	mov    %rsp,%rcx
   11a3f:	48 8d 05 40 11 00 00 	lea    0x1140(%rip),%rax        # 12b86 <control_flow_inner>
   11a46:	ff d0                	call   *%rax
   11a48:	41 5f                	pop    %r15
   11a4a:	41 5e                	pop    %r14
   11a4c:	41 5d                	pop    %r13
   11a4e:	41 5c                	pop    %r12
   11a50:	5d                   	pop    %rbp
   11a51:	5b                   	pop    %rbx
   11a52:	41 5b                	pop    %r11
   11a54:	41 5a                	pop    %r10
   11a56:	41 59                	pop    %r9
   11a58:	41 58                	pop    %r8
   11a5a:	5e                   	pop    %rsi
   11a5b:	5f                   	pop    %rdi
   11a5c:	5a                   	pop    %rdx
   11a5d:	59                   	pop    %rcx
   11a5e:	58                   	pop    %rax
   11a5f:	48 83 c4 08          	add    $0x8,%rsp
   11a63:	48 cf                	iretq  
   11a65:	0f 0b                	ud2    

0000000000011a67 <virtualization>:
   11a67:	f3 0f 1e fa          	endbr64 
   11a6b:	50                   	push   %rax
   11a6c:	51                   	push   %rcx
   11a6d:	52                   	push   %rdx
   11a6e:	57                   	push   %rdi
   11a6f:	56                   	push   %rsi
   11a70:	41 50                	push   %r8
   11a72:	41 51                	push   %r9
   11a74:	41 52                	push   %r10
   11a76:	41 53                	push   %r11
   11a78:	53                   	push   %rbx
   11a79:	55                   	push   %rbp
   11a7a:	41 54                	push   %r12
   11a7c:	41 55                	push   %r13
   11a7e:	41 56                	push   %r14
   11a80:	41 57                	push   %r15
   11a82:	48 89 e1             	mov    %rsp,%rcx
   11a85:	48 8d 05 39 15 00 00 	lea    0x1539(%rip),%rax        # 12fc5 <virtualization_inner>
   11a8c:	ff d0                	call   *%rax
   11a8e:	41 5f                	pop    %r15
   11a90:	41 5e                	pop    %r14
   11a92:	41 5d                	pop    %r13
   11a94:	41 5c                	pop    %r12
   11a96:	5d                   	pop    %rbp
   11a97:	5b                   	pop    %rbx
   11a98:	41 5b                	pop    %r11
   11a9a:	41 5a                	pop    %r10
   11a9c:	41 59                	pop    %r9
   11a9e:	41 58                	pop    %r8
   11aa0:	5e                   	pop    %rsi
   11aa1:	5f                   	pop    %rdi
   11aa2:	5a                   	pop    %rdx
   11aa3:	59                   	pop    %rcx
   11aa4:	58                   	pop    %rax
   11aa5:	48 cf                	iretq  
   11aa7:	0f 0b                	ud2    

0000000000011aa9 <dump_register>:
   11aa9:	f3 0f 1e fa          	endbr64 
   11aad:	41 54                	push   %r12
   11aaf:	49 89 f4             	mov    %rsi,%r12
   11ab2:	55                   	push   %rbp
   11ab3:	48 89 d5             	mov    %rdx,%rbp
   11ab6:	50                   	push   %rax
   11ab7:	e8 a1 30 00 00       	call   14b5d <write_in_console>
   11abc:	48 8d 3d 10 40 00 00 	lea    0x4010(%rip),%rdi        # 15ad3 <vmcall_panic+0x725>
   11ac3:	e8 95 30 00 00       	call   14b5d <write_in_console>
   11ac8:	48 89 ee             	mov    %rbp,%rsi
   11acb:	4c 89 e7             	mov    %r12,%rdi
   11ace:	e8 82 31 00 00       	call   14c55 <uint64_to_string>
   11ad3:	48 89 ef             	mov    %rbp,%rdi
   11ad6:	e8 82 30 00 00       	call   14b5d <write_in_console>
   11adb:	5a                   	pop    %rdx
   11adc:	48 8d 3d 9d 3d 00 00 	lea    0x3d9d(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   11ae3:	5d                   	pop    %rbp
   11ae4:	41 5c                	pop    %r12
   11ae6:	e9 72 30 00 00       	jmp    14b5d <write_in_console>

0000000000011aeb <dump_no_error>:
   11aeb:	f3 0f 1e fa          	endbr64 
   11aef:	41 54                	push   %r12
   11af1:	4c 8d 25 58 98 03 00 	lea    0x39858(%rip),%r12        # 4b350 <uint64_buffer>
   11af8:	53                   	push   %rbx
   11af9:	48 89 fb             	mov    %rdi,%rbx
   11afc:	48 8d 3d 28 3c 00 00 	lea    0x3c28(%rip),%rdi        # 1572b <vmcall_panic+0x37d>
   11b03:	50                   	push   %rax
   11b04:	e8 54 30 00 00       	call   14b5d <write_in_console>
   11b09:	48 8b 73 78          	mov    0x78(%rbx),%rsi
   11b0d:	4c 89 e2             	mov    %r12,%rdx
   11b10:	48 8d 3d 26 3c 00 00 	lea    0x3c26(%rip),%rdi        # 1573d <vmcall_panic+0x38f>
   11b17:	e8 8d ff ff ff       	call   11aa9 <dump_register>
   11b1c:	48 8b b3 80 00 00 00 	mov    0x80(%rbx),%rsi
   11b23:	4c 89 e2             	mov    %r12,%rdx
   11b26:	48 8d 3d 14 3c 00 00 	lea    0x3c14(%rip),%rdi        # 15741 <vmcall_panic+0x393>
   11b2d:	e8 77 ff ff ff       	call   11aa9 <dump_register>
   11b32:	48 8b b3 88 00 00 00 	mov    0x88(%rbx),%rsi
   11b39:	4c 89 e2             	mov    %r12,%rdx
   11b3c:	48 8d 3d 01 3c 00 00 	lea    0x3c01(%rip),%rdi        # 15744 <vmcall_panic+0x396>
   11b43:	e8 61 ff ff ff       	call   11aa9 <dump_register>
   11b48:	48 8d 3d fc 3b 00 00 	lea    0x3bfc(%rip),%rdi        # 1574b <vmcall_panic+0x39d>
   11b4f:	e8 09 30 00 00       	call   14b5d <write_in_console>
   11b54:	48 8b 73 48          	mov    0x48(%rbx),%rsi
   11b58:	4c 89 e2             	mov    %r12,%rdx
   11b5b:	48 8d 3d fe 3b 00 00 	lea    0x3bfe(%rip),%rdi        # 15760 <vmcall_panic+0x3b2>
   11b62:	e8 42 ff ff ff       	call   11aa9 <dump_register>
   11b67:	48 8b 73 40          	mov    0x40(%rbx),%rsi
   11b6b:	4c 89 e2             	mov    %r12,%rdx
   11b6e:	48 8d 3d ee 3b 00 00 	lea    0x3bee(%rip),%rdi        # 15763 <vmcall_panic+0x3b5>
   11b75:	e8 2f ff ff ff       	call   11aa9 <dump_register>
   11b7a:	48 8b 73 38          	mov    0x38(%rbx),%rsi
   11b7e:	4c 89 e2             	mov    %r12,%rdx
   11b81:	48 8d 3d de 3b 00 00 	lea    0x3bde(%rip),%rdi        # 15766 <vmcall_panic+0x3b8>
   11b88:	e8 1c ff ff ff       	call   11aa9 <dump_register>
   11b8d:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   11b91:	4c 89 e2             	mov    %r12,%rdx
   11b94:	48 8d 3d cf 3b 00 00 	lea    0x3bcf(%rip),%rdi        # 1576a <vmcall_panic+0x3bc>
   11b9b:	e8 09 ff ff ff       	call   11aa9 <dump_register>
   11ba0:	48 8b 73 70          	mov    0x70(%rbx),%rsi
   11ba4:	4c 89 e2             	mov    %r12,%rdx
   11ba7:	48 8d 3d c0 3b 00 00 	lea    0x3bc0(%rip),%rdi        # 1576e <vmcall_panic+0x3c0>
   11bae:	e8 f6 fe ff ff       	call   11aa9 <dump_register>
   11bb3:	48 8b 73 68          	mov    0x68(%rbx),%rsi
   11bb7:	4c 89 e2             	mov    %r12,%rdx
   11bba:	48 8d 3d b1 3b 00 00 	lea    0x3bb1(%rip),%rdi        # 15772 <vmcall_panic+0x3c4>
   11bc1:	e8 e3 fe ff ff       	call   11aa9 <dump_register>
   11bc6:	48 8b 73 60          	mov    0x60(%rbx),%rsi
   11bca:	4c 89 e2             	mov    %r12,%rdx
   11bcd:	48 8d 3d a2 3b 00 00 	lea    0x3ba2(%rip),%rdi        # 15776 <vmcall_panic+0x3c8>
   11bd4:	e8 d0 fe ff ff       	call   11aa9 <dump_register>
   11bd9:	48 8b 73 58          	mov    0x58(%rbx),%rsi
   11bdd:	4c 89 e2             	mov    %r12,%rdx
   11be0:	48 8d 3d 93 3b 00 00 	lea    0x3b93(%rip),%rdi        # 1577a <vmcall_panic+0x3cc>
   11be7:	e8 bd fe ff ff       	call   11aa9 <dump_register>
   11bec:	48 8b 73 50          	mov    0x50(%rbx),%rsi
   11bf0:	4c 89 e2             	mov    %r12,%rdx
   11bf3:	48 8d 3d 84 3b 00 00 	lea    0x3b84(%rip),%rdi        # 1577e <vmcall_panic+0x3d0>
   11bfa:	e8 aa fe ff ff       	call   11aa9 <dump_register>
   11bff:	48 8d 3d 7c 3b 00 00 	lea    0x3b7c(%rip),%rdi        # 15782 <vmcall_panic+0x3d4>
   11c06:	e8 52 2f 00 00       	call   14b5d <write_in_console>
   11c0b:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   11c0f:	4c 89 e2             	mov    %r12,%rdx
   11c12:	48 8d 3d 80 3b 00 00 	lea    0x3b80(%rip),%rdi        # 15799 <vmcall_panic+0x3eb>
   11c19:	e8 8b fe ff ff       	call   11aa9 <dump_register>
   11c1e:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   11c22:	4c 89 e2             	mov    %r12,%rdx
   11c25:	48 8d 3d 71 3b 00 00 	lea    0x3b71(%rip),%rdi        # 1579d <vmcall_panic+0x3ef>
   11c2c:	e8 78 fe ff ff       	call   11aa9 <dump_register>
   11c31:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   11c35:	4c 89 e2             	mov    %r12,%rdx
   11c38:	48 8d 3d 62 3b 00 00 	lea    0x3b62(%rip),%rdi        # 157a1 <vmcall_panic+0x3f3>
   11c3f:	e8 65 fe ff ff       	call   11aa9 <dump_register>
   11c44:	48 8b 33             	mov    (%rbx),%rsi
   11c47:	4c 89 e2             	mov    %r12,%rdx
   11c4a:	48 8d 3d 54 3b 00 00 	lea    0x3b54(%rip),%rdi        # 157a5 <vmcall_panic+0x3f7>
   11c51:	e8 53 fe ff ff       	call   11aa9 <dump_register>
   11c56:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   11c5a:	4c 89 e2             	mov    %r12,%rdx
   11c5d:	48 8d 3d 45 3b 00 00 	lea    0x3b45(%rip),%rdi        # 157a9 <vmcall_panic+0x3fb>
   11c64:	e8 40 fe ff ff       	call   11aa9 <dump_register>
   11c69:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   11c6d:	4c 89 e2             	mov    %r12,%rdx
   11c70:	59                   	pop    %rcx
   11c71:	48 8d 3d 35 3b 00 00 	lea    0x3b35(%rip),%rdi        # 157ad <vmcall_panic+0x3ff>
   11c78:	5b                   	pop    %rbx
   11c79:	41 5c                	pop    %r12
   11c7b:	e9 29 fe ff ff       	jmp    11aa9 <dump_register>

0000000000011c80 <default_exception_inner>:
   11c80:	f3 0f 1e fa          	endbr64 
   11c84:	57                   	push   %rdi
   11c85:	48 89 cf             	mov    %rcx,%rdi
   11c88:	56                   	push   %rsi
   11c89:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11c90:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11c94:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11c99:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11c9f:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11ca5:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11cab:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11cb1:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   11cb7:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   11cbd:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   11cc4:	00 00 
   11cc6:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   11ccd:	00 00 
   11ccf:	e8 17 fe ff ff       	call   11aeb <dump_no_error>
   11cd4:	48 8d 3d d6 3a 00 00 	lea    0x3ad6(%rip),%rdi        # 157b1 <vmcall_panic+0x403>
   11cdb:	e8 9e 2e 00 00       	call   14b7e <panic>
   11ce0:	0f 28 34 24          	movaps (%rsp),%xmm6
   11ce4:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   11ce9:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   11cef:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   11cf5:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   11cfb:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   11d01:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   11d07:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   11d0d:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   11d14:	00 00 
   11d16:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   11d1d:	00 00 
   11d1f:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   11d26:	5e                   	pop    %rsi
   11d27:	5f                   	pop    %rdi
   11d28:	c3                   	ret    

0000000000011d29 <default_interrupt_inner>:
   11d29:	f3 0f 1e fa          	endbr64 
   11d2d:	57                   	push   %rdi
   11d2e:	48 89 cf             	mov    %rcx,%rdi
   11d31:	56                   	push   %rsi
   11d32:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11d39:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11d3d:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11d42:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11d48:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11d4e:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11d54:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11d5a:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   11d60:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   11d66:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   11d6d:	00 00 
   11d6f:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   11d76:	00 00 
   11d78:	e8 6e fd ff ff       	call   11aeb <dump_no_error>
   11d7d:	48 8d 3d 3f 3a 00 00 	lea    0x3a3f(%rip),%rdi        # 157c3 <vmcall_panic+0x415>
   11d84:	e8 f5 2d 00 00       	call   14b7e <panic>
   11d89:	0f 28 34 24          	movaps (%rsp),%xmm6
   11d8d:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   11d92:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   11d98:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   11d9e:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   11da4:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   11daa:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   11db0:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   11db6:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   11dbd:	00 00 
   11dbf:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   11dc6:	00 00 
   11dc8:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   11dcf:	5e                   	pop    %rsi
   11dd0:	5f                   	pop    %rdi
   11dd1:	c3                   	ret    

0000000000011dd2 <divide_by_zero_inner>:
   11dd2:	f3 0f 1e fa          	endbr64 
   11dd6:	57                   	push   %rdi
   11dd7:	48 89 cf             	mov    %rcx,%rdi
   11dda:	56                   	push   %rsi
   11ddb:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11de2:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11de6:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11deb:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11df1:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11df7:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11dfd:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11e03:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   11e09:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   11e0f:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   11e16:	00 00 
   11e18:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   11e1f:	00 00 
   11e21:	e8 c5 fc ff ff       	call   11aeb <dump_no_error>
   11e26:	48 8d 3d a8 39 00 00 	lea    0x39a8(%rip),%rdi        # 157d5 <vmcall_panic+0x427>
   11e2d:	e8 4c 2d 00 00       	call   14b7e <panic>
   11e32:	0f 28 34 24          	movaps (%rsp),%xmm6
   11e36:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   11e3b:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   11e41:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   11e47:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   11e4d:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   11e53:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   11e59:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   11e5f:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   11e66:	00 00 
   11e68:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   11e6f:	00 00 
   11e71:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   11e78:	5e                   	pop    %rsi
   11e79:	5f                   	pop    %rdi
   11e7a:	c3                   	ret    

0000000000011e7b <debug_inner>:
   11e7b:	f3 0f 1e fa          	endbr64 
   11e7f:	57                   	push   %rdi
   11e80:	48 89 cf             	mov    %rcx,%rdi
   11e83:	56                   	push   %rsi
   11e84:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11e8b:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11e8f:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11e94:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11e9a:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11ea0:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11ea6:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11eac:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   11eb2:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   11eb8:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   11ebf:	00 00 
   11ec1:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   11ec8:	00 00 
   11eca:	e8 1c fc ff ff       	call   11aeb <dump_no_error>
   11ecf:	48 8d 3d 0e 39 00 00 	lea    0x390e(%rip),%rdi        # 157e4 <vmcall_panic+0x436>
   11ed6:	e8 a3 2c 00 00       	call   14b7e <panic>
   11edb:	0f 28 34 24          	movaps (%rsp),%xmm6
   11edf:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   11ee4:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   11eea:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   11ef0:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   11ef6:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   11efc:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   11f02:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   11f08:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   11f0f:	00 00 
   11f11:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   11f18:	00 00 
   11f1a:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   11f21:	5e                   	pop    %rsi
   11f22:	5f                   	pop    %rdi
   11f23:	c3                   	ret    

0000000000011f24 <non_maskable_inner>:
   11f24:	f3 0f 1e fa          	endbr64 
   11f28:	57                   	push   %rdi
   11f29:	48 89 cf             	mov    %rcx,%rdi
   11f2c:	56                   	push   %rsi
   11f2d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11f34:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11f38:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11f3d:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11f43:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11f49:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11f4f:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11f55:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   11f5b:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   11f61:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   11f68:	00 00 
   11f6a:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   11f71:	00 00 
   11f73:	e8 73 fb ff ff       	call   11aeb <dump_no_error>
   11f78:	48 8d 3d 70 38 00 00 	lea    0x3870(%rip),%rdi        # 157ef <vmcall_panic+0x441>
   11f7f:	e8 fa 2b 00 00       	call   14b7e <panic>
   11f84:	0f 28 34 24          	movaps (%rsp),%xmm6
   11f88:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   11f8d:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   11f93:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   11f99:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   11f9f:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   11fa5:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   11fab:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   11fb1:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   11fb8:	00 00 
   11fba:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   11fc1:	00 00 
   11fc3:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   11fca:	5e                   	pop    %rsi
   11fcb:	5f                   	pop    %rdi
   11fcc:	c3                   	ret    

0000000000011fcd <breakpoint_inner>:
   11fcd:	f3 0f 1e fa          	endbr64 
   11fd1:	57                   	push   %rdi
   11fd2:	48 89 cf             	mov    %rcx,%rdi
   11fd5:	56                   	push   %rsi
   11fd6:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   11fdd:	0f 29 34 24          	movaps %xmm6,(%rsp)
   11fe1:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   11fe6:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   11fec:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   11ff2:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   11ff8:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   11ffe:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12004:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   1200a:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12011:	00 00 
   12013:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   1201a:	00 00 
   1201c:	e8 ca fa ff ff       	call   11aeb <dump_no_error>
   12021:	48 8d 3d de 37 00 00 	lea    0x37de(%rip),%rdi        # 15806 <vmcall_panic+0x458>
   12028:	e8 51 2b 00 00       	call   14b7e <panic>
   1202d:	0f 28 34 24          	movaps (%rsp),%xmm6
   12031:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12036:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   1203c:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12042:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12048:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   1204e:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12054:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   1205a:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12061:	00 00 
   12063:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   1206a:	00 00 
   1206c:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12073:	5e                   	pop    %rsi
   12074:	5f                   	pop    %rdi
   12075:	c3                   	ret    

0000000000012076 <overflow_inner>:
   12076:	f3 0f 1e fa          	endbr64 
   1207a:	57                   	push   %rdi
   1207b:	48 89 cf             	mov    %rcx,%rdi
   1207e:	56                   	push   %rsi
   1207f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12086:	0f 29 34 24          	movaps %xmm6,(%rsp)
   1208a:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1208f:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12095:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   1209b:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   120a1:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   120a7:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   120ad:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   120b3:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   120ba:	00 00 
   120bc:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   120c3:	00 00 
   120c5:	e8 21 fa ff ff       	call   11aeb <dump_no_error>
   120ca:	48 8d 3d 4a 37 00 00 	lea    0x374a(%rip),%rdi        # 1581b <vmcall_panic+0x46d>
   120d1:	e8 a8 2a 00 00       	call   14b7e <panic>
   120d6:	0f 28 34 24          	movaps (%rsp),%xmm6
   120da:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   120df:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   120e5:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   120eb:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   120f1:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   120f7:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   120fd:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12103:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   1210a:	00 00 
   1210c:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12113:	00 00 
   12115:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1211c:	5e                   	pop    %rsi
   1211d:	5f                   	pop    %rdi
   1211e:	c3                   	ret    

000000000001211f <bound_range_inner>:
   1211f:	f3 0f 1e fa          	endbr64 
   12123:	57                   	push   %rdi
   12124:	48 89 cf             	mov    %rcx,%rdi
   12127:	56                   	push   %rsi
   12128:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1212f:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12133:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12138:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   1213e:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12144:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   1214a:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12150:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12156:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   1215c:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12163:	00 00 
   12165:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   1216c:	00 00 
   1216e:	e8 78 f9 ff ff       	call   11aeb <dump_no_error>
   12173:	48 8d 3d af 36 00 00 	lea    0x36af(%rip),%rdi        # 15829 <vmcall_panic+0x47b>
   1217a:	e8 ff 29 00 00       	call   14b7e <panic>
   1217f:	0f 28 34 24          	movaps (%rsp),%xmm6
   12183:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12188:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   1218e:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12194:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   1219a:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   121a0:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   121a6:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   121ac:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   121b3:	00 00 
   121b5:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   121bc:	00 00 
   121be:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   121c5:	5e                   	pop    %rsi
   121c6:	5f                   	pop    %rdi
   121c7:	c3                   	ret    

00000000000121c8 <invalid_opcode_inner>:
   121c8:	f3 0f 1e fa          	endbr64 
   121cc:	57                   	push   %rdi
   121cd:	48 89 cf             	mov    %rcx,%rdi
   121d0:	56                   	push   %rsi
   121d1:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   121d8:	0f 29 34 24          	movaps %xmm6,(%rsp)
   121dc:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   121e1:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   121e7:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   121ed:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   121f3:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   121f9:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   121ff:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12205:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   1220c:	00 00 
   1220e:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12215:	00 00 
   12217:	e8 cf f8 ff ff       	call   11aeb <dump_no_error>
   1221c:	48 8d 3d 21 36 00 00 	lea    0x3621(%rip),%rdi        # 15844 <vmcall_panic+0x496>
   12223:	e8 56 29 00 00       	call   14b7e <panic>
   12228:	0f 28 34 24          	movaps (%rsp),%xmm6
   1222c:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12231:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12237:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   1223d:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12243:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12249:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   1224f:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12255:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   1225c:	00 00 
   1225e:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12265:	00 00 
   12267:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1226e:	5e                   	pop    %rsi
   1226f:	5f                   	pop    %rdi
   12270:	c3                   	ret    

0000000000012271 <device_not_available_inner>:
   12271:	f3 0f 1e fa          	endbr64 
   12275:	57                   	push   %rdi
   12276:	48 89 cf             	mov    %rcx,%rdi
   12279:	56                   	push   %rsi
   1227a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12281:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12285:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1228a:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12290:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12296:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   1229c:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   122a2:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   122a8:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   122ae:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   122b5:	00 00 
   122b7:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   122be:	00 00 
   122c0:	e8 26 f8 ff ff       	call   11aeb <dump_no_error>
   122c5:	48 8d 3d 8d 35 00 00 	lea    0x358d(%rip),%rdi        # 15859 <vmcall_panic+0x4ab>
   122cc:	e8 ad 28 00 00       	call   14b7e <panic>
   122d1:	0f 28 34 24          	movaps (%rsp),%xmm6
   122d5:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   122da:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   122e0:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   122e6:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   122ec:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   122f2:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   122f8:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   122fe:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12305:	00 00 
   12307:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   1230e:	00 00 
   12310:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12317:	5e                   	pop    %rsi
   12318:	5f                   	pop    %rdi
   12319:	c3                   	ret    

000000000001231a <dump_error>:
   1231a:	f3 0f 1e fa          	endbr64 
   1231e:	41 54                	push   %r12
   12320:	4c 8d 25 29 90 03 00 	lea    0x39029(%rip),%r12        # 4b350 <uint64_buffer>
   12327:	53                   	push   %rbx
   12328:	48 89 fb             	mov    %rdi,%rbx
   1232b:	48 8d 3d f9 33 00 00 	lea    0x33f9(%rip),%rdi        # 1572b <vmcall_panic+0x37d>
   12332:	50                   	push   %rax
   12333:	e8 25 28 00 00       	call   14b5d <write_in_console>
   12338:	48 8b b3 80 00 00 00 	mov    0x80(%rbx),%rsi
   1233f:	4c 89 e2             	mov    %r12,%rdx
   12342:	48 8d 3d f4 33 00 00 	lea    0x33f4(%rip),%rdi        # 1573d <vmcall_panic+0x38f>
   12349:	e8 5b f7 ff ff       	call   11aa9 <dump_register>
   1234e:	48 8b b3 88 00 00 00 	mov    0x88(%rbx),%rsi
   12355:	4c 89 e2             	mov    %r12,%rdx
   12358:	48 8d 3d e2 33 00 00 	lea    0x33e2(%rip),%rdi        # 15741 <vmcall_panic+0x393>
   1235f:	e8 45 f7 ff ff       	call   11aa9 <dump_register>
   12364:	48 8b b3 90 00 00 00 	mov    0x90(%rbx),%rsi
   1236b:	4c 89 e2             	mov    %r12,%rdx
   1236e:	48 8d 3d cf 33 00 00 	lea    0x33cf(%rip),%rdi        # 15744 <vmcall_panic+0x396>
   12375:	e8 2f f7 ff ff       	call   11aa9 <dump_register>
   1237a:	48 8d 3d ca 33 00 00 	lea    0x33ca(%rip),%rdi        # 1574b <vmcall_panic+0x39d>
   12381:	e8 d7 27 00 00       	call   14b5d <write_in_console>
   12386:	48 8b 73 48          	mov    0x48(%rbx),%rsi
   1238a:	4c 89 e2             	mov    %r12,%rdx
   1238d:	48 8d 3d cc 33 00 00 	lea    0x33cc(%rip),%rdi        # 15760 <vmcall_panic+0x3b2>
   12394:	e8 10 f7 ff ff       	call   11aa9 <dump_register>
   12399:	48 8b 73 40          	mov    0x40(%rbx),%rsi
   1239d:	4c 89 e2             	mov    %r12,%rdx
   123a0:	48 8d 3d bc 33 00 00 	lea    0x33bc(%rip),%rdi        # 15763 <vmcall_panic+0x3b5>
   123a7:	e8 fd f6 ff ff       	call   11aa9 <dump_register>
   123ac:	48 8b 73 38          	mov    0x38(%rbx),%rsi
   123b0:	4c 89 e2             	mov    %r12,%rdx
   123b3:	48 8d 3d ac 33 00 00 	lea    0x33ac(%rip),%rdi        # 15766 <vmcall_panic+0x3b8>
   123ba:	e8 ea f6 ff ff       	call   11aa9 <dump_register>
   123bf:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   123c3:	4c 89 e2             	mov    %r12,%rdx
   123c6:	48 8d 3d 9d 33 00 00 	lea    0x339d(%rip),%rdi        # 1576a <vmcall_panic+0x3bc>
   123cd:	e8 d7 f6 ff ff       	call   11aa9 <dump_register>
   123d2:	48 8b 73 70          	mov    0x70(%rbx),%rsi
   123d6:	4c 89 e2             	mov    %r12,%rdx
   123d9:	48 8d 3d 8e 33 00 00 	lea    0x338e(%rip),%rdi        # 1576e <vmcall_panic+0x3c0>
   123e0:	e8 c4 f6 ff ff       	call   11aa9 <dump_register>
   123e5:	48 8b 73 68          	mov    0x68(%rbx),%rsi
   123e9:	4c 89 e2             	mov    %r12,%rdx
   123ec:	48 8d 3d 7f 33 00 00 	lea    0x337f(%rip),%rdi        # 15772 <vmcall_panic+0x3c4>
   123f3:	e8 b1 f6 ff ff       	call   11aa9 <dump_register>
   123f8:	48 8b 73 60          	mov    0x60(%rbx),%rsi
   123fc:	4c 89 e2             	mov    %r12,%rdx
   123ff:	48 8d 3d 70 33 00 00 	lea    0x3370(%rip),%rdi        # 15776 <vmcall_panic+0x3c8>
   12406:	e8 9e f6 ff ff       	call   11aa9 <dump_register>
   1240b:	48 8b 73 58          	mov    0x58(%rbx),%rsi
   1240f:	4c 89 e2             	mov    %r12,%rdx
   12412:	48 8d 3d 61 33 00 00 	lea    0x3361(%rip),%rdi        # 1577a <vmcall_panic+0x3cc>
   12419:	e8 8b f6 ff ff       	call   11aa9 <dump_register>
   1241e:	48 8b 73 50          	mov    0x50(%rbx),%rsi
   12422:	4c 89 e2             	mov    %r12,%rdx
   12425:	48 8d 3d 52 33 00 00 	lea    0x3352(%rip),%rdi        # 1577e <vmcall_panic+0x3d0>
   1242c:	e8 78 f6 ff ff       	call   11aa9 <dump_register>
   12431:	48 8d 3d 4a 33 00 00 	lea    0x334a(%rip),%rdi        # 15782 <vmcall_panic+0x3d4>
   12438:	e8 20 27 00 00       	call   14b5d <write_in_console>
   1243d:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   12441:	4c 89 e2             	mov    %r12,%rdx
   12444:	48 8d 3d 4e 33 00 00 	lea    0x334e(%rip),%rdi        # 15799 <vmcall_panic+0x3eb>
   1244b:	e8 59 f6 ff ff       	call   11aa9 <dump_register>
   12450:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12454:	4c 89 e2             	mov    %r12,%rdx
   12457:	48 8d 3d 3f 33 00 00 	lea    0x333f(%rip),%rdi        # 1579d <vmcall_panic+0x3ef>
   1245e:	e8 46 f6 ff ff       	call   11aa9 <dump_register>
   12463:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   12467:	4c 89 e2             	mov    %r12,%rdx
   1246a:	48 8d 3d 30 33 00 00 	lea    0x3330(%rip),%rdi        # 157a1 <vmcall_panic+0x3f3>
   12471:	e8 33 f6 ff ff       	call   11aa9 <dump_register>
   12476:	48 8b 33             	mov    (%rbx),%rsi
   12479:	4c 89 e2             	mov    %r12,%rdx
   1247c:	48 8d 3d 22 33 00 00 	lea    0x3322(%rip),%rdi        # 157a5 <vmcall_panic+0x3f7>
   12483:	e8 21 f6 ff ff       	call   11aa9 <dump_register>
   12488:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   1248c:	4c 89 e2             	mov    %r12,%rdx
   1248f:	48 8d 3d 13 33 00 00 	lea    0x3313(%rip),%rdi        # 157a9 <vmcall_panic+0x3fb>
   12496:	e8 0e f6 ff ff       	call   11aa9 <dump_register>
   1249b:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   1249f:	4c 89 e2             	mov    %r12,%rdx
   124a2:	48 8d 3d 04 33 00 00 	lea    0x3304(%rip),%rdi        # 157ad <vmcall_panic+0x3ff>
   124a9:	e8 fb f5 ff ff       	call   11aa9 <dump_register>
   124ae:	48 8d 3d bf 33 00 00 	lea    0x33bf(%rip),%rdi        # 15874 <vmcall_panic+0x4c6>
   124b5:	e8 a3 26 00 00       	call   14b5d <write_in_console>
   124ba:	48 8b 73 78          	mov    0x78(%rbx),%rsi
   124be:	4c 89 e2             	mov    %r12,%rdx
   124c1:	59                   	pop    %rcx
   124c2:	48 8d 3d b9 33 00 00 	lea    0x33b9(%rip),%rdi        # 15882 <vmcall_panic+0x4d4>
   124c9:	5b                   	pop    %rbx
   124ca:	41 5c                	pop    %r12
   124cc:	e9 d8 f5 ff ff       	jmp    11aa9 <dump_register>

00000000000124d1 <double_fault_inner>:
   124d1:	f3 0f 1e fa          	endbr64 
   124d5:	57                   	push   %rdi
   124d6:	48 89 cf             	mov    %rcx,%rdi
   124d9:	56                   	push   %rsi
   124da:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   124e1:	0f 29 34 24          	movaps %xmm6,(%rsp)
   124e5:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   124ea:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   124f0:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   124f6:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   124fc:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12502:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12508:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   1250e:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12515:	00 00 
   12517:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   1251e:	00 00 
   12520:	e8 f5 fd ff ff       	call   1231a <dump_error>
   12525:	48 8d 3d 61 33 00 00 	lea    0x3361(%rip),%rdi        # 1588d <vmcall_panic+0x4df>
   1252c:	e8 4d 26 00 00       	call   14b7e <panic>
   12531:	0f 28 34 24          	movaps (%rsp),%xmm6
   12535:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   1253a:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12540:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12546:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   1254c:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12552:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12558:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   1255e:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12565:	00 00 
   12567:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   1256e:	00 00 
   12570:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12577:	5e                   	pop    %rsi
   12578:	5f                   	pop    %rdi
   12579:	c3                   	ret    

000000000001257a <invalid_tss_inner>:
   1257a:	f3 0f 1e fa          	endbr64 
   1257e:	57                   	push   %rdi
   1257f:	48 89 cf             	mov    %rcx,%rdi
   12582:	56                   	push   %rsi
   12583:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1258a:	0f 29 34 24          	movaps %xmm6,(%rsp)
   1258e:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12593:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12599:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   1259f:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   125a5:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   125ab:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   125b1:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   125b7:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   125be:	00 00 
   125c0:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   125c7:	00 00 
   125c9:	e8 4c fd ff ff       	call   1231a <dump_error>
   125ce:	48 8d 3d c5 32 00 00 	lea    0x32c5(%rip),%rdi        # 1589a <vmcall_panic+0x4ec>
   125d5:	e8 a4 25 00 00       	call   14b7e <panic>
   125da:	0f 28 34 24          	movaps (%rsp),%xmm6
   125de:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   125e3:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   125e9:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   125ef:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   125f5:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   125fb:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12601:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12607:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   1260e:	00 00 
   12610:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12617:	00 00 
   12619:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12620:	5e                   	pop    %rsi
   12621:	5f                   	pop    %rdi
   12622:	c3                   	ret    

0000000000012623 <segment_not_present_inner>:
   12623:	f3 0f 1e fa          	endbr64 
   12627:	57                   	push   %rdi
   12628:	48 89 cf             	mov    %rcx,%rdi
   1262b:	56                   	push   %rsi
   1262c:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12633:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12637:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1263c:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12642:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12648:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   1264e:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12654:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   1265a:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12660:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12667:	00 00 
   12669:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12670:	00 00 
   12672:	e8 a3 fc ff ff       	call   1231a <dump_error>
   12677:	48 8d 3d 2e 32 00 00 	lea    0x322e(%rip),%rdi        # 158ac <vmcall_panic+0x4fe>
   1267e:	e8 fb 24 00 00       	call   14b7e <panic>
   12683:	0f 28 34 24          	movaps (%rsp),%xmm6
   12687:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   1268c:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12692:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12698:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   1269e:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   126a4:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   126aa:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   126b0:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   126b7:	00 00 
   126b9:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   126c0:	00 00 
   126c2:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   126c9:	5e                   	pop    %rsi
   126ca:	5f                   	pop    %rdi
   126cb:	c3                   	ret    

00000000000126cc <stack_segment_inner>:
   126cc:	f3 0f 1e fa          	endbr64 
   126d0:	57                   	push   %rdi
   126d1:	48 89 cf             	mov    %rcx,%rdi
   126d4:	56                   	push   %rsi
   126d5:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   126dc:	0f 29 34 24          	movaps %xmm6,(%rsp)
   126e0:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   126e5:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   126eb:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   126f1:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   126f7:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   126fd:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12703:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12709:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12710:	00 00 
   12712:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12719:	00 00 
   1271b:	e8 fa fb ff ff       	call   1231a <dump_error>
   12720:	48 8d 3d 9f 31 00 00 	lea    0x319f(%rip),%rdi        # 158c6 <vmcall_panic+0x518>
   12727:	e8 52 24 00 00       	call   14b7e <panic>
   1272c:	0f 28 34 24          	movaps (%rsp),%xmm6
   12730:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12735:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   1273b:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12741:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12747:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   1274d:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12753:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12759:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12760:	00 00 
   12762:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12769:	00 00 
   1276b:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12772:	5e                   	pop    %rsi
   12773:	5f                   	pop    %rdi
   12774:	c3                   	ret    

0000000000012775 <protection_inner>:
   12775:	f3 0f 1e fa          	endbr64 
   12779:	57                   	push   %rdi
   1277a:	48 89 cf             	mov    %rcx,%rdi
   1277d:	56                   	push   %rsi
   1277e:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12785:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12789:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   1278e:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12794:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   1279a:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   127a0:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   127a6:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   127ac:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   127b2:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   127b9:	00 00 
   127bb:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   127c2:	00 00 
   127c4:	e8 51 fb ff ff       	call   1231a <dump_error>
   127c9:	48 8d 3d 0a 31 00 00 	lea    0x310a(%rip),%rdi        # 158da <vmcall_panic+0x52c>
   127d0:	e8 a9 23 00 00       	call   14b7e <panic>
   127d5:	0f 28 34 24          	movaps (%rsp),%xmm6
   127d9:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   127de:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   127e4:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   127ea:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   127f0:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   127f6:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   127fc:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12802:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12809:	00 00 
   1280b:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12812:	00 00 
   12814:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1281b:	5e                   	pop    %rsi
   1281c:	5f                   	pop    %rdi
   1281d:	c3                   	ret    

000000000001281e <page_inner>:
   1281e:	f3 0f 1e fa          	endbr64 
   12822:	55                   	push   %rbp
   12823:	48 89 cd             	mov    %rcx,%rbp
   12826:	57                   	push   %rdi
   12827:	56                   	push   %rsi
   12828:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1282f:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12833:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12838:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   1283e:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12844:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   1284a:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12850:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12856:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   1285c:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12863:	00 00 
   12865:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   1286c:	00 00 
   1286e:	0f 20 d6             	mov    %cr2,%rsi
   12871:	48 8d 15 d8 8a 03 00 	lea    0x38ad8(%rip),%rdx        # 4b350 <uint64_buffer>
   12878:	48 8d 3d 6c 30 00 00 	lea    0x306c(%rip),%rdi        # 158eb <vmcall_panic+0x53d>
   1287f:	e8 25 f2 ff ff       	call   11aa9 <dump_register>
   12884:	48 89 ef             	mov    %rbp,%rdi
   12887:	e8 8e fa ff ff       	call   1231a <dump_error>
   1288c:	48 8d 3d 67 30 00 00 	lea    0x3067(%rip),%rdi        # 158fa <vmcall_panic+0x54c>
   12893:	e8 e6 22 00 00       	call   14b7e <panic>
   12898:	0f 28 34 24          	movaps (%rsp),%xmm6
   1289c:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   128a1:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   128a7:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   128ad:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   128b3:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   128b9:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   128bf:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   128c5:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   128cc:	00 00 
   128ce:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   128d5:	00 00 
   128d7:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   128de:	5e                   	pop    %rsi
   128df:	5f                   	pop    %rdi
   128e0:	5d                   	pop    %rbp
   128e1:	c3                   	ret    

00000000000128e2 <fpu_inner>:
   128e2:	f3 0f 1e fa          	endbr64 
   128e6:	57                   	push   %rdi
   128e7:	48 89 cf             	mov    %rcx,%rdi
   128ea:	56                   	push   %rsi
   128eb:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   128f2:	0f 29 34 24          	movaps %xmm6,(%rsp)
   128f6:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   128fb:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12901:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12907:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   1290d:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12913:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12919:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   1291f:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12926:	00 00 
   12928:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   1292f:	00 00 
   12931:	e8 e4 f9 ff ff       	call   1231a <dump_error>
   12936:	48 8d 3d c8 2f 00 00 	lea    0x2fc8(%rip),%rdi        # 15905 <vmcall_panic+0x557>
   1293d:	e8 3c 22 00 00       	call   14b7e <panic>
   12942:	0f 28 34 24          	movaps (%rsp),%xmm6
   12946:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   1294b:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12951:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12957:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   1295d:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12963:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12969:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   1296f:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12976:	00 00 
   12978:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   1297f:	00 00 
   12981:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12988:	5e                   	pop    %rsi
   12989:	5f                   	pop    %rdi
   1298a:	c3                   	ret    

000000000001298b <alignment_check_inner>:
   1298b:	f3 0f 1e fa          	endbr64 
   1298f:	57                   	push   %rdi
   12990:	48 89 cf             	mov    %rcx,%rdi
   12993:	56                   	push   %rsi
   12994:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1299b:	0f 29 34 24          	movaps %xmm6,(%rsp)
   1299f:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   129a4:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   129aa:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   129b0:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   129b6:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   129bc:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   129c2:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   129c8:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   129cf:	00 00 
   129d1:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   129d8:	00 00 
   129da:	e8 3b f9 ff ff       	call   1231a <dump_error>
   129df:	48 8d 3d 38 2f 00 00 	lea    0x2f38(%rip),%rdi        # 1591e <vmcall_panic+0x570>
   129e6:	e8 93 21 00 00       	call   14b7e <panic>
   129eb:	0f 28 34 24          	movaps (%rsp),%xmm6
   129ef:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   129f4:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   129fa:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12a00:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12a06:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12a0c:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12a12:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12a18:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12a1f:	00 00 
   12a21:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12a28:	00 00 
   12a2a:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12a31:	5e                   	pop    %rsi
   12a32:	5f                   	pop    %rdi
   12a33:	c3                   	ret    

0000000000012a34 <machine_check_inner>:
   12a34:	f3 0f 1e fa          	endbr64 
   12a38:	57                   	push   %rdi
   12a39:	48 89 cf             	mov    %rcx,%rdi
   12a3c:	56                   	push   %rsi
   12a3d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12a44:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12a48:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12a4d:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12a53:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12a59:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   12a5f:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12a65:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12a6b:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12a71:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12a78:	00 00 
   12a7a:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12a81:	00 00 
   12a83:	e8 92 f8 ff ff       	call   1231a <dump_error>
   12a88:	48 8d 3d a5 2e 00 00 	lea    0x2ea5(%rip),%rdi        # 15934 <vmcall_panic+0x586>
   12a8f:	e8 ea 20 00 00       	call   14b7e <panic>
   12a94:	0f 28 34 24          	movaps (%rsp),%xmm6
   12a98:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12a9d:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12aa3:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12aa9:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12aaf:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12ab5:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12abb:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12ac1:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12ac8:	00 00 
   12aca:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12ad1:	00 00 
   12ad3:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12ada:	5e                   	pop    %rsi
   12adb:	5f                   	pop    %rdi
   12adc:	c3                   	ret    

0000000000012add <simd_inner>:
   12add:	f3 0f 1e fa          	endbr64 
   12ae1:	57                   	push   %rdi
   12ae2:	48 89 cf             	mov    %rcx,%rdi
   12ae5:	56                   	push   %rsi
   12ae6:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12aed:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12af1:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12af6:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12afc:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12b02:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   12b08:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12b0e:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12b14:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12b1a:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12b21:	00 00 
   12b23:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12b2a:	00 00 
   12b2c:	e8 e9 f7 ff ff       	call   1231a <dump_error>
   12b31:	48 8d 3d 10 2e 00 00 	lea    0x2e10(%rip),%rdi        # 15948 <vmcall_panic+0x59a>
   12b38:	e8 41 20 00 00       	call   14b7e <panic>
   12b3d:	0f 28 34 24          	movaps (%rsp),%xmm6
   12b41:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12b46:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12b4c:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12b52:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12b58:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12b5e:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12b64:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12b6a:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12b71:	00 00 
   12b73:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12b7a:	00 00 
   12b7c:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12b83:	5e                   	pop    %rsi
   12b84:	5f                   	pop    %rdi
   12b85:	c3                   	ret    

0000000000012b86 <control_flow_inner>:
   12b86:	f3 0f 1e fa          	endbr64 
   12b8a:	57                   	push   %rdi
   12b8b:	48 89 cf             	mov    %rcx,%rdi
   12b8e:	56                   	push   %rsi
   12b8f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   12b96:	0f 29 34 24          	movaps %xmm6,(%rsp)
   12b9a:	0f 29 7c 24 10       	movaps %xmm7,0x10(%rsp)
   12b9f:	44 0f 29 44 24 20    	movaps %xmm8,0x20(%rsp)
   12ba5:	44 0f 29 4c 24 30    	movaps %xmm9,0x30(%rsp)
   12bab:	44 0f 29 54 24 40    	movaps %xmm10,0x40(%rsp)
   12bb1:	44 0f 29 5c 24 50    	movaps %xmm11,0x50(%rsp)
   12bb7:	44 0f 29 64 24 60    	movaps %xmm12,0x60(%rsp)
   12bbd:	44 0f 29 6c 24 70    	movaps %xmm13,0x70(%rsp)
   12bc3:	44 0f 29 b4 24 80 00 	movaps %xmm14,0x80(%rsp)
   12bca:	00 00 
   12bcc:	44 0f 29 bc 24 90 00 	movaps %xmm15,0x90(%rsp)
   12bd3:	00 00 
   12bd5:	e8 40 f7 ff ff       	call   1231a <dump_error>
   12bda:	48 8d 3d 81 2d 00 00 	lea    0x2d81(%rip),%rdi        # 15962 <vmcall_panic+0x5b4>
   12be1:	e8 98 1f 00 00       	call   14b7e <panic>
   12be6:	0f 28 34 24          	movaps (%rsp),%xmm6
   12bea:	0f 28 7c 24 10       	movaps 0x10(%rsp),%xmm7
   12bef:	44 0f 28 44 24 20    	movaps 0x20(%rsp),%xmm8
   12bf5:	44 0f 28 4c 24 30    	movaps 0x30(%rsp),%xmm9
   12bfb:	44 0f 28 54 24 40    	movaps 0x40(%rsp),%xmm10
   12c01:	44 0f 28 5c 24 50    	movaps 0x50(%rsp),%xmm11
   12c07:	44 0f 28 64 24 60    	movaps 0x60(%rsp),%xmm12
   12c0d:	44 0f 28 6c 24 70    	movaps 0x70(%rsp),%xmm13
   12c13:	44 0f 28 b4 24 80 00 	movaps 0x80(%rsp),%xmm14
   12c1a:	00 00 
   12c1c:	44 0f 28 bc 24 90 00 	movaps 0x90(%rsp),%xmm15
   12c23:	00 00 
   12c25:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   12c2c:	5e                   	pop    %rsi
   12c2d:	5f                   	pop    %rdi
   12c2e:	c3                   	ret    

0000000000012c2f <uint64_t_pow>:
   12c2f:	f3 0f 1e fa          	endbr64 
   12c33:	31 d2                	xor    %edx,%edx
   12c35:	b8 01 00 00 00       	mov    $0x1,%eax
   12c3a:	48 39 f2             	cmp    %rsi,%rdx
   12c3d:	74 09                	je     12c48 <uint64_t_pow+0x19>
   12c3f:	48 0f af c7          	imul   %rdi,%rax
   12c43:	48 ff c2             	inc    %rdx
   12c46:	eb f2                	jmp    12c3a <uint64_t_pow+0xb>
   12c48:	c3                   	ret    

0000000000012c49 <handle_tdx_ioexit>:
   12c49:	f3 0f 1e fa          	endbr64 
   12c4d:	41 57                	push   %r15
   12c4f:	49 89 f7             	mov    %rsi,%r15
   12c52:	41 56                	push   %r14
   12c54:	41 55                	push   %r13
   12c56:	41 54                	push   %r12
   12c58:	55                   	push   %rbp
   12c59:	53                   	push   %rbx
   12c5a:	48 83 ec 48          	sub    $0x48,%rsp
   12c5e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12c62:	48 89 c3             	mov    %rax,%rbx
   12c65:	48 89 c1             	mov    %rax,%rcx
   12c68:	83 e3 07             	and    $0x7,%ebx
   12c6b:	48 ff c3             	inc    %rbx
   12c6e:	83 e1 20             	and    $0x20,%ecx
   12c71:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   12c76:	74 09                	je     12c81 <handle_tdx_ioexit+0x38>
   12c78:	48 8b 56 68          	mov    0x68(%rsi),%rdx
   12c7c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   12c81:	a8 06                	test   $0x6,%al
   12c83:	74 0d                	je     12c92 <handle_tdx_ioexit+0x49>
   12c85:	45 31 c9             	xor    %r9d,%r9d
   12c88:	48 83 fb 04          	cmp    $0x4,%rbx
   12c8c:	0f 85 21 03 00 00    	jne    12fb3 <handle_tdx_ioexit+0x36a>
   12c92:	48 8d 6c 24 2c       	lea    0x2c(%rsp),%rbp
   12c97:	48 89 c1             	mov    %rax,%rcx
   12c9a:	0f 57 c0             	xorps  %xmm0,%xmm0
   12c9d:	49 89 c6             	mov    %rax,%r14
   12ca0:	83 e1 08             	and    $0x8,%ecx
   12ca3:	48 c1 e8 10          	shr    $0x10,%rax
   12ca7:	48 89 ee             	mov    %rbp,%rsi
   12caa:	48 89 df             	mov    %rbx,%rdi
   12cad:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   12cb2:	4c 8d 2d c7 2b 00 00 	lea    0x2bc7(%rip),%r13        # 15880 <vmcall_panic+0x4d2>
   12cb9:	41 83 e6 10          	and    $0x10,%r14d
   12cbd:	4c 8d 25 8c 86 03 00 	lea    0x3868c(%rip),%r12        # 4b350 <uint64_buffer>
   12cc4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   12cc9:	0f 11 44 24 2c       	movups %xmm0,0x2c(%rsp)
   12cce:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
   12cd5:	00 
   12cd6:	e8 7a 1f 00 00       	call   14c55 <uint64_to_string>
   12cdb:	48 8d 3d 0d 2e 00 00 	lea    0x2e0d(%rip),%rdi        # 15aef <vmcall_panic+0x741>
   12ce2:	e8 76 1e 00 00       	call   14b5d <write_in_console>
   12ce7:	48 89 ef             	mov    %rbp,%rdi
   12cea:	e8 6e 1e 00 00       	call   14b5d <write_in_console>
   12cef:	4c 89 ef             	mov    %r13,%rdi
   12cf2:	e8 66 1e 00 00       	call   14b5d <write_in_console>
   12cf7:	31 ff                	xor    %edi,%edi
   12cf9:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   12cff:	48 89 ee             	mov    %rbp,%rsi
   12d02:	40 0f 95 c7          	setne  %dil
   12d06:	e8 4a 1f 00 00       	call   14c55 <uint64_to_string>
   12d0b:	48 8d 3d 67 2c 00 00 	lea    0x2c67(%rip),%rdi        # 15979 <vmcall_panic+0x5cb>
   12d12:	e8 46 1e 00 00       	call   14b5d <write_in_console>
   12d17:	48 89 ef             	mov    %rbp,%rdi
   12d1a:	e8 3e 1e 00 00       	call   14b5d <write_in_console>
   12d1f:	4c 89 ef             	mov    %r13,%rdi
   12d22:	e8 36 1e 00 00       	call   14b5d <write_in_console>
   12d27:	31 ff                	xor    %edi,%edi
   12d29:	4d 85 f6             	test   %r14,%r14
   12d2c:	48 89 ee             	mov    %rbp,%rsi
   12d2f:	40 0f 95 c7          	setne  %dil
   12d33:	e8 1d 1f 00 00       	call   14c55 <uint64_to_string>
   12d38:	48 8d 3d 43 2c 00 00 	lea    0x2c43(%rip),%rdi        # 15982 <vmcall_panic+0x5d4>
   12d3f:	e8 19 1e 00 00       	call   14b5d <write_in_console>
   12d44:	48 89 ef             	mov    %rbp,%rdi
   12d47:	e8 11 1e 00 00       	call   14b5d <write_in_console>
   12d4c:	4c 89 ef             	mov    %r13,%rdi
   12d4f:	e8 09 1e 00 00       	call   14b5d <write_in_console>
   12d54:	0f b7 7c 24 10       	movzwl 0x10(%rsp),%edi
   12d59:	48 89 ee             	mov    %rbp,%rsi
   12d5c:	e8 f4 1e 00 00       	call   14c55 <uint64_to_string>
   12d61:	48 8d 3d 25 2c 00 00 	lea    0x2c25(%rip),%rdi        # 1598d <vmcall_panic+0x5df>
   12d68:	e8 f0 1d 00 00       	call   14b5d <write_in_console>
   12d6d:	48 89 ef             	mov    %rbp,%rdi
   12d70:	e8 e8 1d 00 00       	call   14b5d <write_in_console>
   12d75:	4c 89 ef             	mov    %r13,%rdi
   12d78:	e8 e0 1d 00 00       	call   14b5d <write_in_console>
   12d7d:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   12d82:	48 89 ee             	mov    %rbp,%rsi
   12d85:	e8 cb 1e 00 00       	call   14c55 <uint64_to_string>
   12d8a:	48 8d 3d 05 2c 00 00 	lea    0x2c05(%rip),%rdi        # 15996 <vmcall_panic+0x5e8>
   12d91:	e8 c7 1d 00 00       	call   14b5d <write_in_console>
   12d96:	48 89 ef             	mov    %rbp,%rdi
   12d99:	e8 bf 1d 00 00       	call   14b5d <write_in_console>
   12d9e:	4c 89 ef             	mov    %r13,%rdi
   12da1:	e8 b7 1d 00 00       	call   14b5d <write_in_console>
   12da6:	49 8b 77 48          	mov    0x48(%r15),%rsi
   12daa:	4c 89 e2             	mov    %r12,%rdx
   12dad:	48 8d 3d ac 29 00 00 	lea    0x29ac(%rip),%rdi        # 15760 <vmcall_panic+0x3b2>
   12db4:	e8 f0 ec ff ff       	call   11aa9 <dump_register>
   12db9:	49 8b 77 40          	mov    0x40(%r15),%rsi
   12dbd:	4c 89 e2             	mov    %r12,%rdx
   12dc0:	48 8d 3d 9c 29 00 00 	lea    0x299c(%rip),%rdi        # 15763 <vmcall_panic+0x3b5>
   12dc7:	e8 dd ec ff ff       	call   11aa9 <dump_register>
   12dcc:	49 8b 77 38          	mov    0x38(%r15),%rsi
   12dd0:	4c 89 e2             	mov    %r12,%rdx
   12dd3:	48 8d 3d 8c 29 00 00 	lea    0x298c(%rip),%rdi        # 15766 <vmcall_panic+0x3b8>
   12dda:	e8 ca ec ff ff       	call   11aa9 <dump_register>
   12ddf:	49 8b 77 30          	mov    0x30(%r15),%rsi
   12de3:	4c 89 e2             	mov    %r12,%rdx
   12de6:	48 8d 3d 7d 29 00 00 	lea    0x297d(%rip),%rdi        # 1576a <vmcall_panic+0x3bc>
   12ded:	e8 b7 ec ff ff       	call   11aa9 <dump_register>
   12df2:	49 8b 77 70          	mov    0x70(%r15),%rsi
   12df6:	4c 89 e2             	mov    %r12,%rdx
   12df9:	48 8d 3d 6e 29 00 00 	lea    0x296e(%rip),%rdi        # 1576e <vmcall_panic+0x3c0>
   12e00:	e8 a4 ec ff ff       	call   11aa9 <dump_register>
   12e05:	49 8b 77 68          	mov    0x68(%r15),%rsi
   12e09:	4c 89 e2             	mov    %r12,%rdx
   12e0c:	48 8d 3d 5f 29 00 00 	lea    0x295f(%rip),%rdi        # 15772 <vmcall_panic+0x3c4>
   12e13:	e8 91 ec ff ff       	call   11aa9 <dump_register>
   12e18:	49 8b 77 60          	mov    0x60(%r15),%rsi
   12e1c:	4c 89 e2             	mov    %r12,%rdx
   12e1f:	48 8d 3d 50 29 00 00 	lea    0x2950(%rip),%rdi        # 15776 <vmcall_panic+0x3c8>
   12e26:	e8 7e ec ff ff       	call   11aa9 <dump_register>
   12e2b:	49 8b 77 58          	mov    0x58(%r15),%rsi
   12e2f:	4c 89 e2             	mov    %r12,%rdx
   12e32:	48 8d 3d 41 29 00 00 	lea    0x2941(%rip),%rdi        # 1577a <vmcall_panic+0x3cc>
   12e39:	e8 6b ec ff ff       	call   11aa9 <dump_register>
   12e3e:	49 8b 77 50          	mov    0x50(%r15),%rsi
   12e42:	4c 89 e2             	mov    %r12,%rdx
   12e45:	48 8d 3d 32 29 00 00 	lea    0x2932(%rip),%rdi        # 1577e <vmcall_panic+0x3d0>
   12e4c:	e8 58 ec ff ff       	call   11aa9 <dump_register>
   12e51:	48 83 fb 02          	cmp    $0x2,%rbx
   12e55:	74 14                	je     12e6b <handle_tdx_ioexit+0x222>
   12e57:	48 83 fb 04          	cmp    $0x4,%rbx
   12e5b:	74 1e                	je     12e7b <handle_tdx_ioexit+0x232>
   12e5d:	48 83 fb 01          	cmp    $0x1,%rbx
   12e61:	74 28                	je     12e8b <handle_tdx_ioexit+0x242>
   12e63:	45 31 c9             	xor    %r9d,%r9d
   12e66:	45 31 e4             	xor    %r12d,%r12d
   12e69:	eb 2e                	jmp    12e99 <handle_tdx_ioexit+0x250>
   12e6b:	4c 8d 0d 75 20 00 00 	lea    0x2075(%rip),%r9        # 14ee7 <tdvmcall_io_read_16>
   12e72:	4c 8d 25 7f 21 00 00 	lea    0x217f(%rip),%r12        # 14ff8 <tdvmcall_io_write_16>
   12e79:	eb 1e                	jmp    12e99 <handle_tdx_ioexit+0x250>
   12e7b:	4c 8d 0d be 20 00 00 	lea    0x20be(%rip),%r9        # 14f40 <tdvmcall_io_read_32>
   12e82:	4c 8d 25 cd 21 00 00 	lea    0x21cd(%rip),%r12        # 15056 <tdvmcall_io_write_32>
   12e89:	eb 0e                	jmp    12e99 <handle_tdx_ioexit+0x250>
   12e8b:	4c 8d 0d fc 1f 00 00 	lea    0x1ffc(%rip),%r9        # 14e8e <tdvmcall_io_read_8>
   12e92:	4c 8d 25 00 21 00 00 	lea    0x2100(%rip),%r12        # 14f99 <tdvmcall_io_write_8>
   12e99:	8b 44 24 10          	mov    0x10(%rsp),%eax
   12e9d:	4d 85 f6             	test   %r14,%r14
   12ea0:	0f 84 85 00 00 00    	je     12f2b <handle_tdx_ioexit+0x2e2>
   12ea6:	45 31 ed             	xor    %r13d,%r13d
   12ea9:	0f b7 e8             	movzwl %ax,%ebp
   12eac:	4c 39 6c 24 18       	cmp    %r13,0x18(%rsp)
   12eb1:	0f 84 f9 00 00 00    	je     12fb0 <handle_tdx_ioexit+0x367>
   12eb7:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   12ebd:	74 30                	je     12eef <handle_tdx_ioexit+0x2a6>
   12ebf:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   12ec4:	89 ef                	mov    %ebp,%edi
   12ec6:	41 ff d1             	call   *%r9
   12ec9:	49 8b 4f 58          	mov    0x58(%r15),%rcx
   12ecd:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   12ed2:	89 44 24 28          	mov    %eax,0x28(%rsp)
   12ed6:	31 c0                	xor    %eax,%eax
   12ed8:	40 8a 74 04 28       	mov    0x28(%rsp,%rax,1),%sil
   12edd:	40 88 34 01          	mov    %sil,(%rcx,%rax,1)
   12ee1:	48 ff c0             	inc    %rax
   12ee4:	48 39 c3             	cmp    %rax,%rbx
   12ee7:	77 ef                	ja     12ed8 <handle_tdx_ioexit+0x28f>
   12ee9:	49 01 5f 58          	add    %rbx,0x58(%r15)
   12eed:	eb 33                	jmp    12f22 <handle_tdx_ioexit+0x2d9>
   12eef:	4d 8b 57 50          	mov    0x50(%r15),%r10
   12ef3:	31 c0                	xor    %eax,%eax
   12ef5:	31 f6                	xor    %esi,%esi
   12ef7:	41 0f b6 3c 02       	movzbl (%r10,%rax,1),%edi
   12efc:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   12f03:	48 ff c0             	inc    %rax
   12f06:	d3 e7                	shl    %cl,%edi
   12f08:	09 fe                	or     %edi,%esi
   12f0a:	48 39 d8             	cmp    %rbx,%rax
   12f0d:	72 e8                	jb     12ef7 <handle_tdx_ioexit+0x2ae>
   12f0f:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   12f14:	89 ef                	mov    %ebp,%edi
   12f16:	41 ff d4             	call   *%r12
   12f19:	49 01 5f 50          	add    %rbx,0x50(%r15)
   12f1d:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   12f22:	49 ff 4f 68          	decq   0x68(%r15)
   12f26:	49 ff c5             	inc    %r13
   12f29:	eb 81                	jmp    12eac <handle_tdx_ioexit+0x263>
   12f2b:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   12f31:	0f b7 7c 24 10       	movzwl 0x10(%rsp),%edi
   12f36:	74 71                	je     12fa9 <handle_tdx_ioexit+0x360>
   12f38:	41 ff d1             	call   *%r9
   12f3b:	48 89 ee             	mov    %rbp,%rsi
   12f3e:	48 c1 e3 03          	shl    $0x3,%rbx
   12f42:	41 89 c4             	mov    %eax,%r12d
   12f45:	4c 89 e7             	mov    %r12,%rdi
   12f48:	e8 08 1d 00 00       	call   14c55 <uint64_to_string>
   12f4d:	48 8d 3d 4d 2a 00 00 	lea    0x2a4d(%rip),%rdi        # 159a1 <vmcall_panic+0x5f3>
   12f54:	e8 04 1c 00 00       	call   14b5d <write_in_console>
   12f59:	48 89 ef             	mov    %rbp,%rdi
   12f5c:	e8 fc 1b 00 00       	call   14b5d <write_in_console>
   12f61:	4c 89 ef             	mov    %r13,%rdi
   12f64:	e8 f4 1b 00 00       	call   14b5d <write_in_console>
   12f69:	bf 01 00 00 00       	mov    $0x1,%edi
   12f6e:	49 ff c6             	inc    %r14
   12f71:	48 01 ff             	add    %rdi,%rdi
   12f74:	4c 39 f3             	cmp    %r14,%rbx
   12f77:	77 f5                	ja     12f6e <handle_tdx_ioexit+0x325>
   12f79:	48 ff cf             	dec    %rdi
   12f7c:	48 89 ee             	mov    %rbp,%rsi
   12f7f:	4c 21 e7             	and    %r12,%rdi
   12f82:	49 89 7f 70          	mov    %rdi,0x70(%r15)
   12f86:	e8 ca 1c 00 00       	call   14c55 <uint64_to_string>
   12f8b:	48 8d 3d 1f 2a 00 00 	lea    0x2a1f(%rip),%rdi        # 159b1 <vmcall_panic+0x603>
   12f92:	e8 c6 1b 00 00       	call   14b5d <write_in_console>
   12f97:	48 89 ef             	mov    %rbp,%rdi
   12f9a:	e8 be 1b 00 00       	call   14b5d <write_in_console>
   12f9f:	4c 89 ef             	mov    %r13,%rdi
   12fa2:	e8 b6 1b 00 00       	call   14b5d <write_in_console>
   12fa7:	eb 07                	jmp    12fb0 <handle_tdx_ioexit+0x367>
   12fa9:	41 8b 77 70          	mov    0x70(%r15),%esi
   12fad:	41 ff d4             	call   *%r12
   12fb0:	41 b1 01             	mov    $0x1,%r9b
   12fb3:	48 83 c4 48          	add    $0x48,%rsp
   12fb7:	44 89 c8             	mov    %r9d,%eax
   12fba:	5b                   	pop    %rbx
   12fbb:	5d                   	pop    %rbp
   12fbc:	41 5c                	pop    %r12
   12fbe:	41 5d                	pop    %r13
   12fc0:	41 5e                	pop    %r14
   12fc2:	41 5f                	pop    %r15
   12fc4:	c3                   	ret    

0000000000012fc5 <virtualization_inner>:
   12fc5:	f3 0f 1e fa          	endbr64 
   12fc9:	55                   	push   %rbp
   12fca:	31 c0                	xor    %eax,%eax
   12fcc:	57                   	push   %rdi
   12fcd:	56                   	push   %rsi
   12fce:	53                   	push   %rbx
   12fcf:	48 89 cb             	mov    %rcx,%rbx
   12fd2:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   12fd9:	48 89 e5             	mov    %rsp,%rbp
   12fdc:	0f 29 74 24 30       	movaps %xmm6,0x30(%rsp)
   12fe1:	48 89 ef             	mov    %rbp,%rdi
   12fe4:	0f 29 7c 24 40       	movaps %xmm7,0x40(%rsp)
   12fe9:	44 0f 29 44 24 50    	movaps %xmm8,0x50(%rsp)
   12fef:	44 0f 29 4c 24 60    	movaps %xmm9,0x60(%rsp)
   12ff5:	44 0f 29 54 24 70    	movaps %xmm10,0x70(%rsp)
   12ffb:	44 0f 29 9c 24 80 00 	movaps %xmm11,0x80(%rsp)
   13002:	00 00 
   13004:	44 0f 29 a4 24 90 00 	movaps %xmm12,0x90(%rsp)
   1300b:	00 00 
   1300d:	44 0f 29 ac 24 a0 00 	movaps %xmm13,0xa0(%rsp)
   13014:	00 00 
   13016:	44 0f 29 b4 24 b0 00 	movaps %xmm14,0xb0(%rsp)
   1301d:	00 00 
   1301f:	44 0f 29 bc 24 c0 00 	movaps %xmm15,0xc0(%rsp)
   13026:	00 00 
   13028:	e8 36 1d 00 00       	call   14d63 <tdcall_get_ve_info>
   1302d:	8b 04 24             	mov    (%rsp),%eax
   13030:	83 f8 27             	cmp    $0x27,%eax
   13033:	77 60                	ja     13095 <virtualization_inner+0xd0>
   13035:	83 f8 1d             	cmp    $0x1d,%eax
   13038:	77 34                	ja     1306e <virtualization_inner+0xa9>
   1303a:	83 f8 0c             	cmp    $0xc,%eax
   1303d:	74 5d                	je     1309c <virtualization_inner+0xd7>
   1303f:	77 4a                	ja     1308b <virtualization_inner+0xc6>
   13041:	83 f8 0a             	cmp    $0xa,%eax
   13044:	0f 85 c6 00 00 00    	jne    13110 <virtualization_inner+0x14b>
   1304a:	8b 73 68             	mov    0x68(%rbx),%esi
   1304d:	8b 7b 70             	mov    0x70(%rbx),%edi
   13050:	e8 96 1d 00 00       	call   14deb <tdvmcall_cpuid>
   13055:	89 43 70             	mov    %eax,0x70(%rbx)
   13058:	48 c1 e8 20          	shr    $0x20,%rax
   1305c:	89 53 68             	mov    %edx,0x68(%rbx)
   1305f:	48 c1 ea 20          	shr    $0x20,%rdx
   13063:	89 43 28             	mov    %eax,0x28(%rbx)
   13066:	89 53 60             	mov    %edx,0x60(%rbx)
   13069:	e9 a2 00 00 00       	jmp    13110 <virtualization_inner+0x14b>
   1306e:	83 e8 1e             	sub    $0x1e,%eax
   13071:	83 f8 09             	cmp    $0x9,%eax
   13074:	0f 87 96 00 00 00    	ja     13110 <virtualization_inner+0x14b>
   1307a:	48 8d 15 13 30 00 00 	lea    0x3013(%rip),%rdx        # 16094 <vmcall_panic+0xce6>
   13081:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   13085:	48 01 d0             	add    %rdx,%rax
   13088:	3e ff e0             	notrack jmp *%rax
   1308b:	83 f8 0f             	cmp    $0xf,%eax
   1308e:	74 60                	je     130f0 <virtualization_inner+0x12b>
   13090:	83 f8 12             	cmp    $0x12,%eax
   13093:	eb 03                	jmp    13098 <virtualization_inner+0xd3>
   13095:	83 f8 36             	cmp    $0x36,%eax
   13098:	75 76                	jne    13110 <virtualization_inner+0x14b>
   1309a:	eb 54                	jmp    130f0 <virtualization_inner+0x12b>
   1309c:	31 c0                	xor    %eax,%eax
   1309e:	eb 1b                	jmp    130bb <virtualization_inner+0xf6>
   130a0:	48 8d 3d 21 29 00 00 	lea    0x2921(%rip),%rdi        # 159c8 <vmcall_panic+0x61a>
   130a7:	e8 b1 1a 00 00       	call   14b5d <write_in_console>
   130ac:	48 89 de             	mov    %rbx,%rsi
   130af:	48 89 ef             	mov    %rbp,%rdi
   130b2:	e8 92 fb ff ff       	call   12c49 <handle_tdx_ioexit>
   130b7:	84 c0                	test   %al,%al
   130b9:	75 55                	jne    13110 <virtualization_inner+0x14b>
   130bb:	e8 dc 1b 00 00       	call   14c9c <tdvmcall_halt>
   130c0:	eb 4e                	jmp    13110 <virtualization_inner+0x14b>
   130c2:	8b 7b 68             	mov    0x68(%rbx),%edi
   130c5:	e8 e9 1f 00 00       	call   150b3 <tdvmcall_rdmsr>
   130ca:	89 c1                	mov    %eax,%ecx
   130cc:	48 c1 e8 20          	shr    $0x20,%rax
   130d0:	48 89 4b 70          	mov    %rcx,0x70(%rbx)
   130d4:	48 89 43 60          	mov    %rax,0x60(%rbx)
   130d8:	eb 36                	jmp    13110 <virtualization_inner+0x14b>
   130da:	48 8b 73 60          	mov    0x60(%rbx),%rsi
   130de:	8b 7b 68             	mov    0x68(%rbx),%edi
   130e1:	48 c1 e6 20          	shl    $0x20,%rsi
   130e5:	48 0b 73 70          	or     0x70(%rbx),%rsi
   130e9:	e8 62 20 00 00       	call   15150 <tdvmcall_wrmsr>
   130ee:	eb 20                	jmp    13110 <virtualization_inner+0x14b>
   130f0:	48 89 df             	mov    %rbx,%rdi
   130f3:	e8 f3 e9 ff ff       	call   11aeb <dump_no_error>
   130f8:	48 8d 3d de 28 00 00 	lea    0x28de(%rip),%rdi        # 159dd <vmcall_panic+0x62f>
   130ff:	e8 59 1a 00 00       	call   14b5d <write_in_console>
   13104:	48 8d 3d ef 28 00 00 	lea    0x28ef(%rip),%rdi        # 159fa <vmcall_panic+0x64c>
   1310b:	e8 6e 1a 00 00       	call   14b7e <panic>
   13110:	8b 44 24 20          	mov    0x20(%rsp),%eax
   13114:	0f 28 74 24 30       	movaps 0x30(%rsp),%xmm6
   13119:	48 01 43 78          	add    %rax,0x78(%rbx)
   1311d:	0f 28 7c 24 40       	movaps 0x40(%rsp),%xmm7
   13122:	44 0f 28 44 24 50    	movaps 0x50(%rsp),%xmm8
   13128:	44 0f 28 4c 24 60    	movaps 0x60(%rsp),%xmm9
   1312e:	44 0f 28 9c 24 80 00 	movaps 0x80(%rsp),%xmm11
   13135:	00 00 
   13137:	44 0f 28 54 24 70    	movaps 0x70(%rsp),%xmm10
   1313d:	44 0f 28 a4 24 90 00 	movaps 0x90(%rsp),%xmm12
   13144:	00 00 
   13146:	44 0f 28 ac 24 a0 00 	movaps 0xa0(%rsp),%xmm13
   1314d:	00 00 
   1314f:	44 0f 28 b4 24 b0 00 	movaps 0xb0(%rsp),%xmm14
   13156:	00 00 
   13158:	44 0f 28 bc 24 c0 00 	movaps 0xc0(%rsp),%xmm15
   1315f:	00 00 
   13161:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   13168:	5b                   	pop    %rbx
   13169:	5e                   	pop    %rsi
   1316a:	5f                   	pop    %rdi
   1316b:	5d                   	pop    %rbp
   1316c:	c3                   	ret    

000000000001316d <set_flags>:
   1316d:	f3 0f 1e fa          	endbr64 
   13171:	40 88 77 05          	mov    %sil,0x5(%rdi)
   13175:	c3                   	ret    

0000000000013176 <get_cs>:
   13176:	f3 0f 1e fa          	endbr64 
   1317a:	66 8c c8             	mov    %cs,%ax
   1317d:	c3                   	ret    

000000000001317e <set_offset>:
   1317e:	f3 0f 1e fa          	endbr64 
   13182:	48 89 d0             	mov    %rdx,%rax
   13185:	66 89 17             	mov    %dx,(%rdi)
   13188:	48 c1 ea 20          	shr    $0x20,%rdx
   1318c:	48 c1 e8 10          	shr    $0x10,%rax
   13190:	66 89 77 02          	mov    %si,0x2(%rdi)
   13194:	66 89 47 06          	mov    %ax,0x6(%rdi)
   13198:	89 57 08             	mov    %edx,0x8(%rdi)
   1319b:	c3                   	ret    

000000000001319c <set_func>:
   1319c:	f3 0f 1e fa          	endbr64 
   131a0:	c6 47 05 8e          	movb   $0x8e,0x5(%rdi)
   131a4:	66 8c c8             	mov    %cs,%ax
   131a7:	66 89 47 02          	mov    %ax,0x2(%rdi)
   131ab:	48 89 f0             	mov    %rsi,%rax
   131ae:	66 89 37             	mov    %si,(%rdi)
   131b1:	48 c1 e8 10          	shr    $0x10,%rax
   131b5:	48 c1 ee 20          	shr    $0x20,%rsi
   131b9:	66 89 47 06          	mov    %ax,0x6(%rdi)
   131bd:	89 77 08             	mov    %esi,0x8(%rdi)
   131c0:	c3                   	ret    

00000000000131c1 <load_idtr>:
   131c1:	f3 0f 1e fa          	endbr64 
   131c5:	48 8b 05 9c 81 03 00 	mov    0x3819c(%rip),%rax        # 4b368 <idt>
   131cc:	66 c7 44 24 f6 ff 0f 	movw   $0xfff,-0xa(%rsp)
   131d3:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
   131d8:	0f 01 5c 24 f6       	lidt   -0xa(%rsp)
   131dd:	c3                   	ret    

00000000000131de <idt_init>:
   131de:	f3 0f 1e fa          	endbr64 
   131e2:	48 8d 35 6c e3 ff ff 	lea    -0x1c94(%rip),%rsi        # 11555 <divide_by_zero>
   131e9:	48 89 fa             	mov    %rdi,%rdx
   131ec:	48 89 3d 75 81 03 00 	mov    %rdi,0x38175(%rip)        # 4b368 <idt>
   131f3:	4c 8d 05 d7 e2 ff ff 	lea    -0x1d29(%rip),%r8        # 114d1 <default_exception>
   131fa:	e8 9d ff ff ff       	call   1319c <set_func>
   131ff:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
   13203:	48 8d 35 8d e3 ff ff 	lea    -0x1c73(%rip),%rsi        # 11597 <debug>
   1320a:	e8 8d ff ff ff       	call   1319c <set_func>
   1320f:	48 8d 7a 20          	lea    0x20(%rdx),%rdi
   13213:	48 8d 35 bf e3 ff ff 	lea    -0x1c41(%rip),%rsi        # 115d9 <non_maskable>
   1321a:	e8 7d ff ff ff       	call   1319c <set_func>
   1321f:	48 8d 7a 30          	lea    0x30(%rdx),%rdi
   13223:	48 8d 35 f1 e3 ff ff 	lea    -0x1c0f(%rip),%rsi        # 1161b <breakpoint>
   1322a:	e8 6d ff ff ff       	call   1319c <set_func>
   1322f:	48 8d 7a 40          	lea    0x40(%rdx),%rdi
   13233:	48 8d 35 23 e4 ff ff 	lea    -0x1bdd(%rip),%rsi        # 1165d <overflow>
   1323a:	e8 5d ff ff ff       	call   1319c <set_func>
   1323f:	48 8d 7a 50          	lea    0x50(%rdx),%rdi
   13243:	48 8d 35 55 e4 ff ff 	lea    -0x1bab(%rip),%rsi        # 1169f <bound_range>
   1324a:	e8 4d ff ff ff       	call   1319c <set_func>
   1324f:	48 8d 7a 60          	lea    0x60(%rdx),%rdi
   13253:	48 8d 35 87 e4 ff ff 	lea    -0x1b79(%rip),%rsi        # 116e1 <invalid_opcode>
   1325a:	e8 3d ff ff ff       	call   1319c <set_func>
   1325f:	48 8d 7a 70          	lea    0x70(%rdx),%rdi
   13263:	48 8d 35 b9 e4 ff ff 	lea    -0x1b47(%rip),%rsi        # 11723 <device_not_available>
   1326a:	e8 2d ff ff ff       	call   1319c <set_func>
   1326f:	48 8d ba 80 00 00 00 	lea    0x80(%rdx),%rdi
   13276:	48 8d 35 e8 e4 ff ff 	lea    -0x1b18(%rip),%rsi        # 11765 <double_fault>
   1327d:	e8 1a ff ff ff       	call   1319c <set_func>
   13282:	48 8d ba 90 00 00 00 	lea    0x90(%rdx),%rdi
   13289:	4c 89 c6             	mov    %r8,%rsi
   1328c:	48 8d 8a 60 01 00 00 	lea    0x160(%rdx),%rcx
   13293:	e8 04 ff ff ff       	call   1319c <set_func>
   13298:	48 8d ba a0 00 00 00 	lea    0xa0(%rdx),%rdi
   1329f:	48 8d 35 05 e5 ff ff 	lea    -0x1afb(%rip),%rsi        # 117ab <invalid_tss>
   132a6:	e8 f1 fe ff ff       	call   1319c <set_func>
   132ab:	48 8d ba b0 00 00 00 	lea    0xb0(%rdx),%rdi
   132b2:	48 8d 35 38 e5 ff ff 	lea    -0x1ac8(%rip),%rsi        # 117f1 <segment_not_present>
   132b9:	e8 de fe ff ff       	call   1319c <set_func>
   132be:	48 8d ba c0 00 00 00 	lea    0xc0(%rdx),%rdi
   132c5:	48 8d 35 6b e5 ff ff 	lea    -0x1a95(%rip),%rsi        # 11837 <stack_segment>
   132cc:	e8 cb fe ff ff       	call   1319c <set_func>
   132d1:	48 8d ba d0 00 00 00 	lea    0xd0(%rdx),%rdi
   132d8:	48 8d 35 9e e5 ff ff 	lea    -0x1a62(%rip),%rsi        # 1187d <protection>
   132df:	e8 b8 fe ff ff       	call   1319c <set_func>
   132e4:	48 8d ba e0 00 00 00 	lea    0xe0(%rdx),%rdi
   132eb:	48 8d 35 d1 e5 ff ff 	lea    -0x1a2f(%rip),%rsi        # 118c3 <page>
   132f2:	e8 a5 fe ff ff       	call   1319c <set_func>
   132f7:	48 8d ba f0 00 00 00 	lea    0xf0(%rdx),%rdi
   132fe:	4c 89 c6             	mov    %r8,%rsi
   13301:	4c 8d 8a 00 02 00 00 	lea    0x200(%rdx),%r9
   13308:	e8 8f fe ff ff       	call   1319c <set_func>
   1330d:	48 8d ba 00 01 00 00 	lea    0x100(%rdx),%rdi
   13314:	48 8d 35 ee e5 ff ff 	lea    -0x1a12(%rip),%rsi        # 11909 <fpu>
   1331b:	e8 7c fe ff ff       	call   1319c <set_func>
   13320:	48 8d ba 10 01 00 00 	lea    0x110(%rdx),%rdi
   13327:	48 8d 35 21 e6 ff ff 	lea    -0x19df(%rip),%rsi        # 1194f <alignment_check>
   1332e:	e8 69 fe ff ff       	call   1319c <set_func>
   13333:	48 8d ba 20 01 00 00 	lea    0x120(%rdx),%rdi
   1333a:	48 8d 35 54 e6 ff ff 	lea    -0x19ac(%rip),%rsi        # 11995 <machine_check>
   13341:	e8 56 fe ff ff       	call   1319c <set_func>
   13346:	48 8d ba 30 01 00 00 	lea    0x130(%rdx),%rdi
   1334d:	48 8d 35 87 e6 ff ff 	lea    -0x1979(%rip),%rsi        # 119db <simd>
   13354:	e8 43 fe ff ff       	call   1319c <set_func>
   13359:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
   13360:	48 8d 35 00 e7 ff ff 	lea    -0x1900(%rip),%rsi        # 11a67 <virtualization>
   13367:	e8 30 fe ff ff       	call   1319c <set_func>
   1336c:	48 8d ba 50 01 00 00 	lea    0x150(%rdx),%rdi
   13373:	48 8d 35 a7 e6 ff ff 	lea    -0x1959(%rip),%rsi        # 11a21 <control_flow>
   1337a:	e8 1d fe ff ff       	call   1319c <set_func>
   1337f:	48 89 cf             	mov    %rcx,%rdi
   13382:	4c 89 c6             	mov    %r8,%rsi
   13385:	48 83 c1 10          	add    $0x10,%rcx
   13389:	e8 0e fe ff ff       	call   1319c <set_func>
   1338e:	4c 39 c9             	cmp    %r9,%rcx
   13391:	75 ec                	jne    1337f <idt_init+0x1a1>
   13393:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
   1339a:	4c 8d 05 72 e1 ff ff 	lea    -0x1e8e(%rip),%r8        # 11513 <default_interrupt>
   133a1:	48 89 cf             	mov    %rcx,%rdi
   133a4:	4c 89 c6             	mov    %r8,%rsi
   133a7:	48 83 c1 10          	add    $0x10,%rcx
   133ab:	e8 ec fd ff ff       	call   1319c <set_func>
   133b0:	48 39 ca             	cmp    %rcx,%rdx
   133b3:	75 ec                	jne    133a1 <idt_init+0x1c3>
   133b5:	31 c0                	xor    %eax,%eax
   133b7:	e9 05 fe ff ff       	jmp    131c1 <load_idtr>

00000000000133bc <map_one_page>:
   133bc:	f3 0f 1e fa          	endbr64 
   133c0:	41 55                	push   %r13
   133c2:	41 54                	push   %r12
   133c4:	41 89 d4             	mov    %edx,%r12d
   133c7:	55                   	push   %rbp
   133c8:	48 89 fd             	mov    %rdi,%rbp
   133cb:	53                   	push   %rbx
   133cc:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   133d0:	49 89 dd             	mov    %rbx,%r13
   133d3:	51                   	push   %rcx
   133d4:	48 8b 05 a5 7f 03 00 	mov    0x37fa5(%rip),%rax        # 4b380 <pml4>
   133db:	49 c1 ed 27          	shr    $0x27,%r13
   133df:	41 81 e5 ff 01 00 00 	and    $0x1ff,%r13d
   133e6:	4a 8b 14 e8          	mov    (%rax,%r13,8),%rdx
   133ea:	48 89 d0             	mov    %rdx,%rax
   133ed:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   133f3:	80 e2 01             	and    $0x1,%dl
   133f6:	75 1c                	jne    13414 <map_one_page+0x58>
   133f8:	bf 01 00 00 00       	mov    $0x1,%edi
   133fd:	e8 a0 05 00 00       	call   139a2 <kframe_allocate_range_pt>
   13402:	48 8b 15 77 7f 03 00 	mov    0x37f77(%rip),%rdx        # 4b380 <pml4>
   13409:	48 89 c1             	mov    %rax,%rcx
   1340c:	48 83 c9 07          	or     $0x7,%rcx
   13410:	4a 89 0c ea          	mov    %rcx,(%rdx,%r13,8)
   13414:	48 89 da             	mov    %rbx,%rdx
   13417:	48 c1 ea 1b          	shr    $0x1b,%rdx
   1341b:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
   13421:	4c 8d 2c 10          	lea    (%rax,%rdx,1),%r13
   13425:	49 8b 55 00          	mov    0x0(%r13),%rdx
   13429:	48 89 d0             	mov    %rdx,%rax
   1342c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   13432:	80 e2 01             	and    $0x1,%dl
   13435:	75 15                	jne    1344c <map_one_page+0x90>
   13437:	bf 01 00 00 00       	mov    $0x1,%edi
   1343c:	e8 61 05 00 00       	call   139a2 <kframe_allocate_range_pt>
   13441:	48 89 c2             	mov    %rax,%rdx
   13444:	48 83 ca 07          	or     $0x7,%rdx
   13448:	49 89 55 00          	mov    %rdx,0x0(%r13)
   1344c:	48 89 da             	mov    %rbx,%rdx
   1344f:	48 c1 ea 12          	shr    $0x12,%rdx
   13453:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
   13459:	4c 8d 2c 10          	lea    (%rax,%rdx,1),%r13
   1345d:	49 8b 55 00          	mov    0x0(%r13),%rdx
   13461:	48 89 d0             	mov    %rdx,%rax
   13464:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1346a:	80 e2 01             	and    $0x1,%dl
   1346d:	75 15                	jne    13484 <map_one_page+0xc8>
   1346f:	bf 01 00 00 00       	mov    $0x1,%edi
   13474:	e8 29 05 00 00       	call   139a2 <kframe_allocate_range_pt>
   13479:	48 89 c2             	mov    %rax,%rdx
   1347c:	48 83 ca 07          	or     $0x7,%rdx
   13480:	49 89 55 00          	mov    %rdx,0x0(%r13)
   13484:	48 c1 eb 09          	shr    $0x9,%rbx
   13488:	81 e3 f8 0f 00 00    	and    $0xff8,%ebx
   1348e:	48 01 c3             	add    %rax,%rbx
   13491:	48 89 e8             	mov    %rbp,%rax
   13494:	48 83 cd 01          	or     $0x1,%rbp
   13498:	48 83 c8 05          	or     $0x5,%rax
   1349c:	41 f6 c4 01          	test   $0x1,%r12b
   134a0:	48 0f 45 e8          	cmovne %rax,%rbp
   134a4:	41 80 e4 02          	and    $0x2,%r12b
   134a8:	48 89 2b             	mov    %rbp,(%rbx)
   134ab:	74 04                	je     134b1 <map_one_page+0xf5>
   134ad:	48 83 0b 02          	orq    $0x2,(%rbx)
   134b1:	58                   	pop    %rax
   134b2:	5b                   	pop    %rbx
   134b3:	5d                   	pop    %rbp
   134b4:	41 5c                	pop    %r12
   134b6:	41 5d                	pop    %r13
   134b8:	c3                   	ret    

00000000000134b9 <map_address>:
   134b9:	f3 0f 1e fa          	endbr64 
   134bd:	48 89 f0             	mov    %rsi,%rax
   134c0:	41 55                	push   %r13
   134c2:	41 89 cd             	mov    %ecx,%r13d
   134c5:	48 09 d0             	or     %rdx,%rax
   134c8:	41 54                	push   %r12
   134ca:	49 89 d4             	mov    %rdx,%r12
   134cd:	48 09 f8             	or     %rdi,%rax
   134d0:	55                   	push   %rbp
   134d1:	48 89 fd             	mov    %rdi,%rbp
   134d4:	53                   	push   %rbx
   134d5:	48 89 f3             	mov    %rsi,%rbx
   134d8:	41 50                	push   %r8
   134da:	a9 ff 0f 00 00       	test   $0xfff,%eax
   134df:	74 0c                	je     134ed <map_address+0x34>
   134e1:	48 8d 3d 27 25 00 00 	lea    0x2527(%rip),%rdi        # 15a0f <vmcall_panic+0x661>
   134e8:	e8 70 16 00 00       	call   14b5d <write_in_console>
   134ed:	41 f7 c5 fc ff ff ff 	test   $0xfffffffc,%r13d
   134f4:	74 0c                	je     13502 <map_address+0x49>
   134f6:	48 8d 3d 58 25 00 00 	lea    0x2558(%rip),%rdi        # 15a55 <vmcall_panic+0x6a7>
   134fd:	e8 5b 16 00 00       	call   14b5d <write_in_console>
   13502:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
   13509:	48 01 eb             	add    %rbp,%rbx
   1350c:	48 39 dd             	cmp    %rbx,%rbp
   1350f:	74 17                	je     13528 <map_address+0x6f>
   13511:	48 89 ef             	mov    %rbp,%rdi
   13514:	44 89 ea             	mov    %r13d,%edx
   13517:	4c 89 e6             	mov    %r12,%rsi
   1351a:	48 81 c5 00 10 00 00 	add    $0x1000,%rbp
   13521:	e8 96 fe ff ff       	call   133bc <map_one_page>
   13526:	eb e4                	jmp    1350c <map_address+0x53>
   13528:	58                   	pop    %rax
   13529:	5b                   	pop    %rbx
   1352a:	5d                   	pop    %rbp
   1352b:	41 5c                	pop    %r12
   1352d:	41 5d                	pop    %r13
   1352f:	c3                   	ret    

0000000000013530 <get_usable>:
   13530:	f3 0f 1e fa          	endbr64 
   13534:	48 8d 0d 65 7e 03 00 	lea    0x37e65(%rip),%rcx        # 4b3a0 <memory_map>
   1353b:	44 8b 05 46 7e 03 00 	mov    0x37e46(%rip),%r8d        # 4b388 <memory_map_num_entries>
   13542:	31 d2                	xor    %edx,%edx
   13544:	48 89 ce             	mov    %rcx,%rsi
   13547:	41 39 d0             	cmp    %edx,%r8d
   1354a:	7e 2c                	jle    13578 <get_usable+0x48>
   1354c:	83 79 10 01          	cmpl   $0x1,0x10(%rcx)
   13550:	75 1e                	jne    13570 <get_usable+0x40>
   13552:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13556:	48 39 f8             	cmp    %rdi,%rax
   13559:	72 15                	jb     13570 <get_usable+0x40>
   1355b:	48 63 d2             	movslq %edx,%rdx
   1355e:	48 29 f8             	sub    %rdi,%rax
   13561:	48 6b d2 14          	imul   $0x14,%rdx,%rdx
   13565:	48 01 f2             	add    %rsi,%rdx
   13568:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1356c:	48 03 02             	add    (%rdx),%rax
   1356f:	c3                   	ret    
   13570:	ff c2                	inc    %edx
   13572:	48 83 c1 14          	add    $0x14,%rcx
   13576:	eb cf                	jmp    13547 <get_usable+0x17>
   13578:	50                   	push   %rax
   13579:	48 8d 3d eb 24 00 00 	lea    0x24eb(%rip),%rdi        # 15a6b <vmcall_panic+0x6bd>
   13580:	e8 f9 15 00 00       	call   14b7e <panic>
   13585:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   13589:	5a                   	pop    %rdx
   1358a:	c3                   	ret    

000000000001358b <init_kernel_page_tables>:
   1358b:	f3 0f 1e fa          	endbr64 
   1358f:	41 56                	push   %r14
   13591:	41 55                	push   %r13
   13593:	49 89 fd             	mov    %rdi,%r13
   13596:	48 8d 3d f7 24 00 00 	lea    0x24f7(%rip),%rdi        # 15a94 <vmcall_panic+0x6e6>
   1359d:	41 54                	push   %r12
   1359f:	49 89 f4             	mov    %rsi,%r12
   135a2:	55                   	push   %rbp
   135a3:	53                   	push   %rbx
   135a4:	48 83 ec 20          	sub    $0x20,%rsp
   135a8:	e8 b0 15 00 00       	call   14b5d <write_in_console>
   135ad:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   135b2:	0f 57 c0             	xorps  %xmm0,%xmm0
   135b5:	4c 89 ef             	mov    %r13,%rdi
   135b8:	48 89 ee             	mov    %rbp,%rsi
   135bb:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   135c0:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   135c7:	00 
   135c8:	e8 88 16 00 00       	call   14c55 <uint64_to_string>
   135cd:	48 8d 3d f0 24 00 00 	lea    0x24f0(%rip),%rdi        # 15ac4 <vmcall_panic+0x716>
   135d4:	e8 84 15 00 00       	call   14b5d <write_in_console>
   135d9:	48 89 ef             	mov    %rbp,%rdi
   135dc:	e8 7c 15 00 00       	call   14b5d <write_in_console>
   135e1:	48 8d 3d f0 24 00 00 	lea    0x24f0(%rip),%rdi        # 15ad8 <vmcall_panic+0x72a>
   135e8:	e8 70 15 00 00       	call   14b5d <write_in_console>
   135ed:	48 89 ee             	mov    %rbp,%rsi
   135f0:	4c 89 e7             	mov    %r12,%rdi
   135f3:	4c 8d 25 86 22 00 00 	lea    0x2286(%rip),%r12        # 15880 <vmcall_panic+0x4d2>
   135fa:	e8 56 16 00 00       	call   14c55 <uint64_to_string>
   135ff:	48 89 ef             	mov    %rbp,%rdi
   13602:	e8 56 15 00 00       	call   14b5d <write_in_console>
   13607:	4c 89 e7             	mov    %r12,%rdi
   1360a:	e8 4e 15 00 00       	call   14b5d <write_in_console>
   1360f:	4c 89 ef             	mov    %r13,%rdi
   13612:	e8 49 0b 00 00       	call   14160 <parse_hob_get_size>
   13617:	48 8d 3d c9 24 00 00 	lea    0x24c9(%rip),%rdi        # 15ae7 <vmcall_panic+0x739>
   1361e:	49 89 c6             	mov    %rax,%r14
   13621:	e8 37 15 00 00       	call   14b5d <write_in_console>
   13626:	48 89 ee             	mov    %rbp,%rsi
   13629:	4c 89 f7             	mov    %r14,%rdi
   1362c:	e8 24 16 00 00       	call   14c55 <uint64_to_string>
   13631:	48 89 ef             	mov    %rbp,%rdi
   13634:	e8 24 15 00 00       	call   14b5d <write_in_console>
   13639:	4c 89 e7             	mov    %r12,%rdi
   1363c:	e8 1c 15 00 00       	call   14b5d <write_in_console>
   13641:	4c 89 f6             	mov    %r14,%rsi
   13644:	4c 89 ef             	mov    %r13,%rdi
   13647:	4c 8d 35 52 7d 03 00 	lea    0x37d52(%rip),%r14        # 4b3a0 <memory_map>
   1364e:	e8 11 0c 00 00       	call   14264 <get_e820_table_from_hob>
   13653:	48 8d 3d 9e 24 00 00 	lea    0x249e(%rip),%rdi        # 15af8 <vmcall_panic+0x74a>
   1365a:	48 89 c3             	mov    %rax,%rbx
   1365d:	49 89 d5             	mov    %rdx,%r13
   13660:	89 05 22 7d 03 00    	mov    %eax,0x37d22(%rip)        # 4b388 <memory_map_num_entries>
   13666:	e8 f2 14 00 00       	call   14b5d <write_in_console>
   1366b:	48 63 db             	movslq %ebx,%rbx
   1366e:	48 89 ee             	mov    %rbp,%rsi
   13671:	48 89 df             	mov    %rbx,%rdi
   13674:	e8 dc 15 00 00       	call   14c55 <uint64_to_string>
   13679:	48 89 ef             	mov    %rbp,%rdi
   1367c:	e8 dc 14 00 00       	call   14b5d <write_in_console>
   13681:	4c 89 e7             	mov    %r12,%rdi
   13684:	e8 d4 14 00 00       	call   14b5d <write_in_console>
   13689:	48 89 ee             	mov    %rbp,%rsi
   1368c:	4c 89 f7             	mov    %r14,%rdi
   1368f:	e8 c1 15 00 00       	call   14c55 <uint64_to_string>
   13694:	48 8d 3d 8a 24 00 00 	lea    0x248a(%rip),%rdi        # 15b25 <vmcall_panic+0x777>
   1369b:	e8 bd 14 00 00       	call   14b5d <write_in_console>
   136a0:	48 89 ef             	mov    %rbp,%rdi
   136a3:	e8 b5 14 00 00       	call   14b5d <write_in_console>
   136a8:	4c 89 e7             	mov    %r12,%rdi
   136ab:	e8 ad 14 00 00       	call   14b5d <write_in_console>
   136b0:	48 6b cb 14          	imul   $0x14,%rbx,%rcx
   136b4:	4c 89 ee             	mov    %r13,%rsi
   136b7:	4c 89 f7             	mov    %r14,%rdi
   136ba:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   136bc:	48 8d 3d 7a 24 00 00 	lea    0x247a(%rip),%rdi        # 15b3d <vmcall_panic+0x78f>
   136c3:	48 8d 1d 36 d9 02 00 	lea    0x2d936(%rip),%rbx        # 41000 <pt_config>
   136ca:	e8 8e 14 00 00       	call   14b5d <write_in_console>
   136cf:	48 8d 3d a0 24 00 00 	lea    0x24a0(%rip),%rdi        # 15b76 <vmcall_panic+0x7c8>
   136d6:	e8 82 14 00 00       	call   14b5d <write_in_console>
   136db:	bf 00 00 80 00       	mov    $0x800000,%edi
   136e0:	e8 4b fe ff ff       	call   13530 <get_usable>
   136e5:	48 8d 3d a8 24 00 00 	lea    0x24a8(%rip),%rdi        # 15b94 <vmcall_panic+0x7e6>
   136ec:	49 89 c5             	mov    %rax,%r13
   136ef:	e8 69 14 00 00       	call   14b5d <write_in_console>
   136f4:	31 c0                	xor    %eax,%eax
   136f6:	b9 00 00 20 00       	mov    $0x200000,%ecx
   136fb:	4c 89 ef             	mov    %r13,%rdi
   136fe:	f3 ab                	rep stos %eax,%es:(%rdi)
   13700:	be 00 00 80 00       	mov    $0x800000,%esi
   13705:	4c 89 ef             	mov    %r13,%rdi
   13708:	e8 a8 02 00 00       	call   139b5 <kframe_allocator_init_pt>
   1370d:	48 89 ee             	mov    %rbp,%rsi
   13710:	4c 89 ef             	mov    %r13,%rdi
   13713:	e8 3d 15 00 00       	call   14c55 <uint64_to_string>
   13718:	48 89 ef             	mov    %rbp,%rdi
   1371b:	48 8d ab 00 a0 00 00 	lea    0xa000(%rbx),%rbp
   13722:	e8 36 14 00 00       	call   14b5d <write_in_console>
   13727:	4c 89 e7             	mov    %r12,%rdi
   1372a:	e8 2e 14 00 00       	call   14b5d <write_in_console>
   1372f:	bf 01 00 00 00       	mov    $0x1,%edi
   13734:	e8 69 02 00 00       	call   139a2 <kframe_allocate_range_pt>
   13739:	48 89 05 40 7c 03 00 	mov    %rax,0x37c40(%rip)        # 4b380 <pml4>
   13740:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   13744:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   13748:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
   1374f:	8b 8b 18 f0 ff ff    	mov    -0xfe8(%rbx),%ecx
   13755:	48 8b bb 00 f0 ff ff 	mov    -0x1000(%rbx),%rdi
   1375c:	e8 58 fd ff ff       	call   134b9 <map_address>
   13761:	48 39 eb             	cmp    %rbp,%rbx
   13764:	75 da                	jne    13740 <init_kernel_page_tables+0x1b5>
   13766:	48 83 c4 20          	add    $0x20,%rsp
   1376a:	5b                   	pop    %rbx
   1376b:	5d                   	pop    %rbp
   1376c:	41 5c                	pop    %r12
   1376e:	41 5d                	pop    %r13
   13770:	41 5e                	pop    %r14
   13772:	c3                   	ret    

0000000000013773 <kframe_allocator_init>:
   13773:	f3 0f 1e fa          	endbr64 
   13777:	48 89 f8             	mov    %rdi,%rax
   1377a:	4d 85 c0             	test   %r8,%r8
   1377d:	74 37                	je     137b6 <kframe_allocator_init+0x43>
   1377f:	48 85 ff             	test   %rdi,%rdi
   13782:	74 32                	je     137b6 <kframe_allocator_init+0x43>
   13784:	49 c1 e8 0c          	shr    $0xc,%r8
   13788:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   1378c:	4c 89 07             	mov    %r8,(%rdi)
   1378f:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   13793:	4c 89 47 28          	mov    %r8,0x28(%rdi)
   13797:	48 89 57 18          	mov    %rdx,0x18(%rdi)
   1379b:	31 d2                	xor    %edx,%edx
   1379d:	48 3b 50 18          	cmp    0x18(%rax),%rdx
   137a1:	73 0d                	jae    137b0 <kframe_allocator_init+0x3d>
   137a3:	48 8b 48 10          	mov    0x10(%rax),%rcx
   137a7:	c6 04 11 00          	movb   $0x0,(%rcx,%rdx,1)
   137ab:	48 ff c2             	inc    %rdx
   137ae:	eb ed                	jmp    1379d <kframe_allocator_init+0x2a>
   137b0:	b8 01 00 00 00       	mov    $0x1,%eax
   137b5:	c3                   	ret    
   137b6:	31 c0                	xor    %eax,%eax
   137b8:	c3                   	ret    

00000000000137b9 <kframe_allocate_single_frame>:
   137b9:	f3 0f 1e fa          	endbr64 
   137bd:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   137c1:	48 85 ff             	test   %rdi,%rdi
   137c4:	74 3e                	je     13804 <kframe_allocate_single_frame+0x4b>
   137c6:	48 8b 47 28          	mov    0x28(%rdi),%rax
   137ca:	48 85 c0             	test   %rax,%rax
   137cd:	74 35                	je     13804 <kframe_allocate_single_frame+0x4b>
   137cf:	48 8b 37             	mov    (%rdi),%rsi
   137d2:	31 d2                	xor    %edx,%edx
   137d4:	48 39 d6             	cmp    %rdx,%rsi
   137d7:	74 27                	je     13800 <kframe_allocate_single_frame+0x47>
   137d9:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   137dd:	48 01 d1             	add    %rdx,%rcx
   137e0:	80 39 00             	cmpb   $0x0,(%rcx)
   137e3:	75 16                	jne    137fb <kframe_allocate_single_frame+0x42>
   137e5:	48 ff c8             	dec    %rax
   137e8:	48 c1 e2 0c          	shl    $0xc,%rdx
   137ec:	48 89 47 28          	mov    %rax,0x28(%rdi)
   137f0:	c6 01 ff             	movb   $0xff,(%rcx)
   137f3:	48 8b 47 08          	mov    0x8(%rdi),%rax
   137f7:	48 01 d0             	add    %rdx,%rax
   137fa:	c3                   	ret    
   137fb:	48 ff c2             	inc    %rdx
   137fe:	eb d4                	jmp    137d4 <kframe_allocate_single_frame+0x1b>
   13800:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   13804:	c3                   	ret    

0000000000013805 <kframe_free>:
   13805:	f3 0f 1e fa          	endbr64 
   13809:	48 85 ff             	test   %rdi,%rdi
   1380c:	74 2b                	je     13839 <kframe_free+0x34>
   1380e:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   13812:	48 39 f2             	cmp    %rsi,%rdx
   13815:	77 22                	ja     13839 <kframe_free+0x34>
   13817:	48 8b 07             	mov    (%rdi),%rax
   1381a:	48 c1 e0 0c          	shl    $0xc,%rax
   1381e:	48 01 d0             	add    %rdx,%rax
   13821:	48 39 f0             	cmp    %rsi,%rax
   13824:	72 13                	jb     13839 <kframe_free+0x34>
   13826:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1382a:	48 29 d6             	sub    %rdx,%rsi
   1382d:	48 c1 ee 0c          	shr    $0xc,%rsi
   13831:	c6 04 30 00          	movb   $0x0,(%rax,%rsi,1)
   13835:	48 ff 47 28          	incq   0x28(%rdi)
   13839:	c3                   	ret    

000000000001383a <kframe_allocate_fixed>:
   1383a:	f3 0f 1e fa          	endbr64 
   1383e:	48 89 f9             	mov    %rdi,%rcx
   13841:	48 89 f0             	mov    %rsi,%rax
   13844:	48 85 ff             	test   %rdi,%rdi
   13847:	74 63                	je     138ac <kframe_allocate_fixed+0x72>
   13849:	48 8b 37             	mov    (%rdi),%rsi
   1384c:	4c 8b 47 08          	mov    0x8(%rdi),%r8
   13850:	48 c1 e6 0c          	shl    $0xc,%rsi
   13854:	4c 01 c6             	add    %r8,%rsi
   13857:	49 39 c0             	cmp    %rax,%r8
   1385a:	77 50                	ja     138ac <kframe_allocate_fixed+0x72>
   1385c:	48 89 d7             	mov    %rdx,%rdi
   1385f:	48 c1 e7 0c          	shl    $0xc,%rdi
   13863:	48 01 c7             	add    %rax,%rdi
   13866:	48 39 f7             	cmp    %rsi,%rdi
   13869:	77 41                	ja     138ac <kframe_allocate_fixed+0x72>
   1386b:	48 89 c7             	mov    %rax,%rdi
   1386e:	31 f6                	xor    %esi,%esi
   13870:	4c 29 c7             	sub    %r8,%rdi
   13873:	48 c1 ef 0c          	shr    $0xc,%rdi
   13877:	48 39 d6             	cmp    %rdx,%rsi
   1387a:	74 13                	je     1388f <kframe_allocate_fixed+0x55>
   1387c:	4c 8b 41 10          	mov    0x10(%rcx),%r8
   13880:	49 01 f0             	add    %rsi,%r8
   13883:	41 80 3c 38 ff       	cmpb   $0xff,(%r8,%rdi,1)
   13888:	74 22                	je     138ac <kframe_allocate_fixed+0x72>
   1388a:	48 ff c6             	inc    %rsi
   1388d:	eb e8                	jmp    13877 <kframe_allocate_fixed+0x3d>
   1388f:	31 f6                	xor    %esi,%esi
   13891:	48 39 d6             	cmp    %rdx,%rsi
   13894:	74 15                	je     138ab <kframe_allocate_fixed+0x71>
   13896:	4c 8b 41 10          	mov    0x10(%rcx),%r8
   1389a:	49 01 f0             	add    %rsi,%r8
   1389d:	48 ff c6             	inc    %rsi
   138a0:	41 c6 04 38 ff       	movb   $0xff,(%r8,%rdi,1)
   138a5:	48 ff 49 28          	decq   0x28(%rcx)
   138a9:	eb e6                	jmp    13891 <kframe_allocate_fixed+0x57>
   138ab:	c3                   	ret    
   138ac:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   138b0:	c3                   	ret    

00000000000138b1 <kframe_allocate_range>:
   138b1:	f3 0f 1e fa          	endbr64 
   138b5:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   138b9:	48 85 ff             	test   %rdi,%rdi
   138bc:	74 6f                	je     1392d <kframe_allocate_range+0x7c>
   138be:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
   138c2:	72 69                	jb     1392d <kframe_allocate_range+0x7c>
   138c4:	4c 8b 07             	mov    (%rdi),%r8
   138c7:	31 c9                	xor    %ecx,%ecx
   138c9:	31 d2                	xor    %edx,%edx
   138cb:	4c 39 c1             	cmp    %r8,%rcx
   138ce:	74 31                	je     13901 <kframe_allocate_range+0x50>
   138d0:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   138d4:	41 80 3c 09 00       	cmpb   $0x0,(%r9,%rcx,1)
   138d9:	75 16                	jne    138f1 <kframe_allocate_range+0x40>
   138db:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   138df:	75 0b                	jne    138ec <kframe_allocate_range+0x3b>
   138e1:	48 89 c8             	mov    %rcx,%rax
   138e4:	48 c1 e0 0c          	shl    $0xc,%rax
   138e8:	48 03 47 08          	add    0x8(%rdi),%rax
   138ec:	48 ff c2             	inc    %rdx
   138ef:	eb 06                	jmp    138f7 <kframe_allocate_range+0x46>
   138f1:	31 d2                	xor    %edx,%edx
   138f3:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   138f7:	48 39 d6             	cmp    %rdx,%rsi
   138fa:	74 0a                	je     13906 <kframe_allocate_range+0x55>
   138fc:	48 ff c1             	inc    %rcx
   138ff:	eb ca                	jmp    138cb <kframe_allocate_range+0x1a>
   13901:	48 39 d6             	cmp    %rdx,%rsi
   13904:	75 27                	jne    1392d <kframe_allocate_range+0x7c>
   13906:	48 89 c1             	mov    %rax,%rcx
   13909:	48 2b 4f 08          	sub    0x8(%rdi),%rcx
   1390d:	31 d2                	xor    %edx,%edx
   1390f:	48 c1 e9 0c          	shr    $0xc,%rcx
   13913:	48 39 d6             	cmp    %rdx,%rsi
   13916:	74 15                	je     1392d <kframe_allocate_range+0x7c>
   13918:	4c 8b 47 10          	mov    0x10(%rdi),%r8
   1391c:	49 01 c8             	add    %rcx,%r8
   1391f:	41 c6 04 10 ff       	movb   $0xff,(%r8,%rdx,1)
   13924:	48 ff c2             	inc    %rdx
   13927:	48 ff 4f 28          	decq   0x28(%rdi)
   1392b:	eb e6                	jmp    13913 <kframe_allocate_range+0x62>
   1392d:	c3                   	ret    

000000000001392e <kframe_allocate_fixed_shared>:
   1392e:	f3 0f 1e fa          	endbr64 
   13932:	48 89 f2             	mov    %rsi,%rdx
   13935:	48 89 fe             	mov    %rdi,%rsi
   13938:	48 8d 3d a1 9c 03 00 	lea    0x39ca1(%rip),%rdi        # 4d5e0 <shared_allocator>
   1393f:	e9 f6 fe ff ff       	jmp    1383a <kframe_allocate_fixed>

0000000000013944 <kframe_allocate_range_shared>:
   13944:	f3 0f 1e fa          	endbr64 
   13948:	48 89 fe             	mov    %rdi,%rsi
   1394b:	48 8d 3d 8e 9c 03 00 	lea    0x39c8e(%rip),%rdi        # 4d5e0 <shared_allocator>
   13952:	e9 5a ff ff ff       	jmp    138b1 <kframe_allocate_range>

0000000000013957 <kframe_allocator_init_shared>:
   13957:	f3 0f 1e fa          	endbr64 
   1395b:	48 89 f9             	mov    %rdi,%rcx
   1395e:	49 89 f0             	mov    %rsi,%r8
   13961:	ba 00 10 00 00       	mov    $0x1000,%edx
   13966:	48 8d 35 33 8c 03 00 	lea    0x38c33(%rip),%rsi        # 4c5a0 <shared_bitmap>
   1396d:	48 8d 3d 6c 9c 03 00 	lea    0x39c6c(%rip),%rdi        # 4d5e0 <shared_allocator>
   13974:	e9 fa fd ff ff       	jmp    13773 <kframe_allocator_init>

0000000000013979 <kframe_free_shared>:
   13979:	f3 0f 1e fa          	endbr64 
   1397d:	48 89 fe             	mov    %rdi,%rsi
   13980:	48 8d 3d 59 9c 03 00 	lea    0x39c59(%rip),%rdi        # 4d5e0 <shared_allocator>
   13987:	e9 79 fe ff ff       	jmp    13805 <kframe_free>

000000000001398c <kframe_allocate_fixed_pt>:
   1398c:	f3 0f 1e fa          	endbr64 
   13990:	48 89 f2             	mov    %rsi,%rdx
   13993:	48 89 fe             	mov    %rdi,%rsi
   13996:	48 8d 3d 03 9c 03 00 	lea    0x39c03(%rip),%rdi        # 4d5a0 <page_table_allocator>
   1399d:	e9 98 fe ff ff       	jmp    1383a <kframe_allocate_fixed>

00000000000139a2 <kframe_allocate_range_pt>:
   139a2:	f3 0f 1e fa          	endbr64 
   139a6:	48 89 fe             	mov    %rdi,%rsi
   139a9:	48 8d 3d f0 9b 03 00 	lea    0x39bf0(%rip),%rdi        # 4d5a0 <page_table_allocator>
   139b0:	e9 fc fe ff ff       	jmp    138b1 <kframe_allocate_range>

00000000000139b5 <kframe_allocator_init_pt>:
   139b5:	f3 0f 1e fa          	endbr64 
   139b9:	48 89 f9             	mov    %rdi,%rcx
   139bc:	49 89 f0             	mov    %rsi,%r8
   139bf:	ba 00 08 00 00       	mov    $0x800,%edx
   139c4:	48 8d 35 d5 83 03 00 	lea    0x383d5(%rip),%rsi        # 4bda0 <page_table_bitmap>
   139cb:	48 8d 3d ce 9b 03 00 	lea    0x39bce(%rip),%rdi        # 4d5a0 <page_table_allocator>
   139d2:	e9 9c fd ff ff       	jmp    13773 <kframe_allocator_init>

00000000000139d7 <kframe_free_pt>:
   139d7:	f3 0f 1e fa          	endbr64 
   139db:	48 89 fe             	mov    %rdi,%rsi
   139de:	48 8d 3d bb 9b 03 00 	lea    0x39bbb(%rip),%rdi        # 4d5a0 <page_table_allocator>
   139e5:	e9 1b fe ff ff       	jmp    13805 <kframe_free>

00000000000139ea <insert_sorted>:
   139ea:	48 8b 05 57 9c 03 00 	mov    0x39c57(%rip),%rax        # 4d648 <arena+0x28>
   139f1:	48 8d 15 40 9c 03 00 	lea    0x39c40(%rip),%rdx        # 4d638 <arena+0x18>
   139f8:	48 85 c0             	test   %rax,%rax
   139fb:	74 11                	je     13a0e <insert_sorted+0x24>
   139fd:	48 8b 0f             	mov    (%rdi),%rcx
   13a00:	48 39 08             	cmp    %rcx,(%rax)
   13a03:	73 09                	jae    13a0e <insert_sorted+0x24>
   13a05:	48 89 c2             	mov    %rax,%rdx
   13a08:	48 8b 40 10          	mov    0x10(%rax),%rax
   13a0c:	eb ea                	jmp    139f8 <insert_sorted+0xe>
   13a0e:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
   13a12:	48 89 47 10          	mov    %rax,0x10(%rdi)
   13a16:	c3                   	ret    

0000000000013a17 <malloc_top>:
   13a17:	48 8b 15 0a 9c 03 00 	mov    0x39c0a(%rip),%rdx        # 4d628 <arena+0x8>
   13a1e:	31 c0                	xor    %eax,%eax
   13a20:	48 39 fa             	cmp    %rdi,%rdx
   13a23:	72 22                	jb     13a47 <malloc_top+0x30>
   13a25:	48 8b 05 f4 9b 03 00 	mov    0x39bf4(%rip),%rax        # 4d620 <arena>
   13a2c:	48 29 fa             	sub    %rdi,%rdx
   13a2f:	48 89 15 f2 9b 03 00 	mov    %rdx,0x39bf2(%rip)        # 4d628 <arena+0x8>
   13a36:	48 89 38             	mov    %rdi,(%rax)
   13a39:	48 01 c7             	add    %rax,%rdi
   13a3c:	48 83 c0 10          	add    $0x10,%rax
   13a40:	48 89 3d d9 9b 03 00 	mov    %rdi,0x39bd9(%rip)        # 4d620 <arena>
   13a47:	c3                   	ret    

0000000000013a48 <init_allocator>:
   13a48:	f3 0f 1e fa          	endbr64 
   13a4c:	55                   	push   %rbp
   13a4d:	48 89 fd             	mov    %rdi,%rbp
   13a50:	53                   	push   %rbx
   13a51:	48 89 f3             	mov    %rsi,%rbx
   13a54:	52                   	push   %rdx
   13a55:	48 85 f6             	test   %rsi,%rsi
   13a58:	74 08                	je     13a62 <init_allocator+0x1a>
   13a5a:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
   13a60:	74 0c                	je     13a6e <init_allocator+0x26>
   13a62:	48 8d 3d 41 21 00 00 	lea    0x2141(%rip),%rdi        # 15baa <vmcall_panic+0x7fc>
   13a69:	e8 10 11 00 00       	call   14b7e <panic>
   13a6e:	48 8d 15 c3 9b 03 00 	lea    0x39bc3(%rip),%rdx        # 4d638 <arena+0x18>
   13a75:	31 c0                	xor    %eax,%eax
   13a77:	b9 06 00 00 00       	mov    $0x6,%ecx
   13a7c:	48 89 2d 9d 9b 03 00 	mov    %rbp,0x39b9d(%rip)        # 4d620 <arena>
   13a83:	48 89 d7             	mov    %rdx,%rdi
   13a86:	48 89 1d 9b 9b 03 00 	mov    %rbx,0x39b9b(%rip)        # 4d628 <arena+0x8>
   13a8d:	f3 ab                	rep stos %eax,%es:(%rdi)
   13a8f:	48 89 2d 9a 9b 03 00 	mov    %rbp,0x39b9a(%rip)        # 4d630 <arena+0x10>
   13a96:	58                   	pop    %rax
   13a97:	5b                   	pop    %rbx
   13a98:	5d                   	pop    %rbp
   13a99:	c3                   	ret    

0000000000013a9a <kfree>:
   13a9a:	f3 0f 1e fa          	endbr64 
   13a9e:	48 85 ff             	test   %rdi,%rdi
   13aa1:	74 63                	je     13b06 <kfree+0x6c>
   13aa3:	55                   	push   %rbp
   13aa4:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   13aa9:	48 8d 6f f0          	lea    -0x10(%rdi),%rbp
   13aad:	53                   	push   %rbx
   13aae:	48 89 fb             	mov    %rdi,%rbx
   13ab1:	51                   	push   %rcx
   13ab2:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
   13ab6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   13aba:	48 39 d1             	cmp    %rdx,%rcx
   13abd:	77 04                	ja     13ac3 <kfree+0x29>
   13abf:	a8 0f                	test   $0xf,%al
   13ac1:	74 0c                	je     13acf <kfree+0x35>
   13ac3:	48 8d 3d 09 21 00 00 	lea    0x2109(%rip),%rdi        # 15bd3 <vmcall_panic+0x825>
   13aca:	e8 af 10 00 00       	call   14b7e <panic>
   13acf:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
   13ad3:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
   13ad8:	48 39 15 41 9b 03 00 	cmp    %rdx,0x39b41(%rip)        # 4d620 <arena>
   13adf:	75 1a                	jne    13afb <kfree+0x61>
   13ae1:	48 89 2d 38 9b 03 00 	mov    %rbp,0x39b38(%rip)        # 4d620 <arena>
   13ae8:	48 01 05 39 9b 03 00 	add    %rax,0x39b39(%rip)        # 4d628 <arena+0x8>
   13aef:	48 c7 43 f0 00 00 00 	movq   $0x0,-0x10(%rbx)
   13af6:	00 
   13af7:	5a                   	pop    %rdx
   13af8:	5b                   	pop    %rbx
   13af9:	5d                   	pop    %rbp
   13afa:	c3                   	ret    
   13afb:	58                   	pop    %rax
   13afc:	48 89 ef             	mov    %rbp,%rdi
   13aff:	5b                   	pop    %rbx
   13b00:	5d                   	pop    %rbp
   13b01:	e9 e4 fe ff ff       	jmp    139ea <insert_sorted>
   13b06:	c3                   	ret    

0000000000013b07 <kmalloc>:
   13b07:	f3 0f 1e fa          	endbr64 
   13b0b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   13b10:	41 56                	push   %r14
   13b12:	41 55                	push   %r13
   13b14:	41 54                	push   %r12
   13b16:	45 31 e4             	xor    %r12d,%r12d
   13b19:	55                   	push   %rbp
   13b1a:	53                   	push   %rbx
   13b1b:	48 39 c7             	cmp    %rax,%rdi
   13b1e:	0f 87 19 01 00 00    	ja     13c3d <kmalloc+0x136>
   13b24:	4c 8d 77 10          	lea    0x10(%rdi),%r14
   13b28:	48 89 fb             	mov    %rdi,%rbx
   13b2b:	89 f5                	mov    %esi,%ebp
   13b2d:	41 f6 c6 7f          	test   $0x7f,%r14b
   13b31:	74 08                	je     13b3b <kmalloc+0x34>
   13b33:	49 83 e6 80          	and    $0xffffffffffffff80,%r14
   13b37:	49 83 ee 80          	sub    $0xffffffffffffff80,%r14
   13b3b:	85 ed                	test   %ebp,%ebp
   13b3d:	75 78                	jne    13bb7 <kmalloc+0xb0>
   13b3f:	4c 8b 25 02 9b 03 00 	mov    0x39b02(%rip),%r12        # 4d648 <arena+0x28>
   13b46:	48 8d 2d eb 9a 03 00 	lea    0x39aeb(%rip),%rbp        # 4d638 <arena+0x18>
   13b4d:	41 bd fe ff ff ff    	mov    $0xfffffffe,%r13d
   13b53:	4d 85 e4             	test   %r12,%r12
   13b56:	0f 84 d4 00 00 00    	je     13c30 <kmalloc+0x129>
   13b5c:	49 8b 04 24          	mov    (%r12),%rax
   13b60:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   13b64:	4c 39 ea             	cmp    %r13,%rdx
   13b67:	77 04                	ja     13b6d <kmalloc+0x66>
   13b69:	a8 0f                	test   $0xf,%al
   13b6b:	74 0c                	je     13b79 <kmalloc+0x72>
   13b6d:	48 8d 3d 7d 20 00 00 	lea    0x207d(%rip),%rdi        # 15bf1 <vmcall_panic+0x843>
   13b74:	e8 05 10 00 00       	call   14b7e <panic>
   13b79:	49 8b 04 24          	mov    (%r12),%rax
   13b7d:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   13b82:	49 39 c6             	cmp    %rax,%r14
   13b85:	77 28                	ja     13baf <kmalloc+0xa8>
   13b87:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   13b8b:	74 0f                	je     13b9c <kmalloc+0x95>
   13b8d:	4b 8d 3c 34          	lea    (%r12,%r14,1),%rdi
   13b91:	4c 29 f0             	sub    %r14,%rax
   13b94:	48 89 07             	mov    %rax,(%rdi)
   13b97:	e8 4e fe ff ff       	call   139ea <insert_sorted>
   13b9c:	0f 57 c0             	xorps  %xmm0,%xmm0
   13b9f:	4d 89 34 24          	mov    %r14,(%r12)
   13ba3:	49 83 c4 10          	add    $0x10,%r12
   13ba7:	41 0f 11 44 24 f8    	movups %xmm0,-0x8(%r12)
   13bad:	eb 75                	jmp    13c24 <kmalloc+0x11d>
   13baf:	4c 89 e5             	mov    %r12,%rbp
   13bb2:	49 89 d4             	mov    %rdx,%r12
   13bb5:	eb 9c                	jmp    13b53 <kmalloc+0x4c>
   13bb7:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
   13bbd:	74 0c                	je     13bcb <kmalloc+0xc4>
   13bbf:	48 8d 3d 51 20 00 00 	lea    0x2051(%rip),%rdi        # 15c17 <vmcall_panic+0x869>
   13bc6:	e8 b3 0f 00 00       	call   14b7e <panic>
   13bcb:	48 8b 05 4e 9a 03 00 	mov    0x39a4e(%rip),%rax        # 4d620 <arena>
   13bd2:	44 8d 6d ff          	lea    -0x1(%rbp),%r13d
   13bd6:	48 63 fd             	movslq %ebp,%rdi
   13bd9:	4d 63 ed             	movslq %r13d,%r13
   13bdc:	48 83 ef 10          	sub    $0x10,%rdi
   13be0:	4c 21 e8             	and    %r13,%rax
   13be3:	48 29 c7             	sub    %rax,%rdi
   13be6:	4c 21 ef             	and    %r13,%rdi
   13be9:	74 12                	je     13bfd <kmalloc+0xf6>
   13beb:	e8 27 fe ff ff       	call   13a17 <malloc_top>
   13bf0:	49 89 c4             	mov    %rax,%r12
   13bf3:	49 89 c0             	mov    %rax,%r8
   13bf6:	48 85 c0             	test   %rax,%rax
   13bf9:	75 05                	jne    13c00 <kmalloc+0xf9>
   13bfb:	eb 27                	jmp    13c24 <kmalloc+0x11d>
   13bfd:	45 31 c0             	xor    %r8d,%r8d
   13c00:	4c 89 f7             	mov    %r14,%rdi
   13c03:	e8 0f fe ff ff       	call   13a17 <malloc_top>
   13c08:	4c 89 c7             	mov    %r8,%rdi
   13c0b:	49 89 c4             	mov    %rax,%r12
   13c0e:	e8 87 fe ff ff       	call   13a9a <kfree>
   13c13:	4d 85 ec             	test   %r13,%r12
   13c16:	74 0c                	je     13c24 <kmalloc+0x11d>
   13c18:	48 8d 3d 1d 20 00 00 	lea    0x201d(%rip),%rdi        # 15c3c <vmcall_panic+0x88e>
   13c1f:	e8 5a 0f 00 00       	call   14b7e <panic>
   13c24:	31 c0                	xor    %eax,%eax
   13c26:	4c 89 e7             	mov    %r12,%rdi
   13c29:	48 89 d9             	mov    %rbx,%rcx
   13c2c:	f3 aa                	rep stos %al,%es:(%rdi)
   13c2e:	eb 0d                	jmp    13c3d <kmalloc+0x136>
   13c30:	4c 89 f7             	mov    %r14,%rdi
   13c33:	e8 df fd ff ff       	call   13a17 <malloc_top>
   13c38:	49 89 c4             	mov    %rax,%r12
   13c3b:	eb e7                	jmp    13c24 <kmalloc+0x11d>
   13c3d:	5b                   	pop    %rbx
   13c3e:	4c 89 e0             	mov    %r12,%rax
   13c41:	5d                   	pop    %rbp
   13c42:	41 5c                	pop    %r12
   13c44:	41 5d                	pop    %r13
   13c46:	41 5e                	pop    %r14
   13c48:	c3                   	ret    

0000000000013c49 <mmap>:
   13c49:	f3 0f 1e fa          	endbr64 
   13c4d:	41 56                	push   %r14
   13c4f:	41 89 d6             	mov    %edx,%r14d
   13c52:	41 55                	push   %r13
   13c54:	41 54                	push   %r12
   13c56:	49 89 fc             	mov    %rdi,%r12
   13c59:	55                   	push   %rbp
   13c5a:	53                   	push   %rbx
   13c5b:	48 89 f3             	mov    %rsi,%rbx
   13c5e:	48 85 f6             	test   %rsi,%rsi
   13c61:	74 08                	je     13c6b <mmap+0x22>
   13c63:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
   13c69:	74 0c                	je     13c77 <mmap+0x2e>
   13c6b:	48 8d 3d f6 1f 00 00 	lea    0x1ff6(%rip),%rdi        # 15c68 <vmcall_panic+0x8ba>
   13c72:	e8 07 0f 00 00       	call   14b7e <panic>
   13c77:	be 00 10 00 00       	mov    $0x1000,%esi
   13c7c:	48 89 df             	mov    %rbx,%rdi
   13c7f:	e8 83 fe ff ff       	call   13b07 <kmalloc>
   13c84:	49 89 c5             	mov    %rax,%r13
   13c87:	48 85 c0             	test   %rax,%rax
   13c8a:	74 52                	je     13cde <mmap+0x95>
   13c8c:	48 83 3d 74 73 03 00 	cmpq   $0xffffffffffffffff,0x37374(%rip)        # 4b008 <last_mmapped.1>
   13c93:	ff 
   13c94:	75 11                	jne    13ca7 <mmap+0x5e>
   13c96:	48 b8 00 f0 ff f7 ff 	movabs $0x7ffff7fff000,%rax
   13c9d:	7f 00 00 
   13ca0:	48 89 05 61 73 03 00 	mov    %rax,0x37361(%rip)        # 4b008 <last_mmapped.1>
   13ca7:	4d 85 e4             	test   %r12,%r12
   13caa:	75 11                	jne    13cbd <mmap+0x74>
   13cac:	4c 8b 25 55 73 03 00 	mov    0x37355(%rip),%r12        # 4b008 <last_mmapped.1>
   13cb3:	49 29 dc             	sub    %rbx,%r12
   13cb6:	4c 89 25 4b 73 03 00 	mov    %r12,0x3734b(%rip)        # 4b008 <last_mmapped.1>
   13cbd:	31 ed                	xor    %ebp,%ebp
   13cbf:	48 39 dd             	cmp    %rbx,%rbp
   13cc2:	73 1d                	jae    13ce1 <mmap+0x98>
   13cc4:	49 8d 74 2d 00       	lea    0x0(%r13,%rbp,1),%rsi
   13cc9:	49 8d 3c 2c          	lea    (%r12,%rbp,1),%rdi
   13ccd:	44 89 f2             	mov    %r14d,%edx
   13cd0:	48 81 c5 00 10 00 00 	add    $0x1000,%rbp
   13cd7:	e8 46 07 00 00       	call   14422 <add_trans_user>
   13cdc:	eb e1                	jmp    13cbf <mmap+0x76>
   13cde:	45 31 e4             	xor    %r12d,%r12d
   13ce1:	5b                   	pop    %rbx
   13ce2:	4c 89 e0             	mov    %r12,%rax
   13ce5:	5d                   	pop    %rbp
   13ce6:	41 5c                	pop    %r12
   13ce8:	41 5d                	pop    %r13
   13cea:	41 5e                	pop    %r14
   13cec:	c3                   	ret    

0000000000013ced <mmap_shared>:
   13ced:	f3 0f 1e fa          	endbr64 
   13cf1:	41 57                	push   %r15
   13cf3:	41 56                	push   %r14
   13cf5:	41 89 d6             	mov    %edx,%r14d
   13cf8:	41 55                	push   %r13
   13cfa:	41 54                	push   %r12
   13cfc:	49 89 fc             	mov    %rdi,%r12
   13cff:	55                   	push   %rbp
   13d00:	53                   	push   %rbx
   13d01:	48 89 f3             	mov    %rsi,%rbx
   13d04:	51                   	push   %rcx
   13d05:	48 85 f6             	test   %rsi,%rsi
   13d08:	74 08                	je     13d12 <mmap_shared+0x25>
   13d0a:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
   13d10:	74 0c                	je     13d1e <mmap_shared+0x31>
   13d12:	48 8d 3d 4f 1f 00 00 	lea    0x1f4f(%rip),%rdi        # 15c68 <vmcall_panic+0x8ba>
   13d19:	e8 60 0e 00 00       	call   14b7e <panic>
   13d1e:	be 00 10 00 00       	mov    $0x1000,%esi
   13d23:	48 89 df             	mov    %rbx,%rdi
   13d26:	e8 82 02 00 00       	call   13fad <smalloc>
   13d2b:	49 89 c5             	mov    %rax,%r13
   13d2e:	48 85 c0             	test   %rax,%rax
   13d31:	74 5f                	je     13d92 <mmap_shared+0xa5>
   13d33:	48 83 3d c5 72 03 00 	cmpq   $0xffffffffffffffff,0x372c5(%rip)        # 4b000 <last_mmapped.0>
   13d3a:	ff 
   13d3b:	75 11                	jne    13d4e <mmap_shared+0x61>
   13d3d:	48 b8 00 f0 ff f7 ff 	movabs $0x7ffff7fff000,%rax
   13d44:	7f 00 00 
   13d47:	48 89 05 b2 72 03 00 	mov    %rax,0x372b2(%rip)        # 4b000 <last_mmapped.0>
   13d4e:	4d 85 e4             	test   %r12,%r12
   13d51:	75 11                	jne    13d64 <mmap_shared+0x77>
   13d53:	4c 8b 25 a6 72 03 00 	mov    0x372a6(%rip),%r12        # 4b000 <last_mmapped.0>
   13d5a:	49 29 dc             	sub    %rbx,%r12
   13d5d:	4c 89 25 9c 72 03 00 	mov    %r12,0x3729c(%rip)        # 4b000 <last_mmapped.0>
   13d64:	49 bf 00 00 00 00 00 	movabs $0x8000000000000,%r15
   13d6b:	00 08 00 
   13d6e:	31 ed                	xor    %ebp,%ebp
   13d70:	48 39 dd             	cmp    %rbx,%rbp
   13d73:	73 20                	jae    13d95 <mmap_shared+0xa8>
   13d75:	49 8d 74 2d 00       	lea    0x0(%r13,%rbp,1),%rsi
   13d7a:	49 8d 3c 2c          	lea    (%r12,%rbp,1),%rdi
   13d7e:	44 89 f2             	mov    %r14d,%edx
   13d81:	48 81 c5 00 10 00 00 	add    $0x1000,%rbp
   13d88:	4c 09 fe             	or     %r15,%rsi
   13d8b:	e8 92 06 00 00       	call   14422 <add_trans_user>
   13d90:	eb de                	jmp    13d70 <mmap_shared+0x83>
   13d92:	45 31 e4             	xor    %r12d,%r12d
   13d95:	5a                   	pop    %rdx
   13d96:	4c 89 e0             	mov    %r12,%rax
   13d99:	5b                   	pop    %rbx
   13d9a:	5d                   	pop    %rbp
   13d9b:	41 5c                	pop    %r12
   13d9d:	41 5d                	pop    %r13
   13d9f:	41 5e                	pop    %r14
   13da1:	41 5f                	pop    %r15
   13da3:	c3                   	ret    

0000000000013da4 <mprotect>:
   13da4:	f3 0f 1e fa          	endbr64 
   13da8:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
   13dad:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
   13db3:	75 57                	jne    13e0c <mprotect+0x68>
   13db5:	41 55                	push   %r13
   13db7:	41 89 d5             	mov    %edx,%r13d
   13dba:	41 54                	push   %r12
   13dbc:	49 89 f4             	mov    %rsi,%r12
   13dbf:	55                   	push   %rbp
   13dc0:	48 89 fd             	mov    %rdi,%rbp
   13dc3:	53                   	push   %rbx
   13dc4:	31 db                	xor    %ebx,%ebx
   13dc6:	51                   	push   %rcx
   13dc7:	4c 39 e3             	cmp    %r12,%rbx
   13dca:	73 36                	jae    13e02 <mprotect+0x5e>
   13dcc:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
   13dd1:	48 89 f8             	mov    %rdi,%rax
   13dd4:	48 c1 e8 30          	shr    $0x30,%rax
   13dd8:	74 07                	je     13de1 <mprotect+0x3d>
   13dda:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   13ddf:	eb 23                	jmp    13e04 <mprotect+0x60>
   13de1:	48 89 f8             	mov    %rdi,%rax
   13de4:	48 c1 e8 27          	shr    $0x27,%rax
   13de8:	48 ff c8             	dec    %rax
   13deb:	74 ed                	je     13dda <mprotect+0x36>
   13ded:	44 89 ee             	mov    %r13d,%esi
   13df0:	e8 47 05 00 00       	call   1433c <modify_permission>
   13df5:	85 c0                	test   %eax,%eax
   13df7:	75 e1                	jne    13dda <mprotect+0x36>
   13df9:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
   13e00:	eb c5                	jmp    13dc7 <mprotect+0x23>
   13e02:	31 c0                	xor    %eax,%eax
   13e04:	5a                   	pop    %rdx
   13e05:	5b                   	pop    %rbx
   13e06:	5d                   	pop    %rbp
   13e07:	41 5c                	pop    %r12
   13e09:	41 5d                	pop    %r13
   13e0b:	c3                   	ret    
   13e0c:	c3                   	ret    

0000000000013e0d <insert_sorted>:
   13e0d:	48 8b 05 74 98 03 00 	mov    0x39874(%rip),%rax        # 4d688 <shared_arena+0x28>
   13e14:	48 8d 15 5d 98 03 00 	lea    0x3985d(%rip),%rdx        # 4d678 <shared_arena+0x18>
   13e1b:	48 85 c0             	test   %rax,%rax
   13e1e:	74 11                	je     13e31 <insert_sorted+0x24>
   13e20:	48 8b 0f             	mov    (%rdi),%rcx
   13e23:	48 39 08             	cmp    %rcx,(%rax)
   13e26:	73 09                	jae    13e31 <insert_sorted+0x24>
   13e28:	48 89 c2             	mov    %rax,%rdx
   13e2b:	48 8b 40 10          	mov    0x10(%rax),%rax
   13e2f:	eb ea                	jmp    13e1b <insert_sorted+0xe>
   13e31:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
   13e35:	48 89 47 10          	mov    %rax,0x10(%rdi)
   13e39:	c3                   	ret    

0000000000013e3a <smalloc_top>:
   13e3a:	48 8b 15 27 98 03 00 	mov    0x39827(%rip),%rdx        # 4d668 <shared_arena+0x8>
   13e41:	31 c0                	xor    %eax,%eax
   13e43:	48 39 fa             	cmp    %rdi,%rdx
   13e46:	72 22                	jb     13e6a <smalloc_top+0x30>
   13e48:	48 8b 05 11 98 03 00 	mov    0x39811(%rip),%rax        # 4d660 <shared_arena>
   13e4f:	48 29 fa             	sub    %rdi,%rdx
   13e52:	48 89 15 0f 98 03 00 	mov    %rdx,0x3980f(%rip)        # 4d668 <shared_arena+0x8>
   13e59:	48 89 38             	mov    %rdi,(%rax)
   13e5c:	48 01 c7             	add    %rax,%rdi
   13e5f:	48 83 c0 10          	add    $0x10,%rax
   13e63:	48 89 3d f6 97 03 00 	mov    %rdi,0x397f6(%rip)        # 4d660 <shared_arena>
   13e6a:	c3                   	ret    

0000000000013e6b <init_allocator_shared>:
   13e6b:	f3 0f 1e fa          	endbr64 
   13e6f:	55                   	push   %rbp
   13e70:	48 89 fd             	mov    %rdi,%rbp
   13e73:	53                   	push   %rbx
   13e74:	48 89 f3             	mov    %rsi,%rbx
   13e77:	52                   	push   %rdx
   13e78:	48 85 f6             	test   %rsi,%rsi
   13e7b:	74 08                	je     13e85 <init_allocator_shared+0x1a>
   13e7d:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
   13e83:	74 0c                	je     13e91 <init_allocator_shared+0x26>
   13e85:	48 8d 3d f3 1d 00 00 	lea    0x1df3(%rip),%rdi        # 15c7f <vmcall_panic+0x8d1>
   13e8c:	e8 ed 0c 00 00       	call   14b7e <panic>
   13e91:	48 8d 15 e0 97 03 00 	lea    0x397e0(%rip),%rdx        # 4d678 <shared_arena+0x18>
   13e98:	31 c0                	xor    %eax,%eax
   13e9a:	b9 06 00 00 00       	mov    $0x6,%ecx
   13e9f:	48 89 2d ba 97 03 00 	mov    %rbp,0x397ba(%rip)        # 4d660 <shared_arena>
   13ea6:	48 89 d7             	mov    %rdx,%rdi
   13ea9:	48 89 1d b8 97 03 00 	mov    %rbx,0x397b8(%rip)        # 4d668 <shared_arena+0x8>
   13eb0:	f3 ab                	rep stos %eax,%es:(%rdi)
   13eb2:	48 89 2d b7 97 03 00 	mov    %rbp,0x397b7(%rip)        # 4d670 <shared_arena+0x10>
   13eb9:	58                   	pop    %rax
   13eba:	5b                   	pop    %rbx
   13ebb:	5d                   	pop    %rbp
   13ebc:	c3                   	ret    

0000000000013ebd <sfree>:
   13ebd:	f3 0f 1e fa          	endbr64 
   13ec1:	41 55                	push   %r13
   13ec3:	0f 57 c0             	xorps  %xmm0,%xmm0
   13ec6:	4c 8d 2d b3 19 00 00 	lea    0x19b3(%rip),%r13        # 15880 <vmcall_panic+0x4d2>
   13ecd:	41 54                	push   %r12
   13ecf:	55                   	push   %rbp
   13ed0:	53                   	push   %rbx
   13ed1:	48 89 fb             	mov    %rdi,%rbx
   13ed4:	48 83 ec 28          	sub    $0x28,%rsp
   13ed8:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   13edd:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   13ee2:	48 89 ee             	mov    %rbp,%rsi
   13ee5:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   13eec:	00 
   13eed:	e8 63 0d 00 00       	call   14c55 <uint64_to_string>
   13ef2:	48 8d 3d af 1d 00 00 	lea    0x1daf(%rip),%rdi        # 15ca8 <vmcall_panic+0x8fa>
   13ef9:	e8 5f 0c 00 00       	call   14b5d <write_in_console>
   13efe:	48 89 ef             	mov    %rbp,%rdi
   13f01:	e8 57 0c 00 00       	call   14b5d <write_in_console>
   13f06:	4c 89 ef             	mov    %r13,%rdi
   13f09:	e8 4f 0c 00 00       	call   14b5d <write_in_console>
   13f0e:	48 85 db             	test   %rbx,%rbx
   13f11:	0f 84 8b 00 00 00    	je     13fa2 <sfree+0xe5>
   13f17:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
   13f1b:	48 89 ee             	mov    %rbp,%rsi
   13f1e:	4c 8d 63 f0          	lea    -0x10(%rbx),%r12
   13f22:	e8 2e 0d 00 00       	call   14c55 <uint64_to_string>
   13f27:	48 8d 3d 5e 16 00 00 	lea    0x165e(%rip),%rdi        # 1558c <vmcall_panic+0x1de>
   13f2e:	e8 2a 0c 00 00       	call   14b5d <write_in_console>
   13f33:	48 89 ef             	mov    %rbp,%rdi
   13f36:	e8 22 0c 00 00       	call   14b5d <write_in_console>
   13f3b:	4c 89 ef             	mov    %r13,%rdi
   13f3e:	e8 1a 0c 00 00       	call   14b5d <write_in_console>
   13f43:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
   13f47:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
   13f4c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   13f50:	48 39 d1             	cmp    %rdx,%rcx
   13f53:	77 04                	ja     13f59 <sfree+0x9c>
   13f55:	a8 0f                	test   $0xf,%al
   13f57:	74 0c                	je     13f65 <sfree+0xa8>
   13f59:	48 8d 3d 61 1d 00 00 	lea    0x1d61(%rip),%rdi        # 15cc1 <vmcall_panic+0x913>
   13f60:	e8 19 0c 00 00       	call   14b7e <panic>
   13f65:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
   13f69:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
   13f6d:	48 39 15 ec 96 03 00 	cmp    %rdx,0x396ec(%rip)        # 4d660 <shared_arena>
   13f74:	75 18                	jne    13f8e <sfree+0xd1>
   13f76:	48 01 05 eb 96 03 00 	add    %rax,0x396eb(%rip)        # 4d668 <shared_arena+0x8>
   13f7d:	4c 89 25 dc 96 03 00 	mov    %r12,0x396dc(%rip)        # 4d660 <shared_arena>
   13f84:	48 c7 43 f0 00 00 00 	movq   $0x0,-0x10(%rbx)
   13f8b:	00 
   13f8c:	eb 08                	jmp    13f96 <sfree+0xd9>
   13f8e:	4c 89 e7             	mov    %r12,%rdi
   13f91:	e8 77 fe ff ff       	call   13e0d <insert_sorted>
   13f96:	48 8d 3d 42 1d 00 00 	lea    0x1d42(%rip),%rdi        # 15cdf <vmcall_panic+0x931>
   13f9d:	e8 bb 0b 00 00       	call   14b5d <write_in_console>
   13fa2:	48 83 c4 28          	add    $0x28,%rsp
   13fa6:	5b                   	pop    %rbx
   13fa7:	5d                   	pop    %rbp
   13fa8:	41 5c                	pop    %r12
   13faa:	41 5d                	pop    %r13
   13fac:	c3                   	ret    

0000000000013fad <smalloc>:
   13fad:	f3 0f 1e fa          	endbr64 
   13fb1:	41 56                	push   %r14
   13fb3:	0f 57 c0             	xorps  %xmm0,%xmm0
   13fb6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   13fbb:	41 55                	push   %r13
   13fbd:	41 54                	push   %r12
   13fbf:	45 31 e4             	xor    %r12d,%r12d
   13fc2:	55                   	push   %rbp
   13fc3:	53                   	push   %rbx
   13fc4:	48 83 ec 20          	sub    $0x20,%rsp
   13fc8:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   13fcf:	00 
   13fd0:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   13fd5:	48 39 c7             	cmp    %rax,%rdi
   13fd8:	0f 87 72 01 00 00    	ja     14150 <smalloc+0x1a3>
   13fde:	4c 8d 77 10          	lea    0x10(%rdi),%r14
   13fe2:	49 89 fd             	mov    %rdi,%r13
   13fe5:	89 f3                	mov    %esi,%ebx
   13fe7:	41 f6 c6 7f          	test   $0x7f,%r14b
   13feb:	74 08                	je     13ff5 <smalloc+0x48>
   13fed:	49 83 e6 80          	and    $0xffffffffffffff80,%r14
   13ff1:	49 83 ee 80          	sub    $0xffffffffffffff80,%r14
   13ff5:	85 db                	test   %ebx,%ebx
   13ff7:	75 77                	jne    14070 <smalloc+0xc3>
   13ff9:	4c 8b 25 88 96 03 00 	mov    0x39688(%rip),%r12        # 4d688 <shared_arena+0x28>
   14000:	48 8d 1d 71 96 03 00 	lea    0x39671(%rip),%rbx        # 4d678 <shared_arena+0x18>
   14007:	bd fe ff ff ff       	mov    $0xfffffffe,%ebp
   1400c:	4d 85 e4             	test   %r12,%r12
   1400f:	0f 84 2e 01 00 00    	je     14143 <smalloc+0x196>
   14015:	49 8b 04 24          	mov    (%r12),%rax
   14019:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1401d:	48 39 ea             	cmp    %rbp,%rdx
   14020:	77 04                	ja     14026 <smalloc+0x79>
   14022:	a8 0f                	test   $0xf,%al
   14024:	74 0c                	je     14032 <smalloc+0x85>
   14026:	48 8d 3d c2 1c 00 00 	lea    0x1cc2(%rip),%rdi        # 15cef <vmcall_panic+0x941>
   1402d:	e8 4c 0b 00 00       	call   14b7e <panic>
   14032:	49 8b 04 24          	mov    (%r12),%rax
   14036:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   1403b:	49 39 c6             	cmp    %rax,%r14
   1403e:	77 28                	ja     14068 <smalloc+0xbb>
   14040:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   14044:	74 0f                	je     14055 <smalloc+0xa8>
   14046:	4b 8d 3c 34          	lea    (%r12,%r14,1),%rdi
   1404a:	4c 29 f0             	sub    %r14,%rax
   1404d:	48 89 07             	mov    %rax,(%rdi)
   14050:	e8 b8 fd ff ff       	call   13e0d <insert_sorted>
   14055:	0f 57 c0             	xorps  %xmm0,%xmm0
   14058:	4d 89 34 24          	mov    %r14,(%r12)
   1405c:	49 83 c4 10          	add    $0x10,%r12
   14060:	41 0f 11 44 24 f8    	movups %xmm0,-0x8(%r12)
   14066:	eb 74                	jmp    140dc <smalloc+0x12f>
   14068:	4c 89 e3             	mov    %r12,%rbx
   1406b:	49 89 d4             	mov    %rdx,%r12
   1406e:	eb 9c                	jmp    1400c <smalloc+0x5f>
   14070:	81 fb 00 10 00 00    	cmp    $0x1000,%ebx
   14076:	74 0c                	je     14084 <smalloc+0xd7>
   14078:	48 8d 3d 96 1c 00 00 	lea    0x1c96(%rip),%rdi        # 15d15 <vmcall_panic+0x967>
   1407f:	e8 fa 0a 00 00       	call   14b7e <panic>
   14084:	48 8b 05 d5 95 03 00 	mov    0x395d5(%rip),%rax        # 4d660 <shared_arena>
   1408b:	8d 6b ff             	lea    -0x1(%rbx),%ebp
   1408e:	48 63 fb             	movslq %ebx,%rdi
   14091:	48 63 ed             	movslq %ebp,%rbp
   14094:	48 83 ef 10          	sub    $0x10,%rdi
   14098:	48 21 e8             	and    %rbp,%rax
   1409b:	48 29 c7             	sub    %rax,%rdi
   1409e:	48 21 ef             	and    %rbp,%rdi
   140a1:	74 12                	je     140b5 <smalloc+0x108>
   140a3:	e8 92 fd ff ff       	call   13e3a <smalloc_top>
   140a8:	49 89 c4             	mov    %rax,%r12
   140ab:	49 89 c0             	mov    %rax,%r8
   140ae:	48 85 c0             	test   %rax,%rax
   140b1:	75 05                	jne    140b8 <smalloc+0x10b>
   140b3:	eb 27                	jmp    140dc <smalloc+0x12f>
   140b5:	45 31 c0             	xor    %r8d,%r8d
   140b8:	4c 89 f7             	mov    %r14,%rdi
   140bb:	e8 7a fd ff ff       	call   13e3a <smalloc_top>
   140c0:	4c 89 c7             	mov    %r8,%rdi
   140c3:	49 89 c4             	mov    %rax,%r12
   140c6:	e8 f2 fd ff ff       	call   13ebd <sfree>
   140cb:	49 85 ec             	test   %rbp,%r12
   140ce:	74 0c                	je     140dc <smalloc+0x12f>
   140d0:	48 8d 3d 63 1c 00 00 	lea    0x1c63(%rip),%rdi        # 15d3a <vmcall_panic+0x98c>
   140d7:	e8 a2 0a 00 00       	call   14b7e <panic>
   140dc:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   140e1:	4c 89 e7             	mov    %r12,%rdi
   140e4:	48 89 ee             	mov    %rbp,%rsi
   140e7:	e8 69 0b 00 00       	call   14c55 <uint64_to_string>
   140ec:	48 8d 3d 73 1c 00 00 	lea    0x1c73(%rip),%rdi        # 15d66 <vmcall_panic+0x9b8>
   140f3:	e8 65 0a 00 00       	call   14b5d <write_in_console>
   140f8:	48 89 ef             	mov    %rbp,%rdi
   140fb:	e8 5d 0a 00 00       	call   14b5d <write_in_console>
   14100:	48 89 ee             	mov    %rbp,%rsi
   14103:	4c 89 ef             	mov    %r13,%rdi
   14106:	e8 4a 0b 00 00       	call   14c55 <uint64_to_string>
   1410b:	48 8d 3d 6c 1c 00 00 	lea    0x1c6c(%rip),%rdi        # 15d7e <vmcall_panic+0x9d0>
   14112:	e8 46 0a 00 00       	call   14b5d <write_in_console>
   14117:	48 89 ef             	mov    %rbp,%rdi
   1411a:	e8 3e 0a 00 00       	call   14b5d <write_in_console>
   1411f:	48 8d 3d 5a 17 00 00 	lea    0x175a(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   14126:	e8 32 0a 00 00       	call   14b5d <write_in_console>
   1412b:	31 c0                	xor    %eax,%eax
   1412d:	4c 89 e7             	mov    %r12,%rdi
   14130:	4c 89 e9             	mov    %r13,%rcx
   14133:	f3 aa                	rep stos %al,%es:(%rdi)
   14135:	48 8d 3d 4b 1c 00 00 	lea    0x1c4b(%rip),%rdi        # 15d87 <vmcall_panic+0x9d9>
   1413c:	e8 1c 0a 00 00       	call   14b5d <write_in_console>
   14141:	eb 0d                	jmp    14150 <smalloc+0x1a3>
   14143:	4c 89 f7             	mov    %r14,%rdi
   14146:	e8 ef fc ff ff       	call   13e3a <smalloc_top>
   1414b:	49 89 c4             	mov    %rax,%r12
   1414e:	eb 8c                	jmp    140dc <smalloc+0x12f>
   14150:	48 83 c4 20          	add    $0x20,%rsp
   14154:	4c 89 e0             	mov    %r12,%rax
   14157:	5b                   	pop    %rbx
   14158:	5d                   	pop    %rbp
   14159:	41 5c                	pop    %r12
   1415b:	41 5d                	pop    %r13
   1415d:	41 5e                	pop    %r14
   1415f:	c3                   	ret    

0000000000014160 <parse_hob_get_size>:
   14160:	f3 0f 1e fa          	endbr64 
   14164:	66 83 7f 02 37       	cmpw   $0x37,0x2(%rdi)
   14169:	48 8b 47 30          	mov    0x30(%rdi),%rax
   1416d:	76 0a                	jbe    14179 <parse_hob_get_size+0x19>
   1416f:	66 83 3f 01          	cmpw   $0x1,(%rdi)
   14173:	75 04                	jne    14179 <parse_hob_get_size+0x19>
   14175:	48 29 f8             	sub    %rdi,%rax
   14178:	c3                   	ret    
   14179:	50                   	push   %rax
   1417a:	48 8d 3d 1f 1c 00 00 	lea    0x1c1f(%rip),%rdi        # 15da0 <vmcall_panic+0x9f2>
   14181:	e8 f8 09 00 00       	call   14b7e <panic>
   14186:	31 c0                	xor    %eax,%eax
   14188:	5a                   	pop    %rdx
   14189:	c3                   	ret    

000000000001418a <align_to_next_hob_offset>:
   1418a:	f3 0f 1e fa          	endbr64 
   1418e:	41 54                	push   %r12
   14190:	41 89 d4             	mov    %edx,%r12d
   14193:	55                   	push   %rbp
   14194:	48 89 f5             	mov    %rsi,%rbp
   14197:	53                   	push   %rbx
   14198:	48 89 fb             	mov    %rdi,%rbx
   1419b:	66 85 d2             	test   %dx,%dx
   1419e:	75 0c                	jne    141ac <align_to_next_hob_offset+0x22>
   141a0:	48 8d 3d 15 1c 00 00 	lea    0x1c15(%rip),%rdi        # 15dbc <vmcall_panic+0xa0e>
   141a7:	e8 d2 09 00 00       	call   14b7e <panic>
   141ac:	45 0f b7 e4          	movzwl %r12w,%r12d
   141b0:	49 83 c4 07          	add    $0x7,%r12
   141b4:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   141b8:	49 01 ec             	add    %rbp,%r12
   141bb:	49 39 dc             	cmp    %rbx,%r12
   141be:	72 0c                	jb     141cc <align_to_next_hob_offset+0x42>
   141c0:	48 8d 3d 26 1c 00 00 	lea    0x1c26(%rip),%rdi        # 15ded <vmcall_panic+0xa3f>
   141c7:	e8 b2 09 00 00       	call   14b7e <panic>
   141cc:	4c 89 e0             	mov    %r12,%rax
   141cf:	5b                   	pop    %rbx
   141d0:	5d                   	pop    %rbp
   141d1:	41 5c                	pop    %r12
   141d3:	c3                   	ret    

00000000000141d4 <parse_guided_hob>:
   141d4:	f3 0f 1e fa          	endbr64 
   141d8:	41 54                	push   %r12
   141da:	49 89 fc             	mov    %rdi,%r12
   141dd:	55                   	push   %rbp
   141de:	53                   	push   %rbx
   141df:	48 83 ec 20          	sub    $0x20,%rsp
   141e3:	0f b7 6f 02          	movzwl 0x2(%rdi),%ebp
   141e7:	48 83 fd 17          	cmp    $0x17,%rbp
   141eb:	77 0c                	ja     141f9 <parse_guided_hob+0x25>
   141ed:	48 8d 3d 2c 1c 00 00 	lea    0x1c2c(%rip),%rdi        # 15e20 <vmcall_panic+0xa72>
   141f4:	e8 85 09 00 00       	call   14b7e <panic>
   141f9:	48 83 ed 18          	sub    $0x18,%rbp
   141fd:	b9 14 00 00 00       	mov    $0x14,%ecx
   14202:	31 d2                	xor    %edx,%edx
   14204:	49 83 c4 18          	add    $0x18,%r12
   14208:	48 89 e8             	mov    %rbp,%rax
   1420b:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
   14210:	48 f7 f1             	div    %rcx
   14213:	48 89 f7             	mov    %rsi,%rdi
   14216:	b9 05 00 00 00       	mov    $0x5,%ecx
   1421b:	ba 14 00 00 00       	mov    $0x14,%edx
   14220:	8d 58 ff             	lea    -0x1(%rax),%ebx
   14223:	48 89 c5             	mov    %rax,%rbp
   14226:	31 c0                	xor    %eax,%eax
   14228:	f3 ab                	rep stos %eax,%es:(%rdi)
   1422a:	48 63 fb             	movslq %ebx,%rdi
   1422d:	48 6b ff 14          	imul   $0x14,%rdi,%rdi
   14231:	4c 01 e7             	add    %r12,%rdi
   14234:	e8 b2 09 00 00       	call   14beb <memcmp>
   14239:	85 c0                	test   %eax,%eax
   1423b:	0f 45 dd             	cmovne %ebp,%ebx
   1423e:	85 db                	test   %ebx,%ebx
   14240:	74 08                	je     1424a <parse_guided_hob+0x76>
   14242:	81 fb 80 00 00 00    	cmp    $0x80,%ebx
   14248:	7e 0c                	jle    14256 <parse_guided_hob+0x82>
   1424a:	48 8d 3d 02 1c 00 00 	lea    0x1c02(%rip),%rdi        # 15e53 <vmcall_panic+0xaa5>
   14251:	e8 28 09 00 00       	call   14b7e <panic>
   14256:	48 83 c4 20          	add    $0x20,%rsp
   1425a:	89 d8                	mov    %ebx,%eax
   1425c:	4c 89 e2             	mov    %r12,%rdx
   1425f:	5b                   	pop    %rbx
   14260:	5d                   	pop    %rbp
   14261:	41 5c                	pop    %r12
   14263:	c3                   	ret    

0000000000014264 <get_e820_table_from_hob>:
   14264:	f3 0f 1e fa          	endbr64 
   14268:	41 57                	push   %r15
   1426a:	41 56                	push   %r14
   1426c:	49 be ea 72 80 8f 86 	movabs $0x4b4734868f8072ea,%r14
   14273:	34 47 4b 
   14276:	41 55                	push   %r13
   14278:	49 89 fd             	mov    %rdi,%r13
   1427b:	41 54                	push   %r12
   1427d:	55                   	push   %rbp
   1427e:	31 ed                	xor    %ebp,%ebp
   14280:	53                   	push   %rbx
   14281:	48 89 f3             	mov    %rsi,%rbx
   14284:	48 83 ec 38          	sub    $0x38,%rsp
   14288:	48 39 dd             	cmp    %rbx,%rbp
   1428b:	0f 83 8c 00 00 00    	jae    1431d <get_e820_table_from_hob+0xb9>
   14291:	4d 8d 64 2d 00       	lea    0x0(%r13,%rbp,1),%r12
   14296:	66 41 83 3c 24 04    	cmpw   $0x4,(%r12)
   1429c:	66 45 8b 7c 24 02    	mov    0x2(%r12),%r15w
   142a2:	75 62                	jne    14306 <get_e820_table_from_hob+0xa2>
   142a4:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   142a9:	41 0f 10 04 24       	movups (%r12),%xmm0
   142ae:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   142b3:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   142b8:	ba 10 00 00 00       	mov    $0x10,%edx
   142bd:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   142c2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   142c7:	48 b8 86 a7 23 53 b8 	movabs $0x73878ab85323a786,%rax
   142ce:	8a 87 73 
   142d1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   142d6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   142db:	e8 0b 09 00 00       	call   14beb <memcmp>
   142e0:	85 c0                	test   %eax,%eax
   142e2:	75 22                	jne    14306 <get_e820_table_from_hob+0xa2>
   142e4:	48 8d 3d 8e 1b 00 00 	lea    0x1b8e(%rip),%rdi        # 15e79 <vmcall_panic+0xacb>
   142eb:	e8 6d 08 00 00       	call   14b5d <write_in_console>
   142f0:	48 83 c4 38          	add    $0x38,%rsp
   142f4:	4c 89 e7             	mov    %r12,%rdi
   142f7:	5b                   	pop    %rbx
   142f8:	5d                   	pop    %rbp
   142f9:	41 5c                	pop    %r12
   142fb:	41 5d                	pop    %r13
   142fd:	41 5e                	pop    %r14
   142ff:	41 5f                	pop    %r15
   14301:	e9 ce fe ff ff       	jmp    141d4 <parse_guided_hob>
   14306:	48 89 ee             	mov    %rbp,%rsi
   14309:	41 0f b7 d7          	movzwl %r15w,%edx
   1430d:	48 89 df             	mov    %rbx,%rdi
   14310:	e8 75 fe ff ff       	call   1418a <align_to_next_hob_offset>
   14315:	48 89 c5             	mov    %rax,%rbp
   14318:	e9 6b ff ff ff       	jmp    14288 <get_e820_table_from_hob+0x24>
   1431d:	48 8d 3d 78 1b 00 00 	lea    0x1b78(%rip),%rdi        # 15e9c <vmcall_panic+0xaee>
   14324:	e8 55 08 00 00       	call   14b7e <panic>
   14329:	48 83 c4 38          	add    $0x38,%rsp
   1432d:	31 c0                	xor    %eax,%eax
   1432f:	31 d2                	xor    %edx,%edx
   14331:	5b                   	pop    %rbx
   14332:	5d                   	pop    %rbp
   14333:	41 5c                	pop    %r12
   14335:	41 5d                	pop    %r13
   14337:	41 5e                	pop    %r14
   14339:	41 5f                	pop    %r15
   1433b:	c3                   	ret    

000000000001433c <modify_permission>:
   1433c:	f3 0f 1e fa          	endbr64 
   14340:	89 f1                	mov    %esi,%ecx
   14342:	be 01 00 00 00       	mov    $0x1,%esi
   14347:	48 89 fa             	mov    %rdi,%rdx
   1434a:	48 c1 ef 27          	shr    $0x27,%rdi
   1434e:	48 c1 e6 27          	shl    $0x27,%rsi
   14352:	81 e7 ff 01 00 00    	and    $0x1ff,%edi
   14358:	41 83 c8 ff          	or     $0xffffffff,%r8d
   1435c:	0f 20 d8             	mov    %cr3,%rax
   1435f:	48 09 f0             	or     %rsi,%rax
   14362:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
   14366:	a8 01                	test   $0x1,%al
   14368:	0f 84 89 00 00 00    	je     143f7 <modify_permission+0xbb>
   1436e:	48 bf 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rdi
   14375:	ff ff ff 
   14378:	49 89 d0             	mov    %rdx,%r8
   1437b:	48 21 f8             	and    %rdi,%rax
   1437e:	49 c1 e8 1e          	shr    $0x1e,%r8
   14382:	41 81 e0 ff 01 00 00 	and    $0x1ff,%r8d
   14389:	48 09 f0             	or     %rsi,%rax
   1438c:	4a 8b 04 c0          	mov    (%rax,%r8,8),%rax
   14390:	41 83 c8 ff          	or     $0xffffffff,%r8d
   14394:	a8 01                	test   $0x1,%al
   14396:	74 5f                	je     143f7 <modify_permission+0xbb>
   14398:	49 89 d0             	mov    %rdx,%r8
   1439b:	48 21 f8             	and    %rdi,%rax
   1439e:	49 c1 e8 15          	shr    $0x15,%r8
   143a2:	48 09 f0             	or     %rsi,%rax
   143a5:	41 81 e0 ff 01 00 00 	and    $0x1ff,%r8d
   143ac:	4a 8b 04 c0          	mov    (%rax,%r8,8),%rax
   143b0:	41 83 c8 ff          	or     $0xffffffff,%r8d
   143b4:	a8 01                	test   $0x1,%al
   143b6:	74 3f                	je     143f7 <modify_permission+0xbb>
   143b8:	48 21 f8             	and    %rdi,%rax
   143bb:	48 c1 ea 09          	shr    $0x9,%rdx
   143bf:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
   143c5:	48 09 f0             	or     %rsi,%rax
   143c8:	48 01 d0             	add    %rdx,%rax
   143cb:	48 8b 10             	mov    (%rax),%rdx
   143ce:	f6 c2 01             	test   $0x1,%dl
   143d1:	74 24                	je     143f7 <modify_permission+0xbb>
   143d3:	48 83 e2 f9          	and    $0xfffffffffffffff9,%rdx
   143d7:	48 89 d6             	mov    %rdx,%rsi
   143da:	48 83 ce 04          	or     $0x4,%rsi
   143de:	f6 c1 01             	test   $0x1,%cl
   143e1:	48 0f 45 d6          	cmovne %rsi,%rdx
   143e5:	83 e1 02             	and    $0x2,%ecx
   143e8:	41 89 c8             	mov    %ecx,%r8d
   143eb:	48 89 10             	mov    %rdx,(%rax)
   143ee:	74 07                	je     143f7 <modify_permission+0xbb>
   143f0:	48 83 08 02          	orq    $0x2,(%rax)
   143f4:	45 31 c0             	xor    %r8d,%r8d
   143f7:	44 89 c0             	mov    %r8d,%eax
   143fa:	c3                   	ret    

00000000000143fb <physical>:
   143fb:	f3 0f 1e fa          	endbr64 
   143ff:	48 0f ba e7 27       	bt     $0x27,%rdi
   14404:	73 09                	jae    1440f <physical+0x14>
   14406:	48 89 f8             	mov    %rdi,%rax
   14409:	48 0f ba f8 27       	btc    $0x27,%rax
   1440e:	c3                   	ret    
   1440f:	50                   	push   %rax
   14410:	48 8d 3d a3 1a 00 00 	lea    0x1aa3(%rip),%rdi        # 15eba <vmcall_panic+0xb0c>
   14417:	e8 62 07 00 00       	call   14b7e <panic>
   1441c:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   14420:	5a                   	pop    %rdx
   14421:	c3                   	ret    

0000000000014422 <add_trans_user>:
   14422:	f3 0f 1e fa          	endbr64 
   14426:	41 57                	push   %r15
   14428:	48 89 f8             	mov    %rdi,%rax
   1442b:	41 56                	push   %r14
   1442d:	41 55                	push   %r13
   1442f:	49 89 fd             	mov    %rdi,%r13
   14432:	41 54                	push   %r12
   14434:	41 89 d4             	mov    %edx,%r12d
   14437:	55                   	push   %rbp
   14438:	48 89 f5             	mov    %rsi,%rbp
   1443b:	53                   	push   %rbx
   1443c:	48 89 fb             	mov    %rdi,%rbx
   1443f:	48 c1 eb 27          	shr    $0x27,%rbx
   14443:	48 c1 e8 30          	shr    $0x30,%rax
   14447:	51                   	push   %rcx
   14448:	75 06                	jne    14450 <add_trans_user+0x2e>
   1444a:	48 83 fb 01          	cmp    $0x1,%rbx
   1444e:	75 0c                	jne    1445c <add_trans_user+0x3a>
   14450:	48 8d 3d 9d 1a 00 00 	lea    0x1a9d(%rip),%rdi        # 15ef4 <vmcall_panic+0xb46>
   14457:	e8 22 07 00 00       	call   14b7e <panic>
   1445c:	49 bf 00 00 00 00 80 	movabs $0x8000000000,%r15
   14463:	00 00 00 
   14466:	81 e3 ff 01 00 00    	and    $0x1ff,%ebx
   1446c:	48 0f ba f5 27       	btr    $0x27,%rbp
   14471:	0f 20 d8             	mov    %cr3,%rax
   14474:	4c 09 f8             	or     %r15,%rax
   14477:	4c 8d 34 d8          	lea    (%rax,%rbx,8),%r14
   1447b:	49 8b 06             	mov    (%r14),%rax
   1447e:	a8 01                	test   $0x1,%al
   14480:	75 21                	jne    144a3 <add_trans_user+0x81>
   14482:	bf 01 00 00 00       	mov    $0x1,%edi
   14487:	e8 16 f5 ff ff       	call   139a2 <kframe_allocate_range_pt>
   1448c:	4c 09 f8             	or     %r15,%rax
   1448f:	48 89 c7             	mov    %rax,%rdi
   14492:	48 89 c3             	mov    %rax,%rbx
   14495:	e8 61 ff ff ff       	call   143fb <physical>
   1449a:	48 83 c8 07          	or     $0x7,%rax
   1449e:	49 89 06             	mov    %rax,(%r14)
   144a1:	eb 22                	jmp    144c5 <add_trans_user+0xa3>
   144a3:	a8 04                	test   $0x4,%al
   144a5:	75 0c                	jne    144b3 <add_trans_user+0x91>
   144a7:	48 8d 3d 6e 1a 00 00 	lea    0x1a6e(%rip),%rdi        # 15f1c <vmcall_panic+0xb6e>
   144ae:	e8 cb 06 00 00       	call   14b7e <panic>
   144b3:	48 bb 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rbx
   144ba:	ff ff ff 
   144bd:	49 23 1e             	and    (%r14),%rbx
   144c0:	48 0f ba eb 27       	bts    $0x27,%rbx
   144c5:	4c 89 e8             	mov    %r13,%rax
   144c8:	48 c1 e8 1b          	shr    $0x1b,%rax
   144cc:	25 f8 0f 00 00       	and    $0xff8,%eax
   144d1:	48 01 c3             	add    %rax,%rbx
   144d4:	48 8b 03             	mov    (%rbx),%rax
   144d7:	a8 01                	test   $0x1,%al
   144d9:	75 23                	jne    144fe <add_trans_user+0xdc>
   144db:	bf 01 00 00 00       	mov    $0x1,%edi
   144e0:	e8 bd f4 ff ff       	call   139a2 <kframe_allocate_range_pt>
   144e5:	48 0f ba e8 27       	bts    $0x27,%rax
   144ea:	48 89 c7             	mov    %rax,%rdi
   144ed:	49 89 c6             	mov    %rax,%r14
   144f0:	e8 06 ff ff ff       	call   143fb <physical>
   144f5:	48 83 c8 07          	or     $0x7,%rax
   144f9:	48 89 03             	mov    %rax,(%rbx)
   144fc:	eb 22                	jmp    14520 <add_trans_user+0xfe>
   144fe:	a8 04                	test   $0x4,%al
   14500:	75 0c                	jne    1450e <add_trans_user+0xec>
   14502:	48 8d 3d 13 1a 00 00 	lea    0x1a13(%rip),%rdi        # 15f1c <vmcall_panic+0xb6e>
   14509:	e8 70 06 00 00       	call   14b7e <panic>
   1450e:	49 be 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%r14
   14515:	ff ff ff 
   14518:	4c 23 33             	and    (%rbx),%r14
   1451b:	49 0f ba ee 27       	bts    $0x27,%r14
   14520:	4c 89 e8             	mov    %r13,%rax
   14523:	48 c1 e8 12          	shr    $0x12,%rax
   14527:	25 f8 0f 00 00       	and    $0xff8,%eax
   1452c:	49 01 c6             	add    %rax,%r14
   1452f:	49 8b 06             	mov    (%r14),%rax
   14532:	a8 01                	test   $0x1,%al
   14534:	75 23                	jne    14559 <add_trans_user+0x137>
   14536:	bf 01 00 00 00       	mov    $0x1,%edi
   1453b:	e8 62 f4 ff ff       	call   139a2 <kframe_allocate_range_pt>
   14540:	48 0f ba e8 27       	bts    $0x27,%rax
   14545:	48 89 c7             	mov    %rax,%rdi
   14548:	48 89 c3             	mov    %rax,%rbx
   1454b:	e8 ab fe ff ff       	call   143fb <physical>
   14550:	48 83 c8 07          	or     $0x7,%rax
   14554:	49 89 06             	mov    %rax,(%r14)
   14557:	eb 22                	jmp    1457b <add_trans_user+0x159>
   14559:	a8 04                	test   $0x4,%al
   1455b:	75 0c                	jne    14569 <add_trans_user+0x147>
   1455d:	48 8d 3d b8 19 00 00 	lea    0x19b8(%rip),%rdi        # 15f1c <vmcall_panic+0xb6e>
   14564:	e8 15 06 00 00       	call   14b7e <panic>
   14569:	48 bb 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rbx
   14570:	ff ff ff 
   14573:	49 23 1e             	and    (%r14),%rbx
   14576:	48 0f ba eb 27       	bts    $0x27,%rbx
   1457b:	49 c1 ed 09          	shr    $0x9,%r13
   1457f:	48 89 e8             	mov    %rbp,%rax
   14582:	48 83 cd 01          	or     $0x1,%rbp
   14586:	41 81 e5 f8 0f 00 00 	and    $0xff8,%r13d
   1458d:	48 83 c8 05          	or     $0x5,%rax
   14591:	4c 01 eb             	add    %r13,%rbx
   14594:	41 f6 c4 01          	test   $0x1,%r12b
   14598:	48 0f 45 e8          	cmovne %rax,%rbp
   1459c:	41 80 e4 02          	and    $0x2,%r12b
   145a0:	48 89 2b             	mov    %rbp,(%rbx)
   145a3:	74 04                	je     145a9 <add_trans_user+0x187>
   145a5:	48 83 0b 02          	orq    $0x2,(%rbx)
   145a9:	48 8b 05 d0 6d 03 00 	mov    0x36dd0(%rip),%rax        # 4b380 <pml4>
   145b0:	0f 22 d8             	mov    %rax,%cr3
   145b3:	58                   	pop    %rax
   145b4:	5b                   	pop    %rbx
   145b5:	5d                   	pop    %rbp
   145b6:	41 5c                	pop    %r12
   145b8:	41 5d                	pop    %r13
   145ba:	41 5e                	pop    %r14
   145bc:	41 5f                	pop    %r15
   145be:	c3                   	ret    

00000000000145bf <translate>:
   145bf:	f3 0f 1e fa          	endbr64 
   145c3:	89 d1                	mov    %edx,%ecx
   145c5:	48 89 fa             	mov    %rdi,%rdx
   145c8:	48 c1 ea 27          	shr    $0x27,%rdx
   145cc:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   145d2:	0f 20 d8             	mov    %cr3,%rax
   145d5:	48 0f ba e8 27       	bts    $0x27,%rax
   145da:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
   145de:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   145e2:	f6 c2 01             	test   $0x1,%dl
   145e5:	0f 84 40 01 00 00    	je     1472b <translate+0x16c>
   145eb:	53                   	push   %rbx
   145ec:	48 89 fb             	mov    %rdi,%rbx
   145ef:	85 f6                	test   %esi,%esi
   145f1:	74 09                	je     145fc <translate+0x3d>
   145f3:	f6 c2 04             	test   $0x4,%dl
   145f6:	0f 84 2d 01 00 00    	je     14729 <translate+0x16a>
   145fc:	85 c9                	test   %ecx,%ecx
   145fe:	74 0d                	je     1460d <translate+0x4e>
   14600:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   14604:	f6 c2 02             	test   $0x2,%dl
   14607:	0f 84 1c 01 00 00    	je     14729 <translate+0x16a>
   1460d:	48 b8 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rax
   14614:	ff ff ff 
   14617:	48 21 c2             	and    %rax,%rdx
   1461a:	48 89 d8             	mov    %rbx,%rax
   1461d:	48 c1 e8 1e          	shr    $0x1e,%rax
   14621:	48 0f ba ea 27       	bts    $0x27,%rdx
   14626:	25 ff 01 00 00       	and    $0x1ff,%eax
   1462b:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
   1462f:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   14633:	f6 c2 01             	test   $0x1,%dl
   14636:	0f 84 ed 00 00 00    	je     14729 <translate+0x16a>
   1463c:	85 f6                	test   %esi,%esi
   1463e:	74 09                	je     14649 <translate+0x8a>
   14640:	f6 c2 04             	test   $0x4,%dl
   14643:	0f 84 e0 00 00 00    	je     14729 <translate+0x16a>
   14649:	85 c9                	test   %ecx,%ecx
   1464b:	74 0d                	je     1465a <translate+0x9b>
   1464d:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   14651:	f6 c2 02             	test   $0x2,%dl
   14654:	0f 84 cf 00 00 00    	je     14729 <translate+0x16a>
   1465a:	48 b8 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rax
   14661:	ff ff ff 
   14664:	48 21 c2             	and    %rax,%rdx
   14667:	48 89 d8             	mov    %rbx,%rax
   1466a:	48 c1 e8 15          	shr    $0x15,%rax
   1466e:	48 0f ba ea 27       	bts    $0x27,%rdx
   14673:	25 ff 01 00 00       	and    $0x1ff,%eax
   14678:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
   1467c:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   14680:	f6 c2 01             	test   $0x1,%dl
   14683:	0f 84 a0 00 00 00    	je     14729 <translate+0x16a>
   14689:	85 f6                	test   %esi,%esi
   1468b:	74 09                	je     14696 <translate+0xd7>
   1468d:	f6 c2 04             	test   $0x4,%dl
   14690:	0f 84 93 00 00 00    	je     14729 <translate+0x16a>
   14696:	85 c9                	test   %ecx,%ecx
   14698:	74 0d                	je     146a7 <translate+0xe8>
   1469a:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   1469e:	f6 c2 02             	test   $0x2,%dl
   146a1:	0f 84 82 00 00 00    	je     14729 <translate+0x16a>
   146a7:	f6 c2 80             	test   $0x80,%dl
   146aa:	74 14                	je     146c0 <translate+0x101>
   146ac:	48 89 d8             	mov    %rbx,%rax
   146af:	48 81 e2 00 00 e0 ff 	and    $0xffffffffffe00000,%rdx
   146b6:	25 ff ff 1f 00       	and    $0x1fffff,%eax
   146bb:	48 09 d0             	or     %rdx,%rax
   146be:	eb 69                	jmp    14729 <translate+0x16a>
   146c0:	48 b8 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rax
   146c7:	ff ff ff 
   146ca:	48 21 c2             	and    %rax,%rdx
   146cd:	48 89 d8             	mov    %rbx,%rax
   146d0:	48 c1 e8 0c          	shr    $0xc,%rax
   146d4:	48 0f ba ea 27       	bts    $0x27,%rdx
   146d9:	25 ff 01 00 00       	and    $0x1ff,%eax
   146de:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
   146e2:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   146e6:	40 f6 c7 01          	test   $0x1,%dil
   146ea:	74 3d                	je     14729 <translate+0x16a>
   146ec:	85 f6                	test   %esi,%esi
   146ee:	74 06                	je     146f6 <translate+0x137>
   146f0:	40 f6 c7 04          	test   $0x4,%dil
   146f4:	74 33                	je     14729 <translate+0x16a>
   146f6:	85 c9                	test   %ecx,%ecx
   146f8:	74 0a                	je     14704 <translate+0x145>
   146fa:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   146fe:	40 f6 c7 02          	test   $0x2,%dil
   14702:	74 25                	je     14729 <translate+0x16a>
   14704:	48 b8 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rax
   1470b:	ff ff ff 
   1470e:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx
   14714:	48 21 c7             	and    %rax,%rdi
   14717:	48 0f ba ef 27       	bts    $0x27,%rdi
   1471c:	e8 da fc ff ff       	call   143fb <physical>
   14721:	48 01 d8             	add    %rbx,%rax
   14724:	48 0f ba f0 33       	btr    $0x33,%rax
   14729:	5b                   	pop    %rbx
   1472a:	c3                   	ret    
   1472b:	c3                   	ret    

000000000001472c <pf_to_prot>:
   1472c:	f3 0f 1e fa          	endbr64 
   14730:	89 f8                	mov    %edi,%eax
   14732:	c1 e8 02             	shr    $0x2,%eax
   14735:	83 e0 01             	and    $0x1,%eax
   14738:	40 f6 c7 02          	test   $0x2,%dil
   1473c:	74 03                	je     14741 <pf_to_prot+0x15>
   1473e:	83 c8 02             	or     $0x2,%eax
   14741:	40 80 e7 01          	and    $0x1,%dil
   14745:	74 03                	je     1474a <pf_to_prot+0x1e>
   14747:	83 c8 04             	or     $0x4,%eax
   1474a:	c3                   	ret    

000000000001474b <set_shared_bit>:
   1474b:	f3 0f 1e fa          	endbr64 
   1474f:	41 54                	push   %r12
   14751:	49 89 f4             	mov    %rsi,%r12
   14754:	55                   	push   %rbp
   14755:	48 89 fd             	mov    %rdi,%rbp
   14758:	53                   	push   %rbx
   14759:	48 89 fb             	mov    %rdi,%rbx
   1475c:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
   14762:	74 0c                	je     14770 <set_shared_bit+0x25>
   14764:	48 8d 3d dd 17 00 00 	lea    0x17dd(%rip),%rdi        # 15f48 <vmcall_panic+0xb9a>
   1476b:	e8 0e 04 00 00       	call   14b7e <panic>
   14770:	41 f7 c4 ff 0f 00 00 	test   $0xfff,%r12d
   14777:	74 0c                	je     14785 <set_shared_bit+0x3a>
   14779:	48 8d 3d ff 17 00 00 	lea    0x17ff(%rip),%rdi        # 15f7f <vmcall_panic+0xbd1>
   14780:	e8 f9 03 00 00       	call   14b7e <panic>
   14785:	ba 01 00 00 00       	mov    $0x1,%edx
   1478a:	4c 01 e3             	add    %r12,%rbx
   1478d:	0f 28 05 1c 34 00 00 	movaps 0x341c(%rip),%xmm0        # 17bb0 <vmcall_panic+0x2802>
   14794:	48 bf 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rdi
   1479b:	ff ff ff 
   1479e:	48 c1 e2 27          	shl    $0x27,%rdx
   147a2:	0f 20 de             	mov    %cr3,%rsi
   147a5:	48 09 d6             	or     %rdx,%rsi
   147a8:	48 39 dd             	cmp    %rbx,%rbp
   147ab:	73 73                	jae    14820 <set_shared_bit+0xd5>
   147ad:	48 89 e8             	mov    %rbp,%rax
   147b0:	48 c1 e8 27          	shr    $0x27,%rax
   147b4:	25 ff 01 00 00       	and    $0x1ff,%eax
   147b9:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
   147bd:	a8 01                	test   $0x1,%al
   147bf:	74 63                	je     14824 <set_shared_bit+0xd9>
   147c1:	48 89 e9             	mov    %rbp,%rcx
   147c4:	48 21 f8             	and    %rdi,%rax
   147c7:	48 c1 e9 1e          	shr    $0x1e,%rcx
   147cb:	48 09 d0             	or     %rdx,%rax
   147ce:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   147d4:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   147d8:	a8 01                	test   $0x1,%al
   147da:	74 48                	je     14824 <set_shared_bit+0xd9>
   147dc:	48 89 e9             	mov    %rbp,%rcx
   147df:	48 21 f8             	and    %rdi,%rax
   147e2:	48 c1 e9 15          	shr    $0x15,%rcx
   147e6:	48 09 d0             	or     %rdx,%rax
   147e9:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   147ef:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   147f3:	a8 01                	test   $0x1,%al
   147f5:	74 2d                	je     14824 <set_shared_bit+0xd9>
   147f7:	48 89 e9             	mov    %rbp,%rcx
   147fa:	48 21 f8             	and    %rdi,%rax
   147fd:	48 81 c5 00 10 00 00 	add    $0x1000,%rbp
   14804:	48 c1 e9 09          	shr    $0x9,%rcx
   14808:	48 09 d0             	or     %rdx,%rax
   1480b:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
   14811:	f3 0f 7e 0c 08       	movq   (%rax,%rcx,1),%xmm1
   14816:	0f 56 c8             	orps   %xmm0,%xmm1
   14819:	66 0f d6 0c 08       	movq   %xmm1,(%rax,%rcx,1)
   1481e:	eb 88                	jmp    147a8 <set_shared_bit+0x5d>
   14820:	31 c0                	xor    %eax,%eax
   14822:	eb 03                	jmp    14827 <set_shared_bit+0xdc>
   14824:	83 c8 ff             	or     $0xffffffff,%eax
   14827:	5b                   	pop    %rbx
   14828:	5d                   	pop    %rbp
   14829:	41 5c                	pop    %r12
   1482b:	c3                   	ret    

000000000001482c <clear_shared_bit>:
   1482c:	f3 0f 1e fa          	endbr64 
   14830:	41 54                	push   %r12
   14832:	49 89 f4             	mov    %rsi,%r12
   14835:	55                   	push   %rbp
   14836:	48 89 fd             	mov    %rdi,%rbp
   14839:	53                   	push   %rbx
   1483a:	48 89 fb             	mov    %rdi,%rbx
   1483d:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
   14843:	74 0c                	je     14851 <clear_shared_bit+0x25>
   14845:	48 8d 3d 0b 17 00 00 	lea    0x170b(%rip),%rdi        # 15f57 <vmcall_panic+0xba9>
   1484c:	e8 2d 03 00 00       	call   14b7e <panic>
   14851:	ba 01 00 00 00       	mov    $0x1,%edx
   14856:	4c 01 e3             	add    %r12,%rbx
   14859:	0f 28 05 60 33 00 00 	movaps 0x3360(%rip),%xmm0        # 17bc0 <vmcall_panic+0x2812>
   14860:	48 bf 00 f0 ff ff 7f 	movabs $0xffffff7ffffff000,%rdi
   14867:	ff ff ff 
   1486a:	48 c1 e2 27          	shl    $0x27,%rdx
   1486e:	0f 20 de             	mov    %cr3,%rsi
   14871:	48 09 d6             	or     %rdx,%rsi
   14874:	48 39 dd             	cmp    %rbx,%rbp
   14877:	73 73                	jae    148ec <clear_shared_bit+0xc0>
   14879:	48 89 e8             	mov    %rbp,%rax
   1487c:	48 c1 e8 27          	shr    $0x27,%rax
   14880:	25 ff 01 00 00       	and    $0x1ff,%eax
   14885:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
   14889:	a8 01                	test   $0x1,%al
   1488b:	74 63                	je     148f0 <clear_shared_bit+0xc4>
   1488d:	48 89 e9             	mov    %rbp,%rcx
   14890:	48 21 f8             	and    %rdi,%rax
   14893:	48 c1 e9 1e          	shr    $0x1e,%rcx
   14897:	48 09 d0             	or     %rdx,%rax
   1489a:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   148a0:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   148a4:	a8 01                	test   $0x1,%al
   148a6:	74 48                	je     148f0 <clear_shared_bit+0xc4>
   148a8:	48 89 e9             	mov    %rbp,%rcx
   148ab:	48 21 f8             	and    %rdi,%rax
   148ae:	48 c1 e9 15          	shr    $0x15,%rcx
   148b2:	48 09 d0             	or     %rdx,%rax
   148b5:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   148bb:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
   148bf:	a8 01                	test   $0x1,%al
   148c1:	74 2d                	je     148f0 <clear_shared_bit+0xc4>
   148c3:	48 89 e9             	mov    %rbp,%rcx
   148c6:	48 21 f8             	and    %rdi,%rax
   148c9:	48 81 c5 00 10 00 00 	add    $0x1000,%rbp
   148d0:	48 c1 e9 09          	shr    $0x9,%rcx
   148d4:	48 09 d0             	or     %rdx,%rax
   148d7:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
   148dd:	f3 0f 7e 0c 08       	movq   (%rax,%rcx,1),%xmm1
   148e2:	0f 54 c8             	andps  %xmm0,%xmm1
   148e5:	66 0f d6 0c 08       	movq   %xmm1,(%rax,%rcx,1)
   148ea:	eb 88                	jmp    14874 <clear_shared_bit+0x48>
   148ec:	31 c0                	xor    %eax,%eax
   148ee:	eb 03                	jmp    148f3 <clear_shared_bit+0xc7>
   148f0:	83 c8 ff             	or     $0xffffffff,%eax
   148f3:	5b                   	pop    %rbx
   148f4:	5d                   	pop    %rbp
   148f5:	41 5c                	pop    %r12
   148f7:	c3                   	ret    

00000000000148f8 <access_ok>:
   148f8:	f3 0f 1e fa          	endbr64 
   148fc:	48 89 f0             	mov    %rsi,%rax
   148ff:	41 54                	push   %r12
   14901:	48 c1 e8 30          	shr    $0x30,%rax
   14905:	55                   	push   %rbp
   14906:	53                   	push   %rbx
   14907:	75 0f                	jne    14918 <access_ok+0x20>
   14909:	48 89 f0             	mov    %rsi,%rax
   1490c:	48 89 f3             	mov    %rsi,%rbx
   1490f:	48 c1 e8 27          	shr    $0x27,%rax
   14913:	48 ff c8             	dec    %rax
   14916:	75 09                	jne    14921 <access_ok+0x29>
   14918:	48 8d 3d 95 16 00 00 	lea    0x1695(%rip),%rdi        # 15fb4 <vmcall_panic+0xc06>
   1491f:	eb 72                	jmp    14993 <access_ok+0x9b>
   14921:	48 01 f2             	add    %rsi,%rdx
   14924:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   14928:	48 89 c1             	mov    %rax,%rcx
   1492b:	48 c1 e9 30          	shr    $0x30,%rcx
   1492f:	75 09                	jne    1493a <access_ok+0x42>
   14931:	48 c1 e8 27          	shr    $0x27,%rax
   14935:	48 ff c8             	dec    %rax
   14938:	75 09                	jne    14943 <access_ok+0x4b>
   1493a:	48 8d 3d 7d 16 00 00 	lea    0x167d(%rip),%rdi        # 15fbe <vmcall_panic+0xc10>
   14941:	eb 50                	jmp    14993 <access_ok+0x9b>
   14943:	48 89 d0             	mov    %rdx,%rax
   14946:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
   1494d:	41 89 fc             	mov    %edi,%r12d
   14950:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   14956:	48 05 00 10 00 00    	add    $0x1000,%rax
   1495c:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx
   14962:	48 0f 44 c2          	cmove  %rdx,%rax
   14966:	48 89 c5             	mov    %rax,%rbp
   14969:	eb 07                	jmp    14972 <access_ok+0x7a>
   1496b:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
   14972:	48 39 eb             	cmp    %rbp,%rbx
   14975:	73 25                	jae    1499c <access_ok+0xa4>
   14977:	44 89 e2             	mov    %r12d,%edx
   1497a:	be 01 00 00 00       	mov    $0x1,%esi
   1497f:	48 89 df             	mov    %rbx,%rdi
   14982:	e8 38 fc ff ff       	call   145bf <translate>
   14987:	48 ff c0             	inc    %rax
   1498a:	75 df                	jne    1496b <access_ok+0x73>
   1498c:	48 8d 3d 35 16 00 00 	lea    0x1635(%rip),%rdi        # 15fc8 <vmcall_panic+0xc1a>
   14993:	e8 c5 01 00 00       	call   14b5d <write_in_console>
   14998:	31 c0                	xor    %eax,%eax
   1499a:	eb 05                	jmp    149a1 <access_ok+0xa9>
   1499c:	b8 01 00 00 00       	mov    $0x1,%eax
   149a1:	5b                   	pop    %rbx
   149a2:	5d                   	pop    %rbp
   149a3:	41 5c                	pop    %r12
   149a5:	c3                   	ret    

00000000000149a6 <access_string_ok>:
   149a6:	f3 0f 1e fa          	endbr64 
   149aa:	55                   	push   %rbp
   149ab:	0f 57 c0             	xorps  %xmm0,%xmm0
   149ae:	53                   	push   %rbx
   149af:	48 89 fb             	mov    %rdi,%rbx
   149b2:	48 8d 3d 19 16 00 00 	lea    0x1619(%rip),%rdi        # 15fd2 <vmcall_panic+0xc24>
   149b9:	48 83 ec 28          	sub    $0x28,%rsp
   149bd:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   149c2:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   149c7:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   149ce:	00 
   149cf:	e8 89 01 00 00       	call   14b5d <write_in_console>
   149d4:	48 89 ee             	mov    %rbp,%rsi
   149d7:	48 89 df             	mov    %rbx,%rdi
   149da:	e8 76 02 00 00       	call   14c55 <uint64_to_string>
   149df:	48 89 ef             	mov    %rbp,%rdi
   149e2:	e8 76 01 00 00       	call   14b5d <write_in_console>
   149e7:	48 8d 3d 92 0e 00 00 	lea    0xe92(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   149ee:	e8 6a 01 00 00       	call   14b5d <write_in_console>
   149f3:	31 ff                	xor    %edi,%edi
   149f5:	ba 01 00 00 00       	mov    $0x1,%edx
   149fa:	48 89 de             	mov    %rbx,%rsi
   149fd:	e8 f6 fe ff ff       	call   148f8 <access_ok>
   14a02:	85 c0                	test   %eax,%eax
   14a04:	74 3c                	je     14a42 <access_string_ok+0x9c>
   14a06:	48 89 d8             	mov    %rbx,%rax
   14a09:	bd 00 10 00 00       	mov    $0x1000,%ebp
   14a0e:	48 89 df             	mov    %rbx,%rdi
   14a11:	25 ff 0f 00 00       	and    $0xfff,%eax
   14a16:	48 29 c5             	sub    %rax,%rbp
   14a19:	48 89 ee             	mov    %rbp,%rsi
   14a1c:	e8 7e 01 00 00       	call   14b9f <strnlen>
   14a21:	48 39 c5             	cmp    %rax,%rbp
   14a24:	75 0b                	jne    14a31 <access_string_ok+0x8b>
   14a26:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
   14a2a:	e8 77 ff ff ff       	call   149a6 <access_string_ok>
   14a2f:	eb 11                	jmp    14a42 <access_string_ok+0x9c>
   14a31:	48 8d 3d bd 15 00 00 	lea    0x15bd(%rip),%rdi        # 15ff5 <vmcall_panic+0xc47>
   14a38:	e8 20 01 00 00       	call   14b5d <write_in_console>
   14a3d:	b8 01 00 00 00       	mov    $0x1,%eax
   14a42:	48 83 c4 28          	add    $0x28,%rsp
   14a46:	5b                   	pop    %rbx
   14a47:	5d                   	pop    %rbp
   14a48:	c3                   	ret    

0000000000014a49 <copy_str_from_user_to_shared>:
   14a49:	f3 0f 1e fa          	endbr64 
   14a4d:	41 56                	push   %r14
   14a4f:	0f 57 c0             	xorps  %xmm0,%xmm0
   14a52:	41 54                	push   %r12
   14a54:	55                   	push   %rbp
   14a55:	48 89 fd             	mov    %rdi,%rbp
   14a58:	48 83 ec 30          	sub    $0x30,%rsp
   14a5c:	0f 11 44 24 1c       	movups %xmm0,0x1c(%rsp)
   14a61:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   14a66:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
   14a6d:	00 
   14a6e:	e8 43 01 00 00       	call   14bb6 <strlen>
   14a73:	31 f6                	xor    %esi,%esi
   14a75:	44 8d 60 01          	lea    0x1(%rax),%r12d
   14a79:	4d 63 e4             	movslq %r12d,%r12
   14a7c:	4c 89 e7             	mov    %r12,%rdi
   14a7f:	e8 29 f5 ff ff       	call   13fad <smalloc>
   14a84:	4c 89 f6             	mov    %r14,%rsi
   14a87:	48 89 c7             	mov    %rax,%rdi
   14a8a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14a8f:	e8 c1 01 00 00       	call   14c55 <uint64_to_string>
   14a94:	48 8d 3d 79 15 00 00 	lea    0x1579(%rip),%rdi        # 16014 <vmcall_panic+0xc66>
   14a9b:	e8 bd 00 00 00       	call   14b5d <write_in_console>
   14aa0:	4c 89 f7             	mov    %r14,%rdi
   14aa3:	e8 b5 00 00 00       	call   14b5d <write_in_console>
   14aa8:	48 8d 3d d1 0d 00 00 	lea    0xdd1(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   14aaf:	e8 a9 00 00 00       	call   14b5d <write_in_console>
   14ab4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   14ab9:	48 85 c0             	test   %rax,%rax
   14abc:	74 0b                	je     14ac9 <copy_str_from_user_to_shared+0x80>
   14abe:	48 89 c7             	mov    %rax,%rdi
   14ac1:	48 89 ee             	mov    %rbp,%rsi
   14ac4:	4c 89 e1             	mov    %r12,%rcx
   14ac7:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   14ac9:	48 83 c4 30          	add    $0x30,%rsp
   14acd:	5d                   	pop    %rbp
   14ace:	41 5c                	pop    %r12
   14ad0:	41 5e                	pop    %r14
   14ad2:	c3                   	ret    

0000000000014ad3 <copy_str_from_user_to_private>:
   14ad3:	f3 0f 1e fa          	endbr64 
   14ad7:	41 56                	push   %r14
   14ad9:	0f 57 c0             	xorps  %xmm0,%xmm0
   14adc:	41 54                	push   %r12
   14ade:	55                   	push   %rbp
   14adf:	48 89 fd             	mov    %rdi,%rbp
   14ae2:	48 83 ec 30          	sub    $0x30,%rsp
   14ae6:	0f 11 44 24 1c       	movups %xmm0,0x1c(%rsp)
   14aeb:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   14af0:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
   14af7:	00 
   14af8:	e8 b9 00 00 00       	call   14bb6 <strlen>
   14afd:	31 f6                	xor    %esi,%esi
   14aff:	44 8d 60 01          	lea    0x1(%rax),%r12d
   14b03:	4d 63 e4             	movslq %r12d,%r12
   14b06:	4c 89 e7             	mov    %r12,%rdi
   14b09:	e8 f9 ef ff ff       	call   13b07 <kmalloc>
   14b0e:	4c 89 f6             	mov    %r14,%rsi
   14b11:	48 89 c7             	mov    %rax,%rdi
   14b14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14b19:	e8 37 01 00 00       	call   14c55 <uint64_to_string>
   14b1e:	48 8d 3d ef 14 00 00 	lea    0x14ef(%rip),%rdi        # 16014 <vmcall_panic+0xc66>
   14b25:	e8 33 00 00 00       	call   14b5d <write_in_console>
   14b2a:	4c 89 f7             	mov    %r14,%rdi
   14b2d:	e8 2b 00 00 00       	call   14b5d <write_in_console>
   14b32:	48 8d 3d 47 0d 00 00 	lea    0xd47(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   14b39:	e8 1f 00 00 00       	call   14b5d <write_in_console>
   14b3e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   14b43:	48 85 c0             	test   %rax,%rax
   14b46:	74 0b                	je     14b53 <copy_str_from_user_to_private+0x80>
   14b48:	48 89 c7             	mov    %rax,%rdi
   14b4b:	48 89 ee             	mov    %rbp,%rsi
   14b4e:	4c 89 e1             	mov    %r12,%rcx
   14b51:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   14b53:	48 83 c4 30          	add    $0x30,%rsp
   14b57:	5d                   	pop    %rbp
   14b58:	41 5c                	pop    %r12
   14b5a:	41 5e                	pop    %r14
   14b5c:	c3                   	ret    

0000000000014b5d <write_in_console>:
   14b5d:	f3 0f 1e fa          	endbr64 
   14b61:	53                   	push   %rbx
   14b62:	48 89 fb             	mov    %rdi,%rbx
   14b65:	0f b6 33             	movzbl (%rbx),%esi
   14b68:	48 ff c3             	inc    %rbx
   14b6b:	40 84 f6             	test   %sil,%sil
   14b6e:	74 0c                	je     14b7c <write_in_console+0x1f>
   14b70:	bf f8 03 00 00       	mov    $0x3f8,%edi
   14b75:	e8 1f 04 00 00       	call   14f99 <tdvmcall_io_write_8>
   14b7a:	eb e9                	jmp    14b65 <write_in_console+0x8>
   14b7c:	5b                   	pop    %rbx
   14b7d:	c3                   	ret    

0000000000014b7e <panic>:
   14b7e:	f3 0f 1e fa          	endbr64 
   14b82:	50                   	push   %rax
   14b83:	e8 d5 ff ff ff       	call   14b5d <write_in_console>
   14b88:	be 0a 00 00 00       	mov    $0xa,%esi
   14b8d:	bf f8 03 00 00       	mov    $0x3f8,%edi
   14b92:	e8 02 04 00 00       	call   14f99 <tdvmcall_io_write_8>
   14b97:	31 c0                	xor    %eax,%eax
   14b99:	5a                   	pop    %rdx
   14b9a:	e9 fd 00 00 00       	jmp    14c9c <tdvmcall_halt>

0000000000014b9f <strnlen>:
   14b9f:	f3 0f 1e fa          	endbr64 
   14ba3:	31 c0                	xor    %eax,%eax
   14ba5:	48 39 f0             	cmp    %rsi,%rax
   14ba8:	74 0b                	je     14bb5 <strnlen+0x16>
   14baa:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
   14bae:	74 05                	je     14bb5 <strnlen+0x16>
   14bb0:	48 ff c0             	inc    %rax
   14bb3:	eb f0                	jmp    14ba5 <strnlen+0x6>
   14bb5:	c3                   	ret    

0000000000014bb6 <strlen>:
   14bb6:	f3 0f 1e fa          	endbr64 
   14bba:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
   14bc1:	ff ff 7f 
   14bc4:	eb d9                	jmp    14b9f <strnlen>

0000000000014bc6 <memset>:
   14bc6:	f3 0f 1e fa          	endbr64 
   14bca:	48 89 f8             	mov    %rdi,%rax
   14bcd:	31 c9                	xor    %ecx,%ecx
   14bcf:	48 39 ca             	cmp    %rcx,%rdx
   14bd2:	74 09                	je     14bdd <memset+0x17>
   14bd4:	40 88 34 08          	mov    %sil,(%rax,%rcx,1)
   14bd8:	48 ff c1             	inc    %rcx
   14bdb:	eb f2                	jmp    14bcf <memset+0x9>
   14bdd:	c3                   	ret    

0000000000014bde <memcpy>:
   14bde:	f3 0f 1e fa          	endbr64 
   14be2:	48 89 f8             	mov    %rdi,%rax
   14be5:	48 89 d1             	mov    %rdx,%rcx
   14be8:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   14bea:	c3                   	ret    

0000000000014beb <memcmp>:
   14beb:	f3 0f 1e fa          	endbr64 
   14bef:	31 c9                	xor    %ecx,%ecx
   14bf1:	48 39 ca             	cmp    %rcx,%rdx
   14bf4:	74 1b                	je     14c11 <memcmp+0x26>
   14bf6:	8a 04 0f             	mov    (%rdi,%rcx,1),%al
   14bf9:	48 ff c1             	inc    %rcx
   14bfc:	44 8a 44 0e ff       	mov    -0x1(%rsi,%rcx,1),%r8b
   14c01:	44 38 c0             	cmp    %r8b,%al
   14c04:	74 eb                	je     14bf1 <memcmp+0x6>
   14c06:	45 0f b6 c0          	movzbl %r8b,%r8d
   14c0a:	0f b6 c0             	movzbl %al,%eax
   14c0d:	44 29 c0             	sub    %r8d,%eax
   14c10:	c3                   	ret    
   14c11:	31 c0                	xor    %eax,%eax
   14c13:	c3                   	ret    

0000000000014c14 <HexToAscii>:
   14c14:	f3 0f 1e fa          	endbr64 
   14c18:	31 c0                	xor    %eax,%eax
   14c1a:	39 c2                	cmp    %eax,%edx
   14c1c:	76 36                	jbe    14c54 <HexToAscii+0x40>
   14c1e:	8a 0c 07             	mov    (%rdi,%rax,1),%cl
   14c21:	41 89 c8             	mov    %ecx,%r8d
   14c24:	83 e1 0f             	and    $0xf,%ecx
   14c27:	41 c0 e8 04          	shr    $0x4,%r8b
   14c2b:	45 8d 48 30          	lea    0x30(%r8),%r9d
   14c2f:	41 80 f8 09          	cmp    $0x9,%r8b
   14c33:	76 04                	jbe    14c39 <HexToAscii+0x25>
   14c35:	45 8d 48 37          	lea    0x37(%r8),%r9d
   14c39:	44 88 0c 46          	mov    %r9b,(%rsi,%rax,2)
   14c3d:	44 8d 41 37          	lea    0x37(%rcx),%r8d
   14c41:	80 f9 09             	cmp    $0x9,%cl
   14c44:	77 04                	ja     14c4a <HexToAscii+0x36>
   14c46:	44 8d 41 30          	lea    0x30(%rcx),%r8d
   14c4a:	44 88 44 46 01       	mov    %r8b,0x1(%rsi,%rax,2)
   14c4f:	48 ff c0             	inc    %rax
   14c52:	eb c6                	jmp    14c1a <HexToAscii+0x6>
   14c54:	c3                   	ret    

0000000000014c55 <uint64_to_string>:
   14c55:	f3 0f 1e fa          	endbr64 
   14c59:	52                   	push   %rdx
   14c5a:	ba 08 00 00 00       	mov    $0x8,%edx
   14c5f:	48 89 3c 24          	mov    %rdi,(%rsp)
   14c63:	48 89 e7             	mov    %rsp,%rdi
   14c66:	e8 a9 ff ff ff       	call   14c14 <HexToAscii>
   14c6b:	48 8d 46 0e          	lea    0xe(%rsi),%rax
   14c6f:	48 8d 56 06          	lea    0x6(%rsi),%rdx
   14c73:	8a 0e                	mov    (%rsi),%cl
   14c75:	40 8a 38             	mov    (%rax),%dil
   14c78:	48 83 e8 02          	sub    $0x2,%rax
   14c7c:	48 83 c6 02          	add    $0x2,%rsi
   14c80:	40 88 7e fe          	mov    %dil,-0x2(%rsi)
   14c84:	40 8a 78 03          	mov    0x3(%rax),%dil
   14c88:	88 48 02             	mov    %cl,0x2(%rax)
   14c8b:	8a 4e ff             	mov    -0x1(%rsi),%cl
   14c8e:	40 88 7e ff          	mov    %dil,-0x1(%rsi)
   14c92:	88 48 03             	mov    %cl,0x3(%rax)
   14c95:	48 39 d0             	cmp    %rdx,%rax
   14c98:	75 d9                	jne    14c73 <uint64_to_string+0x1e>
   14c9a:	58                   	pop    %rax
   14c9b:	c3                   	ret    

0000000000014c9c <tdvmcall_halt>:
   14c9c:	f3 0f 1e fa          	endbr64 
   14ca0:	48 83 ec 38          	sub    $0x38,%rsp
   14ca4:	9c                   	pushf  
   14ca5:	5a                   	pop    %rdx
   14ca6:	48 c1 ea 09          	shr    $0x9,%rdx
   14caa:	48 89 e7             	mov    %rsp,%rdi
   14cad:	31 c0                	xor    %eax,%eax
   14caf:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14cb4:	f3 ab                	rep stos %eax,%es:(%rdi)
   14cb6:	48 83 f2 01          	xor    $0x1,%rdx
   14cba:	48 89 e1             	mov    %rsp,%rcx
   14cbd:	48 83 ec 20          	sub    $0x20,%rsp
   14cc1:	48 c7 44 24 28 0c 00 	movq   $0xc,0x28(%rsp)
   14cc8:	00 00 
   14cca:	83 e2 01             	and    $0x1,%edx
   14ccd:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   14cd2:	31 d2                	xor    %edx,%edx
   14cd4:	e8 58 06 00 00       	call   15331 <asm_td_vmcall>
   14cd9:	48 83 c4 58          	add    $0x58,%rsp
   14cdd:	c3                   	ret    

0000000000014cde <tdcall_get_td_info>:
   14cde:	f3 0f 1e fa          	endbr64 
   14ce2:	41 54                	push   %r12
   14ce4:	31 c0                	xor    %eax,%eax
   14ce6:	49 89 fc             	mov    %rdi,%r12
   14ce9:	b9 10 00 00 00       	mov    $0x10,%ecx
   14cee:	48 83 ec 50          	sub    $0x50,%rsp
   14cf2:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   14cf9:	00 00 
   14cfb:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   14d00:	f3 ab                	rep stos %eax,%es:(%rdi)
   14d02:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14d07:	48 83 ec 20          	sub    $0x20,%rsp
   14d0b:	e8 aa 05 00 00       	call   152ba <asm_td_call>
   14d10:	48 83 c4 20          	add    $0x20,%rsp
   14d14:	85 c0                	test   %eax,%eax
   14d16:	74 07                	je     14d1f <tdcall_get_td_info+0x41>
   14d18:	31 c0                	xor    %eax,%eax
   14d1a:	e8 7d ff ff ff       	call   14c9c <tdvmcall_halt>
   14d1f:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   14d24:	31 c0                	xor    %eax,%eax
   14d26:	b9 06 00 00 00       	mov    $0x6,%ecx
   14d2b:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   14d30:	f3 ab                	rep stos %eax,%es:(%rdi)
   14d32:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14d37:	41 89 54 24 14       	mov    %edx,0x14(%r12)
   14d3c:	83 e0 3f             	and    $0x3f,%eax
   14d3f:	49 89 04 24          	mov    %rax,(%r12)
   14d43:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14d48:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   14d4d:	48 89 d0             	mov    %rdx,%rax
   14d50:	48 c1 e8 20          	shr    $0x20,%rax
   14d54:	41 89 44 24 10       	mov    %eax,0x10(%r12)
   14d59:	48 83 c4 50          	add    $0x50,%rsp
   14d5d:	4c 89 e0             	mov    %r12,%rax
   14d60:	41 5c                	pop    %r12
   14d62:	c3                   	ret    

0000000000014d63 <tdcall_get_ve_info>:
   14d63:	f3 0f 1e fa          	endbr64 
   14d67:	41 54                	push   %r12
   14d69:	31 c0                	xor    %eax,%eax
   14d6b:	49 89 fc             	mov    %rdi,%r12
   14d6e:	b9 10 00 00 00       	mov    $0x10,%ecx
   14d73:	48 83 ec 50          	sub    $0x50,%rsp
   14d77:	48 c7 44 24 08 03 00 	movq   $0x3,0x8(%rsp)
   14d7e:	00 00 
   14d80:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   14d85:	f3 ab                	rep stos %eax,%es:(%rdi)
   14d87:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14d8c:	48 83 ec 20          	sub    $0x20,%rsp
   14d90:	e8 25 05 00 00       	call   152ba <asm_td_call>
   14d95:	48 83 c4 20          	add    $0x20,%rsp
   14d99:	85 c0                	test   %eax,%eax
   14d9b:	74 07                	je     14da4 <tdcall_get_ve_info+0x41>
   14d9d:	31 c0                	xor    %eax,%eax
   14d9f:	e8 f8 fe ff ff       	call   14c9c <tdvmcall_halt>
   14da4:	31 c0                	xor    %eax,%eax
   14da6:	4c 89 e7             	mov    %r12,%rdi
   14da9:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14dae:	f3 ab                	rep stos %eax,%es:(%rdi)
   14db0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14db5:	41 89 04 24          	mov    %eax,(%r12)
   14db9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14dbe:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   14dc3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   14dc8:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   14dcd:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   14dd2:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   14dd7:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   14ddc:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   14de1:	48 83 c4 50          	add    $0x50,%rsp
   14de5:	4c 89 e0             	mov    %r12,%rax
   14de8:	41 5c                	pop    %r12
   14dea:	c3                   	ret    

0000000000014deb <tdvmcall_cpuid>:
   14deb:	f3 0f 1e fa          	endbr64 
   14def:	48 83 ec 38          	sub    $0x38,%rsp
   14df3:	41 89 f8             	mov    %edi,%r8d
   14df6:	31 c0                	xor    %eax,%eax
   14df8:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14dfd:	48 89 e7             	mov    %rsp,%rdi
   14e00:	31 d2                	xor    %edx,%edx
   14e02:	f3 ab                	rep stos %eax,%es:(%rdi)
   14e04:	44 89 c0             	mov    %r8d,%eax
   14e07:	48 89 e1             	mov    %rsp,%rcx
   14e0a:	48 83 ec 20          	sub    $0x20,%rsp
   14e0e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14e13:	89 f0                	mov    %esi,%eax
   14e15:	48 c7 44 24 28 0a 00 	movq   $0xa,0x28(%rsp)
   14e1c:	00 00 
   14e1e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14e23:	e8 09 05 00 00       	call   15331 <asm_td_vmcall>
   14e28:	48 83 c4 20          	add    $0x20,%rsp
   14e2c:	48 85 c0             	test   %rax,%rax
   14e2f:	74 07                	je     14e38 <tdvmcall_cpuid+0x4d>
   14e31:	31 c0                	xor    %eax,%eax
   14e33:	e8 64 fe ff ff       	call   14c9c <tdvmcall_halt>
   14e38:	8b 54 24 18          	mov    0x18(%rsp),%edx
   14e3c:	8b 44 24 10          	mov    0x10(%rsp),%eax
   14e40:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   14e44:	48 c1 e2 20          	shl    $0x20,%rdx
   14e48:	48 09 d0             	or     %rdx,%rax
   14e4b:	8b 54 24 20          	mov    0x20(%rsp),%edx
   14e4f:	48 c1 e1 20          	shl    $0x20,%rcx
   14e53:	48 83 c4 38          	add    $0x38,%rsp
   14e57:	48 09 ca             	or     %rcx,%rdx
   14e5a:	c3                   	ret    

0000000000014e5b <tdvmcall_sti_halt>:
   14e5b:	f3 0f 1e fa          	endbr64 
   14e5f:	48 83 ec 38          	sub    $0x38,%rsp
   14e63:	31 c0                	xor    %eax,%eax
   14e65:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14e6a:	ba 01 00 00 00       	mov    $0x1,%edx
   14e6f:	48 89 e7             	mov    %rsp,%rdi
   14e72:	f3 ab                	rep stos %eax,%es:(%rdi)
   14e74:	48 89 e1             	mov    %rsp,%rcx
   14e77:	48 83 ec 20          	sub    $0x20,%rsp
   14e7b:	48 c7 44 24 28 0c 00 	movq   $0xc,0x28(%rsp)
   14e82:	00 00 
   14e84:	e8 a8 04 00 00       	call   15331 <asm_td_vmcall>
   14e89:	48 83 c4 58          	add    $0x58,%rsp
   14e8d:	c3                   	ret    

0000000000014e8e <tdvmcall_io_read_8>:
   14e8e:	f3 0f 1e fa          	endbr64 
   14e92:	48 83 ec 38          	sub    $0x38,%rsp
   14e96:	41 89 f8             	mov    %edi,%r8d
   14e99:	31 c0                	xor    %eax,%eax
   14e9b:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14ea0:	48 89 e7             	mov    %rsp,%rdi
   14ea3:	45 0f b7 c0          	movzwl %r8w,%r8d
   14ea7:	31 d2                	xor    %edx,%edx
   14ea9:	f3 ab                	rep stos %eax,%es:(%rdi)
   14eab:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   14eb0:	48 89 e1             	mov    %rsp,%rcx
   14eb3:	48 83 ec 20          	sub    $0x20,%rsp
   14eb7:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   14ebe:	00 00 
   14ec0:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   14ec7:	00 00 
   14ec9:	e8 63 04 00 00       	call   15331 <asm_td_vmcall>
   14ece:	48 83 c4 20          	add    $0x20,%rsp
   14ed2:	48 85 c0             	test   %rax,%rax
   14ed5:	74 07                	je     14ede <tdvmcall_io_read_8+0x50>
   14ed7:	31 c0                	xor    %eax,%eax
   14ed9:	e8 be fd ff ff       	call   14c9c <tdvmcall_halt>
   14ede:	8a 44 24 08          	mov    0x8(%rsp),%al
   14ee2:	48 83 c4 38          	add    $0x38,%rsp
   14ee6:	c3                   	ret    

0000000000014ee7 <tdvmcall_io_read_16>:
   14ee7:	f3 0f 1e fa          	endbr64 
   14eeb:	48 83 ec 38          	sub    $0x38,%rsp
   14eef:	41 89 f8             	mov    %edi,%r8d
   14ef2:	31 c0                	xor    %eax,%eax
   14ef4:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14ef9:	48 89 e7             	mov    %rsp,%rdi
   14efc:	45 0f b7 c0          	movzwl %r8w,%r8d
   14f00:	31 d2                	xor    %edx,%edx
   14f02:	f3 ab                	rep stos %eax,%es:(%rdi)
   14f04:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   14f09:	48 89 e1             	mov    %rsp,%rcx
   14f0c:	48 83 ec 20          	sub    $0x20,%rsp
   14f10:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   14f17:	00 00 
   14f19:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   14f20:	00 00 
   14f22:	e8 0a 04 00 00       	call   15331 <asm_td_vmcall>
   14f27:	48 83 c4 20          	add    $0x20,%rsp
   14f2b:	48 85 c0             	test   %rax,%rax
   14f2e:	74 07                	je     14f37 <tdvmcall_io_read_16+0x50>
   14f30:	31 c0                	xor    %eax,%eax
   14f32:	e8 65 fd ff ff       	call   14c9c <tdvmcall_halt>
   14f37:	8b 44 24 08          	mov    0x8(%rsp),%eax
   14f3b:	48 83 c4 38          	add    $0x38,%rsp
   14f3f:	c3                   	ret    

0000000000014f40 <tdvmcall_io_read_32>:
   14f40:	f3 0f 1e fa          	endbr64 
   14f44:	48 83 ec 38          	sub    $0x38,%rsp
   14f48:	41 89 f8             	mov    %edi,%r8d
   14f4b:	31 c0                	xor    %eax,%eax
   14f4d:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14f52:	48 89 e7             	mov    %rsp,%rdi
   14f55:	45 0f b7 c0          	movzwl %r8w,%r8d
   14f59:	31 d2                	xor    %edx,%edx
   14f5b:	f3 ab                	rep stos %eax,%es:(%rdi)
   14f5d:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   14f62:	48 89 e1             	mov    %rsp,%rcx
   14f65:	48 83 ec 20          	sub    $0x20,%rsp
   14f69:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   14f70:	00 00 
   14f72:	48 c7 44 24 30 04 00 	movq   $0x4,0x30(%rsp)
   14f79:	00 00 
   14f7b:	e8 b1 03 00 00       	call   15331 <asm_td_vmcall>
   14f80:	48 83 c4 20          	add    $0x20,%rsp
   14f84:	48 85 c0             	test   %rax,%rax
   14f87:	74 07                	je     14f90 <tdvmcall_io_read_32+0x50>
   14f89:	31 c0                	xor    %eax,%eax
   14f8b:	e8 0c fd ff ff       	call   14c9c <tdvmcall_halt>
   14f90:	8b 44 24 08          	mov    0x8(%rsp),%eax
   14f94:	48 83 c4 38          	add    $0x38,%rsp
   14f98:	c3                   	ret    

0000000000014f99 <tdvmcall_io_write_8>:
   14f99:	f3 0f 1e fa          	endbr64 
   14f9d:	48 83 ec 38          	sub    $0x38,%rsp
   14fa1:	0f b7 ff             	movzwl %di,%edi
   14fa4:	40 0f b6 f6          	movzbl %sil,%esi
   14fa8:	31 d2                	xor    %edx,%edx
   14faa:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   14fb1:	00 
   14fb2:	48 89 e1             	mov    %rsp,%rcx
   14fb5:	48 83 ec 20          	sub    $0x20,%rsp
   14fb9:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   14fc0:	00 00 
   14fc2:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   14fc9:	00 00 
   14fcb:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   14fd2:	00 00 
   14fd4:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   14fd9:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   14fde:	e8 4e 03 00 00       	call   15331 <asm_td_vmcall>
   14fe3:	48 83 c4 20          	add    $0x20,%rsp
   14fe7:	48 85 c0             	test   %rax,%rax
   14fea:	74 07                	je     14ff3 <tdvmcall_io_write_8+0x5a>
   14fec:	31 c0                	xor    %eax,%eax
   14fee:	e8 a9 fc ff ff       	call   14c9c <tdvmcall_halt>
   14ff3:	48 83 c4 38          	add    $0x38,%rsp
   14ff7:	c3                   	ret    

0000000000014ff8 <tdvmcall_io_write_16>:
   14ff8:	f3 0f 1e fa          	endbr64 
   14ffc:	48 83 ec 38          	sub    $0x38,%rsp
   15000:	0f b7 ff             	movzwl %di,%edi
   15003:	0f b7 f6             	movzwl %si,%esi
   15006:	31 d2                	xor    %edx,%edx
   15008:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1500f:	00 
   15010:	48 89 e1             	mov    %rsp,%rcx
   15013:	48 83 ec 20          	sub    $0x20,%rsp
   15017:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   1501e:	00 00 
   15020:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   15027:	00 00 
   15029:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   15030:	00 00 
   15032:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   15037:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   1503c:	e8 f0 02 00 00       	call   15331 <asm_td_vmcall>
   15041:	48 83 c4 20          	add    $0x20,%rsp
   15045:	48 85 c0             	test   %rax,%rax
   15048:	74 07                	je     15051 <tdvmcall_io_write_16+0x59>
   1504a:	31 c0                	xor    %eax,%eax
   1504c:	e8 4b fc ff ff       	call   14c9c <tdvmcall_halt>
   15051:	48 83 c4 38          	add    $0x38,%rsp
   15055:	c3                   	ret    

0000000000015056 <tdvmcall_io_write_32>:
   15056:	f3 0f 1e fa          	endbr64 
   1505a:	48 83 ec 38          	sub    $0x38,%rsp
   1505e:	0f b7 ff             	movzwl %di,%edi
   15061:	89 f0                	mov    %esi,%eax
   15063:	31 d2                	xor    %edx,%edx
   15065:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1506c:	00 
   1506d:	48 89 e1             	mov    %rsp,%rcx
   15070:	48 83 ec 20          	sub    $0x20,%rsp
   15074:	48 c7 44 24 28 1e 00 	movq   $0x1e,0x28(%rsp)
   1507b:	00 00 
   1507d:	48 c7 44 24 30 04 00 	movq   $0x4,0x30(%rsp)
   15084:	00 00 
   15086:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   1508d:	00 00 
   1508f:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   15094:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   15099:	e8 93 02 00 00       	call   15331 <asm_td_vmcall>
   1509e:	48 83 c4 20          	add    $0x20,%rsp
   150a2:	48 85 c0             	test   %rax,%rax
   150a5:	74 07                	je     150ae <tdvmcall_io_write_32+0x58>
   150a7:	31 c0                	xor    %eax,%eax
   150a9:	e8 ee fb ff ff       	call   14c9c <tdvmcall_halt>
   150ae:	48 83 c4 38          	add    $0x38,%rsp
   150b2:	c3                   	ret    

00000000000150b3 <tdvmcall_rdmsr>:
   150b3:	f3 0f 1e fa          	endbr64 
   150b7:	41 54                	push   %r12
   150b9:	41 89 f8             	mov    %edi,%r8d
   150bc:	31 c0                	xor    %eax,%eax
   150be:	b9 0c 00 00 00       	mov    $0xc,%ecx
   150c3:	55                   	push   %rbp
   150c4:	31 d2                	xor    %edx,%edx
   150c6:	48 83 ec 58          	sub    $0x58,%rsp
   150ca:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   150cf:	f3 ab                	rep stos %eax,%es:(%rdi)
   150d1:	44 89 c0             	mov    %r8d,%eax
   150d4:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   150d9:	48 83 ec 20          	sub    $0x20,%rsp
   150dd:	48 c7 44 24 48 1f 00 	movq   $0x1f,0x48(%rsp)
   150e4:	00 00 
   150e6:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   150eb:	e8 41 02 00 00       	call   15331 <asm_td_vmcall>
   150f0:	48 83 c4 20          	add    $0x20,%rsp
   150f4:	48 85 c0             	test   %rax,%rax
   150f7:	74 4a                	je     15143 <tdvmcall_rdmsr+0x90>
   150f9:	48 89 c5             	mov    %rax,%rbp
   150fc:	48 8d 3d 2c 0f 00 00 	lea    0xf2c(%rip),%rdi        # 1602f <vmcall_panic+0xc81>
   15103:	4c 8d 64 24 0c       	lea    0xc(%rsp),%r12
   15108:	e8 50 fa ff ff       	call   14b5d <write_in_console>
   1510d:	0f 57 c0             	xorps  %xmm0,%xmm0
   15110:	4c 89 e6             	mov    %r12,%rsi
   15113:	48 89 ef             	mov    %rbp,%rdi
   15116:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   1511b:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   15122:	00 
   15123:	e8 2d fb ff ff       	call   14c55 <uint64_to_string>
   15128:	4c 89 e7             	mov    %r12,%rdi
   1512b:	e8 2d fa ff ff       	call   14b5d <write_in_console>
   15130:	48 8d 3d 49 07 00 00 	lea    0x749(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   15137:	e8 21 fa ff ff       	call   14b5d <write_in_console>
   1513c:	31 c0                	xor    %eax,%eax
   1513e:	e8 59 fb ff ff       	call   14c9c <tdvmcall_halt>
   15143:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   15148:	48 83 c4 58          	add    $0x58,%rsp
   1514c:	5d                   	pop    %rbp
   1514d:	41 5c                	pop    %r12
   1514f:	c3                   	ret    

0000000000015150 <tdvmcall_wrmsr>:
   15150:	f3 0f 1e fa          	endbr64 
   15154:	41 55                	push   %r13
   15156:	31 c0                	xor    %eax,%eax
   15158:	41 89 fd             	mov    %edi,%r13d
   1515b:	b9 0c 00 00 00       	mov    $0xc,%ecx
   15160:	41 54                	push   %r12
   15162:	49 89 f4             	mov    %rsi,%r12
   15165:	55                   	push   %rbp
   15166:	48 83 ec 50          	sub    $0x50,%rsp
   1516a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1516f:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   15174:	f3 ab                	rep stos %eax,%es:(%rdi)
   15176:	48 8d 3d cf 0e 00 00 	lea    0xecf(%rip),%rdi        # 1604c <vmcall_panic+0xc9e>
   1517d:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   15182:	48 c7 44 24 28 20 00 	movq   $0x20,0x28(%rsp)
   15189:	00 00 
   1518b:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   15190:	e8 c8 f9 ff ff       	call   14b5d <write_in_console>
   15195:	0f 57 c0             	xorps  %xmm0,%xmm0
   15198:	48 89 ee             	mov    %rbp,%rsi
   1519b:	4c 89 ef             	mov    %r13,%rdi
   1519e:	0f 11 44 24 0c       	movups %xmm0,0xc(%rsp)
   151a3:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   151aa:	00 
   151ab:	e8 a5 fa ff ff       	call   14c55 <uint64_to_string>
   151b0:	48 89 ef             	mov    %rbp,%rdi
   151b3:	e8 a5 f9 ff ff       	call   14b5d <write_in_console>
   151b8:	48 8d 3d 83 0e 00 00 	lea    0xe83(%rip),%rdi        # 16042 <vmcall_panic+0xc94>
   151bf:	e8 99 f9 ff ff       	call   14b5d <write_in_console>
   151c4:	48 89 ee             	mov    %rbp,%rsi
   151c7:	4c 89 e7             	mov    %r12,%rdi
   151ca:	e8 86 fa ff ff       	call   14c55 <uint64_to_string>
   151cf:	48 89 ef             	mov    %rbp,%rdi
   151d2:	e8 86 f9 ff ff       	call   14b5d <write_in_console>
   151d7:	48 8d 3d a2 06 00 00 	lea    0x6a2(%rip),%rdi        # 15880 <vmcall_panic+0x4d2>
   151de:	e8 7a f9 ff ff       	call   14b5d <write_in_console>
   151e3:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   151e8:	31 d2                	xor    %edx,%edx
   151ea:	48 83 ec 20          	sub    $0x20,%rsp
   151ee:	e8 3e 01 00 00       	call   15331 <asm_td_vmcall>
   151f3:	48 83 c4 20          	add    $0x20,%rsp
   151f7:	48 85 c0             	test   %rax,%rax
   151fa:	74 07                	je     15203 <tdvmcall_wrmsr+0xb3>
   151fc:	31 c0                	xor    %eax,%eax
   151fe:	e8 99 fa ff ff       	call   14c9c <tdvmcall_halt>
   15203:	48 83 c4 50          	add    $0x50,%rsp
   15207:	5d                   	pop    %rbp
   15208:	41 5c                	pop    %r12
   1520a:	41 5d                	pop    %r13
   1520c:	c3                   	ret    

000000000001520d <tdvmcall_mapgpa>:
   1520d:	f3 0f 1e fa          	endbr64 
   15211:	41 54                	push   %r12
   15213:	41 89 fc             	mov    %edi,%r12d
   15216:	55                   	push   %rbp
   15217:	48 89 d5             	mov    %rdx,%rbp
   1521a:	53                   	push   %rbx
   1521b:	48 89 f3             	mov    %rsi,%rbx
   1521e:	48 83 ec 60          	sub    $0x60,%rsp
   15222:	48 83 3d 66 84 03 00 	cmpq   $0x0,0x38466(%rip)        # 4d690 <SHARED_MASK>
   15229:	00 
   1522a:	75 35                	jne    15261 <tdvmcall_mapgpa+0x54>
   1522c:	31 c0                	xor    %eax,%eax
   1522e:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   15233:	e8 a6 fa ff ff       	call   14cde <tdcall_get_td_info>
   15238:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1523d:	41 83 c8 ff          	or     $0xffffffff,%r8d
   15241:	89 c1                	mov    %eax,%ecx
   15243:	83 e0 3b             	and    $0x3b,%eax
   15246:	83 e1 3f             	and    $0x3f,%ecx
   15249:	3c 30                	cmp    $0x30,%al
   1524b:	75 61                	jne    152ae <tdvmcall_mapgpa+0xa1>
   1524d:	0f b6 c9             	movzbl %cl,%ecx
   15250:	b8 01 00 00 00       	mov    $0x1,%eax
   15255:	ff c9                	dec    %ecx
   15257:	48 d3 e0             	shl    %cl,%rax
   1525a:	48 89 05 2f 84 03 00 	mov    %rax,0x3842f(%rip)        # 4d690 <SHARED_MASK>
   15261:	48 8b 05 28 84 03 00 	mov    0x38428(%rip),%rax        # 4d690 <SHARED_MASK>
   15268:	45 84 e4             	test   %r12b,%r12b
   1526b:	74 05                	je     15272 <tdvmcall_mapgpa+0x65>
   1526d:	48 09 c3             	or     %rax,%rbx
   15270:	eb 06                	jmp    15278 <tdvmcall_mapgpa+0x6b>
   15272:	48 f7 d0             	not    %rax
   15275:	48 21 c3             	and    %rax,%rbx
   15278:	31 c0                	xor    %eax,%eax
   1527a:	48 89 e7             	mov    %rsp,%rdi
   1527d:	b9 0c 00 00 00       	mov    $0xc,%ecx
   15282:	31 d2                	xor    %edx,%edx
   15284:	f3 ab                	rep stos %eax,%es:(%rdi)
   15286:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1528b:	48 89 e1             	mov    %rsp,%rcx
   1528e:	48 83 ec 20          	sub    $0x20,%rsp
   15292:	48 c7 44 24 28 01 00 	movq   $0x10001,0x28(%rsp)
   15299:	01 00 
   1529b:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   152a0:	e8 8c 00 00 00       	call   15331 <asm_td_vmcall>
   152a5:	48 83 c4 20          	add    $0x20,%rsp
   152a9:	f7 d8                	neg    %eax
   152ab:	45 19 c0             	sbb    %r8d,%r8d
   152ae:	48 83 c4 60          	add    $0x60,%rsp
   152b2:	44 89 c0             	mov    %r8d,%eax
   152b5:	5b                   	pop    %rbx
   152b6:	5d                   	pop    %rbp
   152b7:	41 5c                	pop    %r12
   152b9:	c3                   	ret    

00000000000152ba <asm_td_call>:
   152ba:	f3 0f 1e fa          	endbr64 
   152be:	55                   	push   %rbp
   152bf:	48 89 e5             	mov    %rsp,%rbp
   152c2:	41 57                	push   %r15
   152c4:	41 56                	push   %r14
   152c6:	41 55                	push   %r13
   152c8:	41 54                	push   %r12
   152ca:	53                   	push   %rbx
   152cb:	56                   	push   %rsi
   152cc:	57                   	push   %rdi
   152cd:	48 89 cf             	mov    %rcx,%rdi
   152d0:	48 85 ff             	test   %rdi,%rdi
   152d3:	74 4f                	je     15324 <td_call_exit>
   152d5:	48 8b 07             	mov    (%rdi),%rax
   152d8:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   152dc:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   152e0:	4c 8b 47 18          	mov    0x18(%rdi),%r8
   152e4:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
   152e8:	4c 8b 57 28          	mov    0x28(%rdi),%r10
   152ec:	4c 8b 5f 30          	mov    0x30(%rdi),%r11
   152f0:	4c 8b 67 38          	mov    0x38(%rdi),%r12
   152f4:	4c 8b 6f 40          	mov    0x40(%rdi),%r13
   152f8:	66 0f 01 cc          	tdcall 
   152fc:	48 85 c0             	test   %rax,%rax
   152ff:	75 23                	jne    15324 <td_call_exit>
   15301:	48 89 07             	mov    %rax,(%rdi)
   15304:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   15308:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1530c:	4c 89 47 18          	mov    %r8,0x18(%rdi)
   15310:	4c 89 4f 20          	mov    %r9,0x20(%rdi)
   15314:	4c 89 57 28          	mov    %r10,0x28(%rdi)
   15318:	4c 89 5f 30          	mov    %r11,0x30(%rdi)
   1531c:	4c 89 67 38          	mov    %r12,0x38(%rdi)
   15320:	4c 89 6f 40          	mov    %r13,0x40(%rdi)

0000000000015324 <td_call_exit>:
   15324:	5f                   	pop    %rdi
   15325:	5e                   	pop    %rsi
   15326:	5b                   	pop    %rbx
   15327:	41 5c                	pop    %r12
   15329:	41 5d                	pop    %r13
   1532b:	41 5e                	pop    %r14
   1532d:	41 5f                	pop    %r15
   1532f:	5d                   	pop    %rbp
   15330:	c3                   	ret    

0000000000015331 <asm_td_vmcall>:
   15331:	f3 0f 1e fa          	endbr64 
   15335:	55                   	push   %rbp
   15336:	48 89 e5             	mov    %rsp,%rbp
   15339:	41 57                	push   %r15
   1533b:	41 56                	push   %r14
   1533d:	41 55                	push   %r13
   1533f:	41 54                	push   %r12
   15341:	53                   	push   %rbx
   15342:	56                   	push   %rsi
   15343:	57                   	push   %rdi
   15344:	48 89 cf             	mov    %rcx,%rdi
   15347:	48 89 d6             	mov    %rdx,%rsi
   1534a:	48 85 ff             	test   %rdi,%rdi
   1534d:	74 4c                	je     1539b <vmcall_exit>
   1534f:	4c 8b 17             	mov    (%rdi),%r10
   15352:	4c 8b 5f 08          	mov    0x8(%rdi),%r11
   15356:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   1535a:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   1535e:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   15362:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   15366:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   1536d:	b9 00 fc 00 00       	mov    $0xfc00,%ecx
   15372:	48 85 f6             	test   %rsi,%rsi
   15375:	74 01                	je     15378 <asm_td_vmcall+0x47>
   15377:	fb                   	sti    
   15378:	66 0f 01 cc          	tdcall 
   1537c:	48 85 c0             	test   %rax,%rax
   1537f:	75 2d                	jne    153ae <vmcall_panic>
   15381:	4c 89 17             	mov    %r10,(%rdi)
   15384:	4c 89 5f 08          	mov    %r11,0x8(%rdi)
   15388:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   1538c:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   15390:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   15394:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   15398:	4c 89 d0             	mov    %r10,%rax

000000000001539b <vmcall_exit>:
   1539b:	4d 31 d2             	xor    %r10,%r10
   1539e:	4d 31 db             	xor    %r11,%r11
   153a1:	5f                   	pop    %rdi
   153a2:	5e                   	pop    %rsi
   153a3:	5b                   	pop    %rbx
   153a4:	41 5c                	pop    %r12
   153a6:	41 5d                	pop    %r13
   153a8:	41 5e                	pop    %r14
   153aa:	41 5f                	pop    %r15
   153ac:	5d                   	pop    %rbp
   153ad:	c3                   	ret    

00000000000153ae <vmcall_panic>:
   153ae:	0f 0b                	ud2    
